<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2013 The Android Open Source Project

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->


<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="com.example.android.storageprovider"
          android:versionCode="1"
          android:versionName="1.0">

    <!-- Min/target SDK versions (<uses-sdk>) managed by build.gradle -->

    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>

    <application
        android:allowBackup="true"
        android:label="@string/app_name"
        android:icon="@drawable/ic_launcher"
        android:theme="@style/MyAppTheme">

        <activity
            android:name=".MainActivity"
            android:uiOptions="splitActionBarWhenNarrow"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <!--BEGIN_INCLUDE(provider_manifest)-->
        <!--
        Declare the document provider class MyCloudProvider to the system.  The MANAGE_DOCUMENTS
        permission belongs only to the Android system, ensuring this provider will never be used
        directly by another app.  The provider must grant URI permissions in order to expose the
        specific documents(s) chosen, while not sharing all of its data by default.  It must be
        exported to be visible outside the application, and it must include a filter with the intent
        "android.content.action.DOCUMENTS_PROVIDER" in order to be shown in the system document
        picker UI.
        -->
        <provider
            android:name="com.example.android.storageprovider.MyCloudProvider"
            android:authorities="com.example.android.storageprovider.documents"
            android:grantUriPermissions="true"
            android:exported="true"
            android:permission="android.permission.MANAGE_DOCUMENTS">
            <intent-filter>
                <action android:name="android.content.action.DOCUMENTS_PROVIDER"/>
            </intent-filter>
        </provider>
        <!--END_INCLUDE(provider_manifest)-->

    </application>

</manifest>
