reading Blort.class...
method <init> ()V
first 0007
block 0000
  pred 0005
  Blort.java:2@0001: Rop{invoke-direct . <- Ljava/lang/Object; call throws <any
  >}(java.lang.Object.<init>:()V catch) . <- v0:NffffLBlort;
  next 0006
block 0005
  pred 0007
  Blort.java:2@0000: move-param-object(0) v0:"this"NffffLBlort; <- .
  Blort.java:2@0000: goto . <- .
  next 0000
block 0006
  pred 0000
  Blort.java:2@0004: return-void . <- .
  returns
block 0007
  @????: goto . <- .
  next 0005

method methodThatNeedsInvokeRange (IIIIII)V
first 0003
block 0001
  pred 0003
  Blort.java:6@0000: move-param-int(0) v0:"a"I <- .
  Blort.java:6@0000: move-param-int(1) v1:"b"I <- .
  Blort.java:6@0000: move-param-int(2) v2:"c"I <- .
  Blort.java:6@0000: move-param-int(3) v3:"d"I <- .
  Blort.java:6@0000: move-param-int(4) v4:"e"I <- .
  Blort.java:6@0000: move-param-int(5) v5:"f"I <- .
  Blort.java:6@0000: goto . <- .
  next 0002
block 0002
  pred 0001
  Blort.java:6@0000: return-void . <- .
  returns
block 0003
  @????: goto . <- .
  next 0001

method testNoLocals ()V
first 000c
block 0000
  pred 000a
  @????: move-int v2:I=5 <- v0:I=5
  @????: move-int v3:I=0 <- v1:I=0
  @????: move-int v4:I=5 <- v0:I=5
  @????: move-int v5:I=0 <- v1:I=0
  Blort.java:9@0006: Rop{invoke-static . <- I I I I I I call throws <any>}(Blor
  t.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v0:I=5 v1:I=0 v2:I=5 v3:I=
  0 v4:I=5 v5:I=0
  next 000b
block 000a
  pred 000c
  Blort.java:9@0000: move-param-object(0) v6:"this"LBlort; <- .
  Blort.java:9@0000: goto . <- .
  next 0000
block 000b
  pred 0000
  Blort.java:10@0009: return-void . <- .
  returns
block 000c
  @????: const-int(5) v0:I=5 <- .
  @????: const-int(0) v1:I=0 <- .
  @????: goto . <- .
  next 000a

method testMixedLocals ()V
first 001b
block 0000
  pred 0019
  Blort.java:13@0000: const-int(6) v0:I=6 <- .
  @????: mark-local-int . <- v0:"src"I
  Blort.java:14@0003: const-int(7) v2:I=7 <- .
  @????: mark-local-int . <- v2:"dest"I
  @????: move-int v5:I=0 <- v1:I=0
  Blort.java:16@000c: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v0:I v1:I=0 v2:I v3:I=1 v
  4:I=5 v5:I=0
  next 000f
block 000f
  pred 0000
  @????: move-int v5:I=0 <- v1:I=0
  Blort.java:17@0015: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v0:I v1:I=0 v2:I v3:I=1 v
  4:I=5 v5:I=0
  next 001a
block 0019
  pred 001b
  Blort.java:13@0000: move-param-object(0) v6:"this"LBlort; <- .
  Blort.java:13@0000: goto . <- .
  next 0000
block 001a
  pred 000f
  Blort.java:18@0018: return-void . <- .
  returns
block 001b
  @????: const-int(5) v4:I=5 <- .
  @????: const-int(1) v3:I=1 <- .
  @????: const-int(0) v1:I=0 <- .
  @????: goto . <- .
  next 0019

method testMixedWorseCase ()V
first 001d
block 0000
  pred 001b
  Blort.java:24@0000: const-int(6) v0:I=6 <- .
  @????: mark-local-int . <- v0:"src"I
  Blort.java:25@0003: const-int(7) v2:I=7 <- .
  @????: mark-local-int . <- v2:"dest"I
  Blort.java:26@0006: const-int(0) v1:I=0 <- .
  @????: mark-local-int . <- v1:"zero"I
  Blort.java:28@000e: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v0:I v1:I v2:I v3:I=1 v4:
  I=5 v5:I=0
  next 0011
block 0011
  pred 0000
  @????: move-int v6:I <- v0:I
  @????: move-int v7:I=0 <- v5:I=0
  @????: move-int v8:I <- v2:I
  @????: move-int v9:I=1 <- v3:I=1
  @????: move-int v10:I=5 <- v4:I=5
  @????: move-int v11:I=0 <- v5:I=0
  Blort.java:29@0017: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v6:I v7:I=0 v8:I v9:I=1 v
  10:I=5 v11:I=0
  next 001c
block 001b
  pred 001d
  Blort.java:24@0000: move-param-object(0) v12:"this"LBlort; <- .
  Blort.java:24@0000: goto . <- .
  next 0000
block 001c
  pred 0011
  Blort.java:30@001a: return-void . <- .
  returns
block 001d
  @????: const-int(5) v4:I=5 <- .
  @????: const-int(1) v3:I=1 <- .
  @????: const-int(0) v5:I=0 <- .
  @????: goto . <- .
  next 001b

method testAllParams (IIIIII)V
first 000f
block 0000
  pred 000d
  Blort.java:33@0009: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v1:I v2:I v3:I v4:I v5:I 
  v6:I
  next 000e
block 000d
  pred 000f
  Blort.java:33@0000: move-param-object(0) v0:"this"LBlort; <- .
  Blort.java:33@0000: move-param-int(1) v1:"a"I <- .
  Blort.java:33@0000: move-param-int(2) v2:"b"I <- .
  Blort.java:33@0000: move-param-int(3) v3:"c"I <- .
  Blort.java:33@0000: move-param-int(4) v4:"d"I <- .
  Blort.java:33@0000: move-param-int(5) v5:"e"I <- .
  Blort.java:33@0000: move-param-int(6) v6:"f"I <- .
  Blort.java:33@0000: goto . <- .
  next 0000
block 000e
  pred 0000
  Blort.java:34@000c: return-void . <- .
  returns
block 000f
  @????: goto . <- .
  next 000d

method testTailParams (II)V
first 0012
block 0000
  pred 0010
  Blort.java:38@0000: const-int(6) v0:I=6 <- .
  @????: mark-local-int . <- v0:"src"I
  Blort.java:39@0003: const-int(7) v2:I=7 <- .
  @????: mark-local-int . <- v2:"dest"I
  @????: move-int v3:I=0 <- v1:I=0
  @????: move-int v4:I <- v6:I
  @????: move-int v5:I <- v7:I
  Blort.java:41@000c: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v0:I v1:I=0 v2:I v3:I=0 v
  4:I v5:I
  next 0011
block 0010
  pred 0012
  Blort.java:38@0000: move-param-int(0) v6:"destPos"I <- .
  Blort.java:38@0000: move-param-int(1) v7:"length"I <- .
  Blort.java:38@0000: goto . <- .
  next 0000
block 0011
  pred 0000
  Blort.java:42@000f: return-void . <- .
  returns
block 0012
  @????: const-int(0) v1:I=0 <- .
  @????: goto . <- .
  next 0010

method testFlip ()V
first 001b
block 0000
  pred 0019
  Blort.java:47@0000: const-int(6) v0:I=6 <- .
  @????: mark-local-int . <- v0:"src"I
  Blort.java:48@0003: const-int(7) v2:I=7 <- .
  @????: mark-local-int . <- v2:"dest"I
  @????: move-int v5:I=0 <- v1:I=0
  Blort.java:50@000c: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v0:I v1:I=0 v2:I v3:I=1 v
  4:I=5 v5:I=0
  next 000f
block 000f
  pred 0000
  @????: move-int v5:I <- v2:I
  @????: move-int v6:I=0 <- v1:I=0
  @????: move-int v7:I <- v0:I
  @????: move-int v8:I=1 <- v3:I=1
  @????: move-int v9:I=5 <- v4:I=5
  @????: move-int v10:I=0 <- v1:I=0
  Blort.java:51@0015: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v5:I v6:I=0 v7:I v8:I=1 v
  9:I=5 v10:I=0
  next 001a
block 0019
  pred 001b
  Blort.java:47@0000: move-param-object(0) v11:"this"LBlort; <- .
  Blort.java:47@0000: goto . <- .
  next 0000
block 001a
  pred 000f
  Blort.java:52@0018: return-void . <- .
  returns
block 001b
  @????: const-int(5) v4:I=5 <- .
  @????: const-int(1) v3:I=1 <- .
  @????: const-int(0) v1:I=0 <- .
  @????: goto . <- .
  next 0019

method testMixedCategory (Z)J
first 0026
block 0000
  pred 001e
  Blort.java:57@0001: if-eqz-int . <- v9:I
  next 0004 *
  next 001a
block 0004
  pred 0000
  Blort.java:58@0004: const-int(1) v3:I=1 <- .
  @????: mark-local-int . <- v3:"offset"I
  Blort.java:59@0006: const-int(6) v0:I=6 <- .
  @????: mark-local-int . <- v0:"src"I
  Blort.java:60@0009: const-int(7) v2:I=7 <- .
  @????: mark-local-int . <- v2:"dest"I
  Blort.java:62@0012: const-int(5) v4:I=5 <- .
  @????: move-int v5:I=0 <- v1:I=0
  Blort.java:62@0014: Rop{invoke-static . <- I I I I I I call throws <any>}(Blo
  rt.methodThatNeedsInvokeRange:(IIIIII)V catch) . <- v0:I v1:I=0 v2:I v3:I v4:
  I=5 v5:I=0
  next 0017
block 0017
  pred 0004
  Blort.java:63@0018: conv-i2l v6:J <- v3:I
  Blort.java:63@0019: goto . <- .
  next 001f
block 001a
  pred 0000
  Blort.java:65@001a: Rop{invoke-static . <- . call throws <any>}(java.lang.Sys
  tem.currentTimeMillis:()J catch) . <- .
  next 0025
block 001d
  pred 0025
  @????: mark-local-long . <- v6:"offset"J
  Blort.java:66@001f: goto . <- .
  next 001f
block 001e
  pred 0026
  Blort.java:57@0000: move-param-object(0) v8:"this"LBlort; <- .
  Blort.java:57@0000: move-param-int(1) v9:"foo"Z <- .
  Blort.java:57@0000: goto . <- .
  next 0000
block 001f
  pred 0017
  pred 001d
  Blort.java:66@001f: return-long . <- v6:J
  returns
block 0025
  pred 001a
  Blort.java:65@001a: Rop{move-result J <- . flows} v6:J <- .
  Blort.java:65@001a: goto . <- .
  next 001d
block 0026
  @????: const-int(0) v1:I=0 <- .
  @????: goto . <- .
  next 001e
