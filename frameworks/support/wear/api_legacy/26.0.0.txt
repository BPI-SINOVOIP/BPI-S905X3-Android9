package android.support.wear.widget {

  public class BoxInsetLayout extends android.view.ViewGroup {
    ctor public BoxInsetLayout(android.content.Context);
    ctor public BoxInsetLayout(android.content.Context, android.util.AttributeSet);
    ctor public BoxInsetLayout(android.content.Context, android.util.AttributeSet, int);
    method public android.support.wear.widget.BoxInsetLayout.LayoutParams generateLayoutParams(android.util.AttributeSet);
    method protected void onLayout(boolean, int, int, int, int);
  }

  public static class BoxInsetLayout.LayoutParams extends android.widget.FrameLayout.LayoutParams {
    ctor public BoxInsetLayout.LayoutParams(android.content.Context, android.util.AttributeSet);
    ctor public BoxInsetLayout.LayoutParams(int, int);
    ctor public BoxInsetLayout.LayoutParams(int, int, int);
    ctor public BoxInsetLayout.LayoutParams(int, int, int, int);
    ctor public BoxInsetLayout.LayoutParams(android.view.ViewGroup.LayoutParams);
    ctor public BoxInsetLayout.LayoutParams(android.view.ViewGroup.MarginLayoutParams);
    ctor public BoxInsetLayout.LayoutParams(android.widget.FrameLayout.LayoutParams);
    ctor public BoxInsetLayout.LayoutParams(android.support.wear.widget.BoxInsetLayout.LayoutParams);
    field public static final int BOX_ALL = 15; // 0xf
    field public static final int BOX_BOTTOM = 8; // 0x8
    field public static final int BOX_LEFT = 1; // 0x1
    field public static final int BOX_NONE = 0; // 0x0
    field public static final int BOX_RIGHT = 4; // 0x4
    field public static final int BOX_TOP = 2; // 0x2
    field public int boxedEdges;
  }

  public class CircularProgressLayout extends android.widget.FrameLayout {
    ctor public CircularProgressLayout(android.content.Context);
    ctor public CircularProgressLayout(android.content.Context, android.util.AttributeSet);
    ctor public CircularProgressLayout(android.content.Context, android.util.AttributeSet, int);
    ctor public CircularProgressLayout(android.content.Context, android.util.AttributeSet, int, int);
    method public int getBackgroundColor();
    method public int[] getColorSchemeColors();
    method public android.support.wear.widget.CircularProgressLayout.OnTimerFinishedListener getOnTimerFinishedListener();
    method public android.support.v4.widget.CircularProgressDrawable getProgressDrawable();
    method public float getStartingRotation();
    method public float getStrokeWidth();
    method public long getTotalTime();
    method public boolean isIndeterminate();
    method public boolean isTimerRunning();
    method public void setColorSchemeColors(int...);
    method public void setIndeterminate(boolean);
    method public void setOnTimerFinishedListener(android.support.wear.widget.CircularProgressLayout.OnTimerFinishedListener);
    method public void setStartingRotation(float);
    method public void setStrokeWidth(float);
    method public void setTotalTime(long);
    method public void startTimer();
    method public void stopTimer();
  }

  public static abstract interface CircularProgressLayout.OnTimerFinishedListener {
    method public abstract void onTimerFinished(android.support.wear.widget.CircularProgressLayout);
  }

  public class CurvingLayoutCallback extends android.support.wear.widget.WearableLinearLayoutManager.LayoutCallback {
    ctor public CurvingLayoutCallback(android.content.Context);
    method public void adjustAnchorOffsetXY(android.view.View, float[]);
    method public void onLayoutFinished(android.view.View, android.support.v7.widget.RecyclerView);
  }

  public class RoundedDrawable extends android.graphics.drawable.Drawable {
    ctor public RoundedDrawable();
    method public void draw(android.graphics.Canvas);
    method public int getBackgroundColor();
    method public android.graphics.drawable.Drawable getDrawable();
    method public int getOpacity();
    method public int getRadius();
    method public boolean isClipEnabled();
    method public void setAlpha(int);
    method public void setBackgroundColor(int);
    method public void setClipEnabled(boolean);
    method public void setColorFilter(android.graphics.ColorFilter);
    method public void setDrawable(android.graphics.drawable.Drawable);
    method public void setRadius(int);
  }

  public class SwipeDismissFrameLayout extends android.widget.FrameLayout {
    ctor public SwipeDismissFrameLayout(android.content.Context);
    ctor public SwipeDismissFrameLayout(android.content.Context, android.util.AttributeSet);
    ctor public SwipeDismissFrameLayout(android.content.Context, android.util.AttributeSet, int);
    ctor public SwipeDismissFrameLayout(android.content.Context, android.util.AttributeSet, int, int);
    method public void addCallback(android.support.wear.widget.SwipeDismissFrameLayout.Callback);
    method public void removeCallback(android.support.wear.widget.SwipeDismissFrameLayout.Callback);
  }

  public static abstract class SwipeDismissFrameLayout.Callback {
    ctor public SwipeDismissFrameLayout.Callback();
    method public void onDismissed(android.support.wear.widget.SwipeDismissFrameLayout);
    method public void onSwipeCanceled(android.support.wear.widget.SwipeDismissFrameLayout);
    method public void onSwipeStarted(android.support.wear.widget.SwipeDismissFrameLayout);
  }

  public class WearableLinearLayoutManager extends android.support.v7.widget.LinearLayoutManager {
    ctor public WearableLinearLayoutManager(android.content.Context, android.support.wear.widget.WearableLinearLayoutManager.LayoutCallback);
    ctor public WearableLinearLayoutManager(android.content.Context);
    method public android.support.wear.widget.WearableLinearLayoutManager.LayoutCallback getLayoutCallback();
    method public void setLayoutCallback(android.support.wear.widget.WearableLinearLayoutManager.LayoutCallback);
  }

  public static abstract class WearableLinearLayoutManager.LayoutCallback {
    ctor public WearableLinearLayoutManager.LayoutCallback();
    method public abstract void onLayoutFinished(android.view.View, android.support.v7.widget.RecyclerView);
  }

  public class WearableRecyclerView extends android.support.v7.widget.RecyclerView {
    ctor public WearableRecyclerView(android.content.Context);
    ctor public WearableRecyclerView(android.content.Context, android.util.AttributeSet);
    ctor public WearableRecyclerView(android.content.Context, android.util.AttributeSet, int);
    ctor public WearableRecyclerView(android.content.Context, android.util.AttributeSet, int, int);
    method public float getBezelFraction();
    method public float getScrollDegreesPerScreen();
    method public boolean isCircularScrollingGestureEnabled();
    method public boolean isEdgeItemsCenteringEnabled();
    method public void setBezelFraction(float);
    method public void setCircularScrollingGestureEnabled(boolean);
    method public void setEdgeItemsCenteringEnabled(boolean);
    method public void setScrollDegreesPerScreen(float);
  }

}

package android.support.wear.widget.drawer {

  public class WearableActionDrawerView extends android.support.wear.widget.drawer.WearableDrawerView {
    ctor public WearableActionDrawerView(android.content.Context);
    ctor public WearableActionDrawerView(android.content.Context, android.util.AttributeSet);
    ctor public WearableActionDrawerView(android.content.Context, android.util.AttributeSet, int);
    ctor public WearableActionDrawerView(android.content.Context, android.util.AttributeSet, int, int);
    method public android.view.Menu getMenu();
    method public void setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener);
    method public void setTitle(java.lang.CharSequence);
  }

  public class WearableDrawerController {
    method public void closeDrawer();
    method public void openDrawer();
    method public void peekDrawer();
  }

  public class WearableDrawerLayout extends android.widget.FrameLayout implements android.view.View.OnLayoutChangeListener {
    ctor public WearableDrawerLayout(android.content.Context);
    ctor public WearableDrawerLayout(android.content.Context, android.util.AttributeSet);
    ctor public WearableDrawerLayout(android.content.Context, android.util.AttributeSet, int);
    ctor public WearableDrawerLayout(android.content.Context, android.util.AttributeSet, int, int);
    method public void onFlingComplete(android.view.View);
    method public void onLayoutChange(android.view.View, int, int, int, int, int, int, int, int);
    method public void setDrawerStateCallback(android.support.wear.widget.drawer.WearableDrawerLayout.DrawerStateCallback);
  }

  public static class WearableDrawerLayout.DrawerStateCallback {
    ctor public WearableDrawerLayout.DrawerStateCallback();
    method public void onDrawerClosed(android.support.wear.widget.drawer.WearableDrawerLayout, android.support.wear.widget.drawer.WearableDrawerView);
    method public void onDrawerOpened(android.support.wear.widget.drawer.WearableDrawerLayout, android.support.wear.widget.drawer.WearableDrawerView);
    method public void onDrawerStateChanged(android.support.wear.widget.drawer.WearableDrawerLayout, int);
  }

  public class WearableDrawerView extends android.widget.FrameLayout {
    ctor public WearableDrawerView(android.content.Context);
    ctor public WearableDrawerView(android.content.Context, android.util.AttributeSet);
    ctor public WearableDrawerView(android.content.Context, android.util.AttributeSet, int);
    ctor public WearableDrawerView(android.content.Context, android.util.AttributeSet, int, int);
    method public android.support.wear.widget.drawer.WearableDrawerController getController();
    method public android.view.View getDrawerContent();
    method public int getDrawerState();
    method public boolean isAutoPeekEnabled();
    method public boolean isClosed();
    method public boolean isLocked();
    method public boolean isLockedWhenClosed();
    method public boolean isOpenOnlyAtTopEnabled();
    method public boolean isOpened();
    method public boolean isPeekOnScrollDownEnabled();
    method public boolean isPeeking();
    method public void onDrawerClosed();
    method public void onDrawerOpened();
    method public void onDrawerStateChanged(int);
    method public void onPeekContainerClicked(android.view.View);
    method public void setDrawerContent(android.view.View);
    method public void setIsAutoPeekEnabled(boolean);
    method public void setIsLocked(boolean);
    method public void setLockedWhenClosed(boolean);
    method public void setOpenOnlyAtTopEnabled(boolean);
    method public void setPeekContent(android.view.View);
    method public void setPeekOnScrollDownEnabled(boolean);
    field public static final int STATE_DRAGGING = 1; // 0x1
    field public static final int STATE_IDLE = 0; // 0x0
    field public static final int STATE_SETTLING = 2; // 0x2
  }

  public class WearableNavigationDrawerView extends android.support.wear.widget.drawer.WearableDrawerView {
    ctor public WearableNavigationDrawerView(android.content.Context);
    ctor public WearableNavigationDrawerView(android.content.Context, android.util.AttributeSet);
    ctor public WearableNavigationDrawerView(android.content.Context, android.util.AttributeSet, int);
    ctor public WearableNavigationDrawerView(android.content.Context, android.util.AttributeSet, int, int);
    method public void addOnItemSelectedListener(android.support.wear.widget.drawer.WearableNavigationDrawerView.OnItemSelectedListener);
    method public int getNavigationStyle();
    method public void removeOnItemSelectedListener(android.support.wear.widget.drawer.WearableNavigationDrawerView.OnItemSelectedListener);
    method public void setAdapter(android.support.wear.widget.drawer.WearableNavigationDrawerView.WearableNavigationDrawerAdapter);
    method public void setCurrentItem(int, boolean);
    field public static final int MULTI_PAGE = 1; // 0x1
    field public static final int SINGLE_PAGE = 0; // 0x0
  }

  public static abstract interface WearableNavigationDrawerView.OnItemSelectedListener {
    method public abstract void onItemSelected(int);
  }

  public static abstract class WearableNavigationDrawerView.WearableNavigationDrawerAdapter {
    ctor public WearableNavigationDrawerView.WearableNavigationDrawerAdapter();
    method public abstract int getCount();
    method public abstract android.graphics.drawable.Drawable getItemDrawable(int);
    method public abstract java.lang.CharSequence getItemText(int);
    method public void notifyDataSetChanged();
  }

}

