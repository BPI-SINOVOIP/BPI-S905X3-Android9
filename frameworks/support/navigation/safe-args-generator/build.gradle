/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.SupportConfig

import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.SupportLibraryExtension

apply plugin: androidx.build.SupportKotlinLibraryPlugin


sourceSets {
    test.java.srcDirs += 'src/tests/kotlin'
}

dependencies {
    compile(XPP3)
    compile(XMLPULL)
    compile(KOTLIN_STDLIB)

    compile(JAVAPOET)

    testCompile(JUNIT)
    testCompile(GOOGLE_COMPILE_TESTING)
    def logger = new com.android.build.gradle.internal.LoggerWrapper(project.logger)
    def sdkHandler = new com.android.build.gradle.internal.SdkHandler(project, logger)
    testCompile fileTree(dir: "${sdkHandler.sdkFolder}/platforms/android-$SupportConfig.CURRENT_SDK_VERSION/",
            include : "android.jar")
    testCompile fileTree(dir: "${new File(project(":navigation:navigation-common").buildDir, "libJar")}",
            include : "*.jar")
    testCompile files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
}

tasks.findByName("test").doFirst {
    // android.jar and xmlpull has the same classes, but android.jar has stubs instead of real
    // implementation, so we move android.jar to end of classpath
    def classpath = it.classpath.getFiles()
    def androidJar = classpath.find { it.name == "android.jar" }
    classpath.remove(androidJar)
    classpath.add(androidJar)
    it.classpath = files(classpath)
}

tasks.findByName("compileKotlin").dependsOn(":navigation:navigation-common:jarDebug")

supportLibrary {
    name = 'Android Navigation TypeSafe Arguments Generator'
    publish = true
    mavenVersion = LibraryVersions.NAVIGATION
    mavenGroup = LibraryGroups.NAVIGATION
    inceptionYear = '2017'
    description = "Android Navigation TypeSafe Arguments Generator"
    url = SupportLibraryExtension.ARCHITECTURE_URL
}
