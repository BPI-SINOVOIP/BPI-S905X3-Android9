package android.support.v4.accessibilityservice {

  public final class AccessibilityServiceInfoCompat {
    method public static java.lang.String capabilityToString(int);
    method public static java.lang.String feedbackTypeToString(int);
    method public static java.lang.String flagToString(int);
    method public static deprecated boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo);
    method public static int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo);
    method public static deprecated java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo);
    method public static deprecated java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo);
    method public static deprecated android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo);
    method public static deprecated java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo);
    method public static java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo, android.content.pm.PackageManager);
    field public static final int CAPABILITY_CAN_FILTER_KEY_EVENTS = 8; // 0x8
    field public static final int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY = 4; // 0x4
    field public static final int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION = 2; // 0x2
    field public static final int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT = 1; // 0x1
    field public static final deprecated int DEFAULT = 1; // 0x1
    field public static final int FEEDBACK_ALL_MASK = -1; // 0xffffffff
    field public static final int FEEDBACK_BRAILLE = 32; // 0x20
    field public static final int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS = 2; // 0x2
    field public static final int FLAG_REPORT_VIEW_IDS = 16; // 0x10
    field public static final int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY = 8; // 0x8
    field public static final int FLAG_REQUEST_FILTER_KEY_EVENTS = 32; // 0x20
    field public static final int FLAG_REQUEST_TOUCH_EXPLORATION_MODE = 4; // 0x4
  }

}

package android.support.v4.app {

  public class ActivityCompat extends android.support.v4.content.ContextCompat {
    ctor protected ActivityCompat();
    method public static void finishAffinity(android.app.Activity);
    method public static void finishAfterTransition(android.app.Activity);
    method public static android.net.Uri getReferrer(android.app.Activity);
    method public static boolean invalidateOptionsMenu(android.app.Activity);
    method public static void postponeEnterTransition(android.app.Activity);
    method public static void requestPermissions(android.app.Activity, java.lang.String[], int);
    method public static void setEnterSharedElementCallback(android.app.Activity, android.support.v4.app.SharedElementCallback);
    method public static void setExitSharedElementCallback(android.app.Activity, android.support.v4.app.SharedElementCallback);
    method public static boolean shouldShowRequestPermissionRationale(android.app.Activity, java.lang.String);
    method public static void startActivityForResult(android.app.Activity, android.content.Intent, int, android.os.Bundle);
    method public static void startIntentSenderForResult(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender.SendIntentException;
    method public static void startPostponedEnterTransition(android.app.Activity);
  }

  public static abstract interface ActivityCompat.OnRequestPermissionsResultCallback {
    method public abstract void onRequestPermissionsResult(int, java.lang.String[], int[]);
  }

  public final class ActivityManagerCompat {
    method public static boolean isLowRamDevice(android.app.ActivityManager);
  }

  public class ActivityOptionsCompat {
    ctor protected ActivityOptionsCompat();
    method public android.graphics.Rect getLaunchBounds();
    method public static android.support.v4.app.ActivityOptionsCompat makeBasic();
    method public static android.support.v4.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View, int, int, int, int);
    method public static android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context, int, int);
    method public static android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View, int, int, int, int);
    method public static android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity, android.view.View, java.lang.String);
    method public static android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity, android.support.v4.util.Pair<android.view.View, java.lang.String>...);
    method public static android.support.v4.app.ActivityOptionsCompat makeTaskLaunchBehind();
    method public static android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View, android.graphics.Bitmap, int, int);
    method public void requestUsageTimeReport(android.app.PendingIntent);
    method public android.support.v4.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect);
    method public android.os.Bundle toBundle();
    method public void update(android.support.v4.app.ActivityOptionsCompat);
    field public static final java.lang.String EXTRA_USAGE_TIME_REPORT = "android.activity.usage_time";
    field public static final java.lang.String EXTRA_USAGE_TIME_REPORT_PACKAGES = "android.usage_time_packages";
  }

  public final class AlarmManagerCompat {
    method public static void setAlarmClock(android.app.AlarmManager, long, android.app.PendingIntent, android.app.PendingIntent);
    method public static void setAndAllowWhileIdle(android.app.AlarmManager, int, long, android.app.PendingIntent);
    method public static void setExact(android.app.AlarmManager, int, long, android.app.PendingIntent);
    method public static void setExactAndAllowWhileIdle(android.app.AlarmManager, int, long, android.app.PendingIntent);
  }

  public final class AppOpsManagerCompat {
    method public static int noteOp(android.content.Context, java.lang.String, int, java.lang.String);
    method public static int noteProxyOp(android.content.Context, java.lang.String, java.lang.String);
    method public static java.lang.String permissionToOp(java.lang.String);
    field public static final int MODE_ALLOWED = 0; // 0x0
    field public static final int MODE_DEFAULT = 3; // 0x3
    field public static final int MODE_IGNORED = 1; // 0x1
  }

  public final class BundleCompat {
    method public static android.os.IBinder getBinder(android.os.Bundle, java.lang.String);
    method public static void putBinder(android.os.Bundle, java.lang.String, android.os.IBinder);
  }

  public abstract class JobIntentService extends android.app.Service {
    ctor public JobIntentService();
    method public static void enqueueWork(android.content.Context, java.lang.Class, int, android.content.Intent);
    method public static void enqueueWork(android.content.Context, android.content.ComponentName, int, android.content.Intent);
    method public boolean isStopped();
    method public android.os.IBinder onBind(android.content.Intent);
    method protected abstract void onHandleWork(android.content.Intent);
    method public boolean onStopCurrentWork();
    method public void setInterruptIfStopped(boolean);
  }

  public class NotificationCompat {
    ctor public NotificationCompat();
    method public static android.support.v4.app.NotificationCompat.Action getAction(android.app.Notification, int);
    method public static int getActionCount(android.app.Notification);
    method public static int getBadgeIconType(android.app.Notification);
    method public static java.lang.String getCategory(android.app.Notification);
    method public static java.lang.String getChannelId(android.app.Notification);
    method public static android.os.Bundle getExtras(android.app.Notification);
    method public static java.lang.String getGroup(android.app.Notification);
    method public static int getGroupAlertBehavior(android.app.Notification);
    method public static boolean getLocalOnly(android.app.Notification);
    method public static java.lang.String getShortcutId(android.app.Notification);
    method public static java.lang.String getSortKey(android.app.Notification);
    method public static long getTimeoutAfter(android.app.Notification);
    method public static boolean isGroupSummary(android.app.Notification);
    field public static final int BADGE_ICON_LARGE = 2; // 0x2
    field public static final int BADGE_ICON_NONE = 0; // 0x0
    field public static final int BADGE_ICON_SMALL = 1; // 0x1
    field public static final java.lang.String CATEGORY_ALARM = "alarm";
    field public static final java.lang.String CATEGORY_CALL = "call";
    field public static final java.lang.String CATEGORY_EMAIL = "email";
    field public static final java.lang.String CATEGORY_ERROR = "err";
    field public static final java.lang.String CATEGORY_EVENT = "event";
    field public static final java.lang.String CATEGORY_MESSAGE = "msg";
    field public static final java.lang.String CATEGORY_PROGRESS = "progress";
    field public static final java.lang.String CATEGORY_PROMO = "promo";
    field public static final java.lang.String CATEGORY_RECOMMENDATION = "recommendation";
    field public static final java.lang.String CATEGORY_REMINDER = "reminder";
    field public static final java.lang.String CATEGORY_SERVICE = "service";
    field public static final java.lang.String CATEGORY_SOCIAL = "social";
    field public static final java.lang.String CATEGORY_STATUS = "status";
    field public static final java.lang.String CATEGORY_SYSTEM = "sys";
    field public static final java.lang.String CATEGORY_TRANSPORT = "transport";
    field public static final int COLOR_DEFAULT = 0; // 0x0
    field public static final int DEFAULT_ALL = -1; // 0xffffffff
    field public static final int DEFAULT_LIGHTS = 4; // 0x4
    field public static final int DEFAULT_SOUND = 1; // 0x1
    field public static final int DEFAULT_VIBRATE = 2; // 0x2
    field public static final java.lang.String EXTRA_AUDIO_CONTENTS_URI = "android.audioContents";
    field public static final java.lang.String EXTRA_BACKGROUND_IMAGE_URI = "android.backgroundImageUri";
    field public static final java.lang.String EXTRA_BIG_TEXT = "android.bigText";
    field public static final java.lang.String EXTRA_COMPACT_ACTIONS = "android.compactActions";
    field public static final java.lang.String EXTRA_CONVERSATION_TITLE = "android.conversationTitle";
    field public static final java.lang.String EXTRA_INFO_TEXT = "android.infoText";
    field public static final java.lang.String EXTRA_LARGE_ICON = "android.largeIcon";
    field public static final java.lang.String EXTRA_LARGE_ICON_BIG = "android.largeIcon.big";
    field public static final java.lang.String EXTRA_MEDIA_SESSION = "android.mediaSession";
    field public static final java.lang.String EXTRA_MESSAGES = "android.messages";
    field public static final java.lang.String EXTRA_PEOPLE = "android.people";
    field public static final java.lang.String EXTRA_PICTURE = "android.picture";
    field public static final java.lang.String EXTRA_PROGRESS = "android.progress";
    field public static final java.lang.String EXTRA_PROGRESS_INDETERMINATE = "android.progressIndeterminate";
    field public static final java.lang.String EXTRA_PROGRESS_MAX = "android.progressMax";
    field public static final java.lang.String EXTRA_REMOTE_INPUT_HISTORY = "android.remoteInputHistory";
    field public static final java.lang.String EXTRA_SELF_DISPLAY_NAME = "android.selfDisplayName";
    field public static final java.lang.String EXTRA_SHOW_CHRONOMETER = "android.showChronometer";
    field public static final java.lang.String EXTRA_SHOW_WHEN = "android.showWhen";
    field public static final java.lang.String EXTRA_SMALL_ICON = "android.icon";
    field public static final java.lang.String EXTRA_SUB_TEXT = "android.subText";
    field public static final java.lang.String EXTRA_SUMMARY_TEXT = "android.summaryText";
    field public static final java.lang.String EXTRA_TEMPLATE = "android.template";
    field public static final java.lang.String EXTRA_TEXT = "android.text";
    field public static final java.lang.String EXTRA_TEXT_LINES = "android.textLines";
    field public static final java.lang.String EXTRA_TITLE = "android.title";
    field public static final java.lang.String EXTRA_TITLE_BIG = "android.title.big";
    field public static final int FLAG_AUTO_CANCEL = 16; // 0x10
    field public static final int FLAG_FOREGROUND_SERVICE = 64; // 0x40
    field public static final int FLAG_GROUP_SUMMARY = 512; // 0x200
    field public static final deprecated int FLAG_HIGH_PRIORITY = 128; // 0x80
    field public static final int FLAG_INSISTENT = 4; // 0x4
    field public static final int FLAG_LOCAL_ONLY = 256; // 0x100
    field public static final int FLAG_NO_CLEAR = 32; // 0x20
    field public static final int FLAG_ONGOING_EVENT = 2; // 0x2
    field public static final int FLAG_ONLY_ALERT_ONCE = 8; // 0x8
    field public static final int FLAG_SHOW_LIGHTS = 1; // 0x1
    field public static final int GROUP_ALERT_ALL = 0; // 0x0
    field public static final int GROUP_ALERT_CHILDREN = 2; // 0x2
    field public static final int GROUP_ALERT_SUMMARY = 1; // 0x1
    field public static final int PRIORITY_DEFAULT = 0; // 0x0
    field public static final int PRIORITY_HIGH = 1; // 0x1
    field public static final int PRIORITY_LOW = -1; // 0xffffffff
    field public static final int PRIORITY_MAX = 2; // 0x2
    field public static final int PRIORITY_MIN = -2; // 0xfffffffe
    field public static final int STREAM_DEFAULT = -1; // 0xffffffff
    field public static final int VISIBILITY_PRIVATE = 0; // 0x0
    field public static final int VISIBILITY_PUBLIC = 1; // 0x1
    field public static final int VISIBILITY_SECRET = -1; // 0xffffffff
  }

  public static class NotificationCompat.Action {
    ctor public NotificationCompat.Action(int, java.lang.CharSequence, android.app.PendingIntent);
    method public android.app.PendingIntent getActionIntent();
    method public boolean getAllowGeneratedReplies();
    method public android.support.v4.app.RemoteInput[] getDataOnlyRemoteInputs();
    method public android.os.Bundle getExtras();
    method public int getIcon();
    method public android.support.v4.app.RemoteInput[] getRemoteInputs();
    method public java.lang.CharSequence getTitle();
    field public android.app.PendingIntent actionIntent;
    field public int icon;
    field public java.lang.CharSequence title;
  }

  public static final class NotificationCompat.Action.Builder {
    ctor public NotificationCompat.Action.Builder(int, java.lang.CharSequence, android.app.PendingIntent);
    ctor public NotificationCompat.Action.Builder(android.support.v4.app.NotificationCompat.Action);
    method public android.support.v4.app.NotificationCompat.Action.Builder addExtras(android.os.Bundle);
    method public android.support.v4.app.NotificationCompat.Action.Builder addRemoteInput(android.support.v4.app.RemoteInput);
    method public android.support.v4.app.NotificationCompat.Action build();
    method public android.support.v4.app.NotificationCompat.Action.Builder extend(android.support.v4.app.NotificationCompat.Action.Extender);
    method public android.os.Bundle getExtras();
    method public android.support.v4.app.NotificationCompat.Action.Builder setAllowGeneratedReplies(boolean);
  }

  public static class NotificationCompat.DecoratedCustomViewStyle extends android.support.v4.app.NotificationCompat.Style {
    ctor public NotificationCompat.DecoratedCustomViewStyle();
  }

  public static abstract interface NotificationCompat.Action.Extender {
    method public abstract android.support.v4.app.NotificationCompat.Action.Builder extend(android.support.v4.app.NotificationCompat.Action.Builder);
  }

  public static final class NotificationCompat.Action.WearableExtender implements android.support.v4.app.NotificationCompat.Action.Extender {
    ctor public NotificationCompat.Action.WearableExtender();
    ctor public NotificationCompat.Action.WearableExtender(android.support.v4.app.NotificationCompat.Action);
    method public android.support.v4.app.NotificationCompat.Action.WearableExtender clone();
    method public android.support.v4.app.NotificationCompat.Action.Builder extend(android.support.v4.app.NotificationCompat.Action.Builder);
    method public java.lang.CharSequence getCancelLabel();
    method public java.lang.CharSequence getConfirmLabel();
    method public boolean getHintDisplayActionInline();
    method public boolean getHintLaunchesActivity();
    method public java.lang.CharSequence getInProgressLabel();
    method public boolean isAvailableOffline();
    method public android.support.v4.app.NotificationCompat.Action.WearableExtender setAvailableOffline(boolean);
    method public android.support.v4.app.NotificationCompat.Action.WearableExtender setCancelLabel(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Action.WearableExtender setConfirmLabel(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Action.WearableExtender setHintDisplayActionInline(boolean);
    method public android.support.v4.app.NotificationCompat.Action.WearableExtender setHintLaunchesActivity(boolean);
    method public android.support.v4.app.NotificationCompat.Action.WearableExtender setInProgressLabel(java.lang.CharSequence);
  }

  public static class NotificationCompat.BigPictureStyle extends android.support.v4.app.NotificationCompat.Style {
    ctor public NotificationCompat.BigPictureStyle();
    ctor public NotificationCompat.BigPictureStyle(android.support.v4.app.NotificationCompat.Builder);
    method public android.support.v4.app.NotificationCompat.BigPictureStyle bigLargeIcon(android.graphics.Bitmap);
    method public android.support.v4.app.NotificationCompat.BigPictureStyle bigPicture(android.graphics.Bitmap);
    method public android.support.v4.app.NotificationCompat.BigPictureStyle setBigContentTitle(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.BigPictureStyle setSummaryText(java.lang.CharSequence);
  }

  public static class NotificationCompat.BigTextStyle extends android.support.v4.app.NotificationCompat.Style {
    ctor public NotificationCompat.BigTextStyle();
    ctor public NotificationCompat.BigTextStyle(android.support.v4.app.NotificationCompat.Builder);
    method public android.support.v4.app.NotificationCompat.BigTextStyle bigText(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.BigTextStyle setBigContentTitle(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.BigTextStyle setSummaryText(java.lang.CharSequence);
  }

  public static class NotificationCompat.Builder {
    ctor public NotificationCompat.Builder(android.content.Context, java.lang.String);
    ctor public deprecated NotificationCompat.Builder(android.content.Context);
    method public android.support.v4.app.NotificationCompat.Builder addAction(int, java.lang.CharSequence, android.app.PendingIntent);
    method public android.support.v4.app.NotificationCompat.Builder addAction(android.support.v4.app.NotificationCompat.Action);
    method public android.support.v4.app.NotificationCompat.Builder addExtras(android.os.Bundle);
    method public android.support.v4.app.NotificationCompat.Builder addPerson(java.lang.String);
    method public android.app.Notification build();
    method public android.support.v4.app.NotificationCompat.Builder extend(android.support.v4.app.NotificationCompat.Extender);
    method public android.os.Bundle getExtras();
    method public deprecated android.app.Notification getNotification();
    method protected static java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Builder setAutoCancel(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setBadgeIconType(int);
    method public android.support.v4.app.NotificationCompat.Builder setCategory(java.lang.String);
    method public android.support.v4.app.NotificationCompat.Builder setChannelId(java.lang.String);
    method public android.support.v4.app.NotificationCompat.Builder setColor(int);
    method public android.support.v4.app.NotificationCompat.Builder setColorized(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setContent(android.widget.RemoteViews);
    method public android.support.v4.app.NotificationCompat.Builder setContentInfo(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Builder setContentIntent(android.app.PendingIntent);
    method public android.support.v4.app.NotificationCompat.Builder setContentText(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Builder setContentTitle(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Builder setCustomBigContentView(android.widget.RemoteViews);
    method public android.support.v4.app.NotificationCompat.Builder setCustomContentView(android.widget.RemoteViews);
    method public android.support.v4.app.NotificationCompat.Builder setCustomHeadsUpContentView(android.widget.RemoteViews);
    method public android.support.v4.app.NotificationCompat.Builder setDefaults(int);
    method public android.support.v4.app.NotificationCompat.Builder setDeleteIntent(android.app.PendingIntent);
    method public android.support.v4.app.NotificationCompat.Builder setExtras(android.os.Bundle);
    method public android.support.v4.app.NotificationCompat.Builder setFullScreenIntent(android.app.PendingIntent, boolean);
    method public android.support.v4.app.NotificationCompat.Builder setGroup(java.lang.String);
    method public android.support.v4.app.NotificationCompat.Builder setGroupAlertBehavior(int);
    method public android.support.v4.app.NotificationCompat.Builder setGroupSummary(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setLargeIcon(android.graphics.Bitmap);
    method public android.support.v4.app.NotificationCompat.Builder setLights(int, int, int);
    method public android.support.v4.app.NotificationCompat.Builder setLocalOnly(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setNumber(int);
    method public android.support.v4.app.NotificationCompat.Builder setOngoing(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setOnlyAlertOnce(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setPriority(int);
    method public android.support.v4.app.NotificationCompat.Builder setProgress(int, int, boolean);
    method public android.support.v4.app.NotificationCompat.Builder setPublicVersion(android.app.Notification);
    method public android.support.v4.app.NotificationCompat.Builder setRemoteInputHistory(java.lang.CharSequence[]);
    method public android.support.v4.app.NotificationCompat.Builder setShortcutId(java.lang.String);
    method public android.support.v4.app.NotificationCompat.Builder setShowWhen(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setSmallIcon(int);
    method public android.support.v4.app.NotificationCompat.Builder setSmallIcon(int, int);
    method public android.support.v4.app.NotificationCompat.Builder setSortKey(java.lang.String);
    method public android.support.v4.app.NotificationCompat.Builder setSound(android.net.Uri);
    method public android.support.v4.app.NotificationCompat.Builder setSound(android.net.Uri, int);
    method public android.support.v4.app.NotificationCompat.Builder setStyle(android.support.v4.app.NotificationCompat.Style);
    method public android.support.v4.app.NotificationCompat.Builder setSubText(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Builder setTicker(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.Builder setTicker(java.lang.CharSequence, android.widget.RemoteViews);
    method public android.support.v4.app.NotificationCompat.Builder setTimeoutAfter(long);
    method public android.support.v4.app.NotificationCompat.Builder setUsesChronometer(boolean);
    method public android.support.v4.app.NotificationCompat.Builder setVibrate(long[]);
    method public android.support.v4.app.NotificationCompat.Builder setVisibility(int);
    method public android.support.v4.app.NotificationCompat.Builder setWhen(long);
    field public java.util.ArrayList<java.lang.String> mPeople;
  }

  public static final class NotificationCompat.CarExtender implements android.support.v4.app.NotificationCompat.Extender {
    ctor public NotificationCompat.CarExtender();
    ctor public NotificationCompat.CarExtender(android.app.Notification);
    method public android.support.v4.app.NotificationCompat.Builder extend(android.support.v4.app.NotificationCompat.Builder);
    method public int getColor();
    method public android.graphics.Bitmap getLargeIcon();
    method public android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation getUnreadConversation();
    method public android.support.v4.app.NotificationCompat.CarExtender setColor(int);
    method public android.support.v4.app.NotificationCompat.CarExtender setLargeIcon(android.graphics.Bitmap);
    method public android.support.v4.app.NotificationCompat.CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation);
  }

  public static class NotificationCompat.CarExtender.UnreadConversation {
    method public long getLatestTimestamp();
    method public java.lang.String[] getMessages();
    method public java.lang.String getParticipant();
    method public java.lang.String[] getParticipants();
    method public android.app.PendingIntent getReadPendingIntent();
    method public android.support.v4.app.RemoteInput getRemoteInput();
    method public android.app.PendingIntent getReplyPendingIntent();
  }

  public static class NotificationCompat.CarExtender.UnreadConversation.Builder {
    ctor public NotificationCompat.CarExtender.UnreadConversation.Builder(java.lang.String);
    method public android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder addMessage(java.lang.String);
    method public android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation build();
    method public android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder setLatestTimestamp(long);
    method public android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder setReadPendingIntent(android.app.PendingIntent);
    method public android.support.v4.app.NotificationCompat.CarExtender.UnreadConversation.Builder setReplyAction(android.app.PendingIntent, android.support.v4.app.RemoteInput);
  }

  public static abstract interface NotificationCompat.Extender {
    method public abstract android.support.v4.app.NotificationCompat.Builder extend(android.support.v4.app.NotificationCompat.Builder);
  }

  public static class NotificationCompat.InboxStyle extends android.support.v4.app.NotificationCompat.Style {
    ctor public NotificationCompat.InboxStyle();
    ctor public NotificationCompat.InboxStyle(android.support.v4.app.NotificationCompat.Builder);
    method public android.support.v4.app.NotificationCompat.InboxStyle addLine(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.InboxStyle setBigContentTitle(java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.InboxStyle setSummaryText(java.lang.CharSequence);
  }

  public static class NotificationCompat.MessagingStyle extends android.support.v4.app.NotificationCompat.Style {
    ctor public NotificationCompat.MessagingStyle(java.lang.CharSequence);
    method public void addCompatExtras(android.os.Bundle);
    method public android.support.v4.app.NotificationCompat.MessagingStyle addMessage(java.lang.CharSequence, long, java.lang.CharSequence);
    method public android.support.v4.app.NotificationCompat.MessagingStyle addMessage(android.support.v4.app.NotificationCompat.MessagingStyle.Message);
    method public static android.support.v4.app.NotificationCompat.MessagingStyle extractMessagingStyleFromNotification(android.app.Notification);
    method public java.lang.CharSequence getConversationTitle();
    method public java.util.List<android.support.v4.app.NotificationCompat.MessagingStyle.Message> getMessages();
    method public java.lang.CharSequence getUserDisplayName();
    method public android.support.v4.app.NotificationCompat.MessagingStyle setConversationTitle(java.lang.CharSequence);
    field public static final int MAXIMUM_RETAINED_MESSAGES = 25; // 0x19
  }

  public static final class NotificationCompat.MessagingStyle.Message {
    ctor public NotificationCompat.MessagingStyle.Message(java.lang.CharSequence, long, java.lang.CharSequence);
    method public java.lang.String getDataMimeType();
    method public android.net.Uri getDataUri();
    method public android.os.Bundle getExtras();
    method public java.lang.CharSequence getSender();
    method public java.lang.CharSequence getText();
    method public long getTimestamp();
    method public android.support.v4.app.NotificationCompat.MessagingStyle.Message setData(java.lang.String, android.net.Uri);
  }

  public static abstract class NotificationCompat.Style {
    ctor public NotificationCompat.Style();
    method public android.app.Notification build();
    method public void setBuilder(android.support.v4.app.NotificationCompat.Builder);
  }

  public static final class NotificationCompat.WearableExtender implements android.support.v4.app.NotificationCompat.Extender {
    ctor public NotificationCompat.WearableExtender();
    ctor public NotificationCompat.WearableExtender(android.app.Notification);
    method public android.support.v4.app.NotificationCompat.WearableExtender addAction(android.support.v4.app.NotificationCompat.Action);
    method public android.support.v4.app.NotificationCompat.WearableExtender addActions(java.util.List<android.support.v4.app.NotificationCompat.Action>);
    method public android.support.v4.app.NotificationCompat.WearableExtender addPage(android.app.Notification);
    method public android.support.v4.app.NotificationCompat.WearableExtender addPages(java.util.List<android.app.Notification>);
    method public android.support.v4.app.NotificationCompat.WearableExtender clearActions();
    method public android.support.v4.app.NotificationCompat.WearableExtender clearPages();
    method public android.support.v4.app.NotificationCompat.WearableExtender clone();
    method public android.support.v4.app.NotificationCompat.Builder extend(android.support.v4.app.NotificationCompat.Builder);
    method public java.util.List<android.support.v4.app.NotificationCompat.Action> getActions();
    method public android.graphics.Bitmap getBackground();
    method public java.lang.String getBridgeTag();
    method public int getContentAction();
    method public int getContentIcon();
    method public int getContentIconGravity();
    method public boolean getContentIntentAvailableOffline();
    method public int getCustomContentHeight();
    method public int getCustomSizePreset();
    method public java.lang.String getDismissalId();
    method public android.app.PendingIntent getDisplayIntent();
    method public int getGravity();
    method public boolean getHintAmbientBigPicture();
    method public boolean getHintAvoidBackgroundClipping();
    method public boolean getHintContentIntentLaunchesActivity();
    method public boolean getHintHideIcon();
    method public int getHintScreenTimeout();
    method public boolean getHintShowBackgroundOnly();
    method public java.util.List<android.app.Notification> getPages();
    method public boolean getStartScrollBottom();
    method public android.support.v4.app.NotificationCompat.WearableExtender setBackground(android.graphics.Bitmap);
    method public android.support.v4.app.NotificationCompat.WearableExtender setBridgeTag(java.lang.String);
    method public android.support.v4.app.NotificationCompat.WearableExtender setContentAction(int);
    method public android.support.v4.app.NotificationCompat.WearableExtender setContentIcon(int);
    method public android.support.v4.app.NotificationCompat.WearableExtender setContentIconGravity(int);
    method public android.support.v4.app.NotificationCompat.WearableExtender setContentIntentAvailableOffline(boolean);
    method public android.support.v4.app.NotificationCompat.WearableExtender setCustomContentHeight(int);
    method public android.support.v4.app.NotificationCompat.WearableExtender setCustomSizePreset(int);
    method public android.support.v4.app.NotificationCompat.WearableExtender setDismissalId(java.lang.String);
    method public android.support.v4.app.NotificationCompat.WearableExtender setDisplayIntent(android.app.PendingIntent);
    method public android.support.v4.app.NotificationCompat.WearableExtender setGravity(int);
    method public android.support.v4.app.NotificationCompat.WearableExtender setHintAmbientBigPicture(boolean);
    method public android.support.v4.app.NotificationCompat.WearableExtender setHintAvoidBackgroundClipping(boolean);
    method public android.support.v4.app.NotificationCompat.WearableExtender setHintContentIntentLaunchesActivity(boolean);
    method public android.support.v4.app.NotificationCompat.WearableExtender setHintHideIcon(boolean);
    method public android.support.v4.app.NotificationCompat.WearableExtender setHintScreenTimeout(int);
    method public android.support.v4.app.NotificationCompat.WearableExtender setHintShowBackgroundOnly(boolean);
    method public android.support.v4.app.NotificationCompat.WearableExtender setStartScrollBottom(boolean);
    field public static final int SCREEN_TIMEOUT_LONG = -1; // 0xffffffff
    field public static final int SCREEN_TIMEOUT_SHORT = 0; // 0x0
    field public static final int SIZE_DEFAULT = 0; // 0x0
    field public static final int SIZE_FULL_SCREEN = 5; // 0x5
    field public static final int SIZE_LARGE = 4; // 0x4
    field public static final int SIZE_MEDIUM = 3; // 0x3
    field public static final int SIZE_SMALL = 2; // 0x2
    field public static final int SIZE_XSMALL = 1; // 0x1
    field public static final int UNSET_ACTION_INDEX = -1; // 0xffffffff
  }

  public final class NotificationCompatExtras {
    field public static final java.lang.String EXTRA_ACTION_EXTRAS = "android.support.actionExtras";
    field public static final java.lang.String EXTRA_GROUP_KEY = "android.support.groupKey";
    field public static final java.lang.String EXTRA_GROUP_SUMMARY = "android.support.isGroupSummary";
    field public static final java.lang.String EXTRA_LOCAL_ONLY = "android.support.localOnly";
    field public static final java.lang.String EXTRA_REMOTE_INPUTS = "android.support.remoteInputs";
    field public static final java.lang.String EXTRA_SORT_KEY = "android.support.sortKey";
  }

  public abstract class NotificationCompatSideChannelService extends android.app.Service {
    ctor public NotificationCompatSideChannelService();
    method public abstract void cancel(java.lang.String, int, java.lang.String);
    method public abstract void cancelAll(java.lang.String);
    method public abstract void notify(java.lang.String, int, java.lang.String, android.app.Notification);
    method public android.os.IBinder onBind(android.content.Intent);
  }

  public final class NotificationManagerCompat {
    method public boolean areNotificationsEnabled();
    method public void cancel(int);
    method public void cancel(java.lang.String, int);
    method public void cancelAll();
    method public static android.support.v4.app.NotificationManagerCompat from(android.content.Context);
    method public static java.util.Set<java.lang.String> getEnabledListenerPackages(android.content.Context);
    method public int getImportance();
    method public void notify(int, android.app.Notification);
    method public void notify(java.lang.String, int, android.app.Notification);
    field public static final java.lang.String ACTION_BIND_SIDE_CHANNEL = "android.support.BIND_NOTIFICATION_SIDE_CHANNEL";
    field public static final java.lang.String EXTRA_USE_SIDE_CHANNEL = "android.support.useSideChannel";
    field public static final int IMPORTANCE_DEFAULT = 3; // 0x3
    field public static final int IMPORTANCE_HIGH = 4; // 0x4
    field public static final int IMPORTANCE_LOW = 2; // 0x2
    field public static final int IMPORTANCE_MAX = 5; // 0x5
    field public static final int IMPORTANCE_MIN = 1; // 0x1
    field public static final int IMPORTANCE_NONE = 0; // 0x0
    field public static final int IMPORTANCE_UNSPECIFIED = -1000; // 0xfffffc18
  }

  public final class RemoteInput extends android.support.v4.app.RemoteInputCompatBase.RemoteInput {
    method public static void addDataResultToIntent(android.support.v4.app.RemoteInput, android.content.Intent, java.util.Map<java.lang.String, android.net.Uri>);
    method public static void addResultsToIntent(android.support.v4.app.RemoteInput[], android.content.Intent, android.os.Bundle);
    method public boolean getAllowFreeFormInput();
    method public java.util.Set<java.lang.String> getAllowedDataTypes();
    method public java.lang.CharSequence[] getChoices();
    method public static java.util.Map<java.lang.String, android.net.Uri> getDataResultsFromIntent(android.content.Intent, java.lang.String);
    method public android.os.Bundle getExtras();
    method public java.lang.CharSequence getLabel();
    method public java.lang.String getResultKey();
    method public static android.os.Bundle getResultsFromIntent(android.content.Intent);
    method public boolean isDataOnly();
    field public static final java.lang.String EXTRA_RESULTS_DATA = "android.remoteinput.resultsData";
    field public static final java.lang.String RESULTS_CLIP_LABEL = "android.remoteinput.results";
  }

  public static final class RemoteInput.Builder {
    ctor public RemoteInput.Builder(java.lang.String);
    method public android.support.v4.app.RemoteInput.Builder addExtras(android.os.Bundle);
    method public android.support.v4.app.RemoteInput build();
    method public android.os.Bundle getExtras();
    method public android.support.v4.app.RemoteInput.Builder setAllowDataType(java.lang.String, boolean);
    method public android.support.v4.app.RemoteInput.Builder setAllowFreeFormInput(boolean);
    method public android.support.v4.app.RemoteInput.Builder setChoices(java.lang.CharSequence[]);
    method public android.support.v4.app.RemoteInput.Builder setLabel(java.lang.CharSequence);
  }

   deprecated class RemoteInputCompatBase {
  }

  public static abstract class RemoteInputCompatBase.RemoteInput {
    ctor public RemoteInputCompatBase.RemoteInput();
    method protected abstract boolean getAllowFreeFormInput();
    method protected abstract java.util.Set<java.lang.String> getAllowedDataTypes();
    method protected abstract java.lang.CharSequence[] getChoices();
    method protected abstract android.os.Bundle getExtras();
    method protected abstract java.lang.CharSequence getLabel();
    method protected abstract java.lang.String getResultKey();
  }

  public final class ServiceCompat {
    method public static void stopForeground(android.app.Service, int);
    field public static final int START_STICKY = 1; // 0x1
    field public static final int STOP_FOREGROUND_DETACH = 2; // 0x2
    field public static final int STOP_FOREGROUND_REMOVE = 1; // 0x1
  }

  public final class ShareCompat {
    method public static void configureMenuItem(android.view.MenuItem, android.support.v4.app.ShareCompat.IntentBuilder);
    method public static void configureMenuItem(android.view.Menu, int, android.support.v4.app.ShareCompat.IntentBuilder);
    method public static android.content.ComponentName getCallingActivity(android.app.Activity);
    method public static java.lang.String getCallingPackage(android.app.Activity);
    field public static final java.lang.String EXTRA_CALLING_ACTIVITY = "android.support.v4.app.EXTRA_CALLING_ACTIVITY";
    field public static final java.lang.String EXTRA_CALLING_PACKAGE = "android.support.v4.app.EXTRA_CALLING_PACKAGE";
  }

  public static class ShareCompat.IntentBuilder {
    method public android.support.v4.app.ShareCompat.IntentBuilder addEmailBcc(java.lang.String);
    method public android.support.v4.app.ShareCompat.IntentBuilder addEmailBcc(java.lang.String[]);
    method public android.support.v4.app.ShareCompat.IntentBuilder addEmailCc(java.lang.String);
    method public android.support.v4.app.ShareCompat.IntentBuilder addEmailCc(java.lang.String[]);
    method public android.support.v4.app.ShareCompat.IntentBuilder addEmailTo(java.lang.String);
    method public android.support.v4.app.ShareCompat.IntentBuilder addEmailTo(java.lang.String[]);
    method public android.support.v4.app.ShareCompat.IntentBuilder addStream(android.net.Uri);
    method public android.content.Intent createChooserIntent();
    method public static android.support.v4.app.ShareCompat.IntentBuilder from(android.app.Activity);
    method public android.content.Intent getIntent();
    method public android.support.v4.app.ShareCompat.IntentBuilder setChooserTitle(java.lang.CharSequence);
    method public android.support.v4.app.ShareCompat.IntentBuilder setChooserTitle(int);
    method public android.support.v4.app.ShareCompat.IntentBuilder setEmailBcc(java.lang.String[]);
    method public android.support.v4.app.ShareCompat.IntentBuilder setEmailCc(java.lang.String[]);
    method public android.support.v4.app.ShareCompat.IntentBuilder setEmailTo(java.lang.String[]);
    method public android.support.v4.app.ShareCompat.IntentBuilder setHtmlText(java.lang.String);
    method public android.support.v4.app.ShareCompat.IntentBuilder setStream(android.net.Uri);
    method public android.support.v4.app.ShareCompat.IntentBuilder setSubject(java.lang.String);
    method public android.support.v4.app.ShareCompat.IntentBuilder setText(java.lang.CharSequence);
    method public android.support.v4.app.ShareCompat.IntentBuilder setType(java.lang.String);
    method public void startChooser();
  }

  public static class ShareCompat.IntentReader {
    method public static android.support.v4.app.ShareCompat.IntentReader from(android.app.Activity);
    method public android.content.ComponentName getCallingActivity();
    method public android.graphics.drawable.Drawable getCallingActivityIcon();
    method public android.graphics.drawable.Drawable getCallingApplicationIcon();
    method public java.lang.CharSequence getCallingApplicationLabel();
    method public java.lang.String getCallingPackage();
    method public java.lang.String[] getEmailBcc();
    method public java.lang.String[] getEmailCc();
    method public java.lang.String[] getEmailTo();
    method public java.lang.String getHtmlText();
    method public android.net.Uri getStream();
    method public android.net.Uri getStream(int);
    method public int getStreamCount();
    method public java.lang.String getSubject();
    method public java.lang.CharSequence getText();
    method public java.lang.String getType();
    method public boolean isMultipleShare();
    method public boolean isShareIntent();
    method public boolean isSingleShare();
  }

  public abstract class SharedElementCallback {
    ctor public SharedElementCallback();
    method public android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF);
    method public android.view.View onCreateSnapshotView(android.content.Context, android.os.Parcelable);
    method public void onMapSharedElements(java.util.List<java.lang.String>, java.util.Map<java.lang.String, android.view.View>);
    method public void onRejectSharedElements(java.util.List<android.view.View>);
    method public void onSharedElementEnd(java.util.List<java.lang.String>, java.util.List<android.view.View>, java.util.List<android.view.View>);
    method public void onSharedElementStart(java.util.List<java.lang.String>, java.util.List<android.view.View>, java.util.List<android.view.View>);
    method public void onSharedElementsArrived(java.util.List<java.lang.String>, java.util.List<android.view.View>, android.support.v4.app.SharedElementCallback.OnSharedElementsReadyListener);
  }

  public static abstract interface SharedElementCallback.OnSharedElementsReadyListener {
    method public abstract void onSharedElementsReady();
  }

}

package android.support.v4.content {

  public final class ContentResolverCompat {
    method public static android.database.Cursor query(android.content.ContentResolver, android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, android.support.v4.os.CancellationSignal);
  }

  public class ContextCompat {
    ctor protected ContextCompat();
    method public static int checkSelfPermission(android.content.Context, java.lang.String);
    method public static android.content.Context createDeviceProtectedStorageContext(android.content.Context);
    method public static java.io.File getCodeCacheDir(android.content.Context);
    method public static final int getColor(android.content.Context, int);
    method public static final android.content.res.ColorStateList getColorStateList(android.content.Context, int);
    method public static java.io.File getDataDir(android.content.Context);
    method public static final android.graphics.drawable.Drawable getDrawable(android.content.Context, int);
    method public static java.io.File[] getExternalCacheDirs(android.content.Context);
    method public static java.io.File[] getExternalFilesDirs(android.content.Context, java.lang.String);
    method public static final java.io.File getNoBackupFilesDir(android.content.Context);
    method public static java.io.File[] getObbDirs(android.content.Context);
    method public static boolean isDeviceProtectedStorage(android.content.Context);
    method public static boolean startActivities(android.content.Context, android.content.Intent[]);
    method public static boolean startActivities(android.content.Context, android.content.Intent[], android.os.Bundle);
    method public static void startActivity(android.content.Context, android.content.Intent, android.os.Bundle);
    method public static void startForegroundService(android.content.Context, android.content.Intent);
  }

  public final class IntentCompat {
    method public static deprecated android.content.Intent makeMainActivity(android.content.ComponentName);
    method public static android.content.Intent makeMainSelectorActivity(java.lang.String, java.lang.String);
    method public static deprecated android.content.Intent makeRestartActivityTask(android.content.ComponentName);
    field public static final deprecated java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE = "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE";
    field public static final deprecated java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE = "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE";
    field public static final java.lang.String CATEGORY_LEANBACK_LAUNCHER = "android.intent.category.LEANBACK_LAUNCHER";
    field public static final deprecated java.lang.String EXTRA_CHANGED_PACKAGE_LIST = "android.intent.extra.changed_package_list";
    field public static final deprecated java.lang.String EXTRA_CHANGED_UID_LIST = "android.intent.extra.changed_uid_list";
    field public static final java.lang.String EXTRA_HTML_TEXT = "android.intent.extra.HTML_TEXT";
    field public static final java.lang.String EXTRA_START_PLAYBACK = "android.intent.extra.START_PLAYBACK";
    field public static final deprecated int FLAG_ACTIVITY_CLEAR_TASK = 32768; // 0x8000
    field public static final deprecated int FLAG_ACTIVITY_TASK_ON_HOME = 16384; // 0x4000
  }

  public final deprecated class ParallelExecutorCompat {
    method public static deprecated java.util.concurrent.Executor getParallelExecutor();
  }

  public final class SharedPreferencesCompat {
  }

  public static final class SharedPreferencesCompat.EditorCompat {
    method public void apply(android.content.SharedPreferences.Editor);
    method public static android.support.v4.content.SharedPreferencesCompat.EditorCompat getInstance();
  }

}

package android.support.v4.content.pm {

  public final class ActivityInfoCompat {
    field public static final int CONFIG_UI_MODE = 512; // 0x200
  }

  public class ShortcutInfoCompat {
    method public android.content.ComponentName getActivity();
    method public java.lang.CharSequence getDisabledMessage();
    method public java.lang.String getId();
    method public android.content.Intent getIntent();
    method public android.content.Intent[] getIntents();
    method public java.lang.CharSequence getLongLabel();
    method public java.lang.CharSequence getShortLabel();
  }

  public static class ShortcutInfoCompat.Builder {
    ctor public ShortcutInfoCompat.Builder(android.content.Context, java.lang.String);
    method public android.support.v4.content.pm.ShortcutInfoCompat build();
    method public android.support.v4.content.pm.ShortcutInfoCompat.Builder setActivity(android.content.ComponentName);
    method public android.support.v4.content.pm.ShortcutInfoCompat.Builder setDisabledMessage(java.lang.CharSequence);
    method public deprecated android.support.v4.content.pm.ShortcutInfoCompat.Builder setIcon(android.graphics.Bitmap);
    method public deprecated android.support.v4.content.pm.ShortcutInfoCompat.Builder setIcon(int);
    method public android.support.v4.content.pm.ShortcutInfoCompat.Builder setIcon(android.support.v4.graphics.drawable.IconCompat);
    method public android.support.v4.content.pm.ShortcutInfoCompat.Builder setIntent(android.content.Intent);
    method public android.support.v4.content.pm.ShortcutInfoCompat.Builder setIntents(android.content.Intent[]);
    method public android.support.v4.content.pm.ShortcutInfoCompat.Builder setLongLabel(java.lang.CharSequence);
    method public android.support.v4.content.pm.ShortcutInfoCompat.Builder setShortLabel(java.lang.CharSequence);
  }

  public class ShortcutManagerCompat {
    method public static android.content.Intent createShortcutResultIntent(android.content.Context, android.support.v4.content.pm.ShortcutInfoCompat);
    method public static boolean isRequestPinShortcutSupported(android.content.Context);
    method public static boolean requestPinShortcut(android.content.Context, android.support.v4.content.pm.ShortcutInfoCompat, android.content.IntentSender);
  }

}

package android.support.v4.content.res {

  public final class ConfigurationHelper {
    method public static int getDensityDpi(android.content.res.Resources);
    method public static deprecated int getScreenHeightDp(android.content.res.Resources);
    method public static deprecated int getScreenWidthDp(android.content.res.Resources);
    method public static deprecated int getSmallestScreenWidthDp(android.content.res.Resources);
  }

  public final class ResourcesCompat {
    method public static int getColor(android.content.res.Resources, int, android.content.res.Resources.Theme) throws android.content.res.Resources.NotFoundException;
    method public static android.content.res.ColorStateList getColorStateList(android.content.res.Resources, int, android.content.res.Resources.Theme) throws android.content.res.Resources.NotFoundException;
    method public static android.graphics.drawable.Drawable getDrawable(android.content.res.Resources, int, android.content.res.Resources.Theme) throws android.content.res.Resources.NotFoundException;
    method public static android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources, int, int, android.content.res.Resources.Theme) throws android.content.res.Resources.NotFoundException;
    method public static android.graphics.Typeface getFont(android.content.Context, int) throws android.content.res.Resources.NotFoundException;
  }

}

package android.support.v4.database {

  public final class DatabaseUtilsCompat {
    method public static java.lang.String[] appendSelectionArgs(java.lang.String[], java.lang.String[]);
    method public static java.lang.String concatenateWhere(java.lang.String, java.lang.String);
  }

}

package android.support.v4.graphics {

  public final class BitmapCompat {
    method public static int getAllocationByteCount(android.graphics.Bitmap);
    method public static boolean hasMipMap(android.graphics.Bitmap);
    method public static void setHasMipMap(android.graphics.Bitmap, boolean);
  }

  public final class PaintCompat {
    method public static boolean hasGlyph(android.graphics.Paint, java.lang.String);
  }

}

package android.support.v4.graphics.drawable {

  public final class DrawableCompat {
    method public static void applyTheme(android.graphics.drawable.Drawable, android.content.res.Resources.Theme);
    method public static boolean canApplyTheme(android.graphics.drawable.Drawable);
    method public static void clearColorFilter(android.graphics.drawable.Drawable);
    method public static int getAlpha(android.graphics.drawable.Drawable);
    method public static android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable);
    method public static int getLayoutDirection(android.graphics.drawable.Drawable);
    method public static void inflate(android.graphics.drawable.Drawable, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources.Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException;
    method public static boolean isAutoMirrored(android.graphics.drawable.Drawable);
    method public static void jumpToCurrentState(android.graphics.drawable.Drawable);
    method public static void setAutoMirrored(android.graphics.drawable.Drawable, boolean);
    method public static void setHotspot(android.graphics.drawable.Drawable, float, float);
    method public static void setHotspotBounds(android.graphics.drawable.Drawable, int, int, int, int);
    method public static boolean setLayoutDirection(android.graphics.drawable.Drawable, int);
    method public static void setTint(android.graphics.drawable.Drawable, int);
    method public static void setTintList(android.graphics.drawable.Drawable, android.content.res.ColorStateList);
    method public static void setTintMode(android.graphics.drawable.Drawable, android.graphics.PorterDuff.Mode);
    method public static <T extends android.graphics.drawable.Drawable> T unwrap(android.graphics.drawable.Drawable);
    method public static android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable);
  }

  public class IconCompat {
    method public static android.support.v4.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap);
    method public static android.support.v4.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap);
    method public static android.support.v4.graphics.drawable.IconCompat createWithContentUri(java.lang.String);
    method public static android.support.v4.graphics.drawable.IconCompat createWithContentUri(android.net.Uri);
    method public static android.support.v4.graphics.drawable.IconCompat createWithData(byte[], int, int);
    method public static android.support.v4.graphics.drawable.IconCompat createWithResource(android.content.Context, int);
  }

}

package android.support.v4.hardware.display {

  public abstract class DisplayManagerCompat {
    method public abstract android.view.Display getDisplay(int);
    method public abstract android.view.Display[] getDisplays();
    method public abstract android.view.Display[] getDisplays(java.lang.String);
    method public static android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context);
    field public static final java.lang.String DISPLAY_CATEGORY_PRESENTATION = "android.hardware.display.category.PRESENTATION";
  }

}

package android.support.v4.hardware.fingerprint {

  public final class FingerprintManagerCompat {
    method public void authenticate(android.support.v4.hardware.fingerprint.FingerprintManagerCompat.CryptoObject, int, android.support.v4.os.CancellationSignal, android.support.v4.hardware.fingerprint.FingerprintManagerCompat.AuthenticationCallback, android.os.Handler);
    method public static android.support.v4.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context);
    method public boolean hasEnrolledFingerprints();
    method public boolean isHardwareDetected();
  }

  public static abstract class FingerprintManagerCompat.AuthenticationCallback {
    ctor public FingerprintManagerCompat.AuthenticationCallback();
    method public void onAuthenticationError(int, java.lang.CharSequence);
    method public void onAuthenticationFailed();
    method public void onAuthenticationHelp(int, java.lang.CharSequence);
    method public void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompat.AuthenticationResult);
  }

  public static final class FingerprintManagerCompat.AuthenticationResult {
    ctor public FingerprintManagerCompat.AuthenticationResult(android.support.v4.hardware.fingerprint.FingerprintManagerCompat.CryptoObject);
    method public android.support.v4.hardware.fingerprint.FingerprintManagerCompat.CryptoObject getCryptoObject();
  }

  public static class FingerprintManagerCompat.CryptoObject {
    ctor public FingerprintManagerCompat.CryptoObject(java.security.Signature);
    ctor public FingerprintManagerCompat.CryptoObject(javax.crypto.Cipher);
    ctor public FingerprintManagerCompat.CryptoObject(javax.crypto.Mac);
    method public javax.crypto.Cipher getCipher();
    method public javax.crypto.Mac getMac();
    method public java.security.Signature getSignature();
  }

}

package android.support.v4.net {

  public final class ConnectivityManagerCompat {
    method public static android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager, android.content.Intent);
    method public static int getRestrictBackgroundStatus(android.net.ConnectivityManager);
    method public static boolean isActiveNetworkMetered(android.net.ConnectivityManager);
    field public static final int RESTRICT_BACKGROUND_STATUS_DISABLED = 1; // 0x1
    field public static final int RESTRICT_BACKGROUND_STATUS_ENABLED = 3; // 0x3
    field public static final int RESTRICT_BACKGROUND_STATUS_WHITELISTED = 2; // 0x2
  }

  public final class TrafficStatsCompat {
    method public static deprecated void clearThreadStatsTag();
    method public static deprecated int getThreadStatsTag();
    method public static deprecated void incrementOperationCount(int);
    method public static deprecated void incrementOperationCount(int, int);
    method public static deprecated void setThreadStatsTag(int);
    method public static void tagDatagramSocket(java.net.DatagramSocket) throws java.net.SocketException;
    method public static deprecated void tagSocket(java.net.Socket) throws java.net.SocketException;
    method public static void untagDatagramSocket(java.net.DatagramSocket) throws java.net.SocketException;
    method public static deprecated void untagSocket(java.net.Socket) throws java.net.SocketException;
  }

}

package android.support.v4.os {

  public final deprecated class AsyncTaskCompat {
    method public static deprecated <Params, Progress, Result> android.os.AsyncTask<Params, Progress, Result> executeParallel(android.os.AsyncTask<Params, Progress, Result>, Params...);
  }

  public class BuildCompat {
    method public static deprecated boolean isAtLeastN();
    method public static deprecated boolean isAtLeastNMR1();
    method public static deprecated boolean isAtLeastO();
    method public static boolean isAtLeastOMR1();
    method public static boolean isAtLeastP();
  }

  public final class CancellationSignal {
    ctor public CancellationSignal();
    method public void cancel();
    method public java.lang.Object getCancellationSignalObject();
    method public boolean isCanceled();
    method public void setOnCancelListener(android.support.v4.os.CancellationSignal.OnCancelListener);
    method public void throwIfCanceled();
  }

  public static abstract interface CancellationSignal.OnCancelListener {
    method public abstract void onCancel();
  }

  public final class ConfigurationCompat {
    method public static android.support.v4.os.LocaleListCompat getLocales(android.content.res.Configuration);
  }

  public final class EnvironmentCompat {
    method public static java.lang.String getStorageState(java.io.File);
    field public static final java.lang.String MEDIA_UNKNOWN = "unknown";
  }

  public final class LocaleListCompat {
    method public static android.support.v4.os.LocaleListCompat create(java.util.Locale...);
    method public static android.support.v4.os.LocaleListCompat forLanguageTags(java.lang.String);
    method public java.util.Locale get(int);
    method public static android.support.v4.os.LocaleListCompat getAdjustedDefault();
    method public static android.support.v4.os.LocaleListCompat getDefault();
    method public static android.support.v4.os.LocaleListCompat getEmptyLocaleList();
    method public java.util.Locale getFirstMatch(java.lang.String[]);
    method public int indexOf(java.util.Locale);
    method public boolean isEmpty();
    method public int size();
    method public java.lang.String toLanguageTags();
    method public java.lang.Object unwrap();
    method public static android.support.v4.os.LocaleListCompat wrap(java.lang.Object);
  }

  public class OperationCanceledException extends java.lang.RuntimeException {
    ctor public OperationCanceledException();
    ctor public OperationCanceledException(java.lang.String);
  }

  public final deprecated class ParcelableCompat {
    method public static deprecated <T> android.os.Parcelable.Creator<T> newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks<T>);
  }

  public abstract deprecated interface ParcelableCompatCreatorCallbacks<T> {
    method public abstract T createFromParcel(android.os.Parcel, java.lang.ClassLoader);
    method public abstract T[] newArray(int);
  }

  public final class TraceCompat {
    method public static void beginSection(java.lang.String);
    method public static void endSection();
  }

  public class UserManagerCompat {
    method public static boolean isUserUnlocked(android.content.Context);
  }

}

package android.support.v4.provider {

  public final class FontRequest {
    ctor public FontRequest(java.lang.String, java.lang.String, java.lang.String, java.util.List<java.util.List<byte[]>>);
    ctor public FontRequest(java.lang.String, java.lang.String, java.lang.String, int);
    method public java.util.List<java.util.List<byte[]>> getCertificates();
    method public int getCertificatesArrayResId();
    method public java.lang.String getProviderAuthority();
    method public java.lang.String getProviderPackage();
    method public java.lang.String getQuery();
  }

  public class FontsContractCompat {
    method public static android.graphics.Typeface buildTypeface(android.content.Context, android.os.CancellationSignal, android.support.v4.provider.FontsContractCompat.FontInfo[]);
    method public static android.support.v4.provider.FontsContractCompat.FontFamilyResult fetchFonts(android.content.Context, android.os.CancellationSignal, android.support.v4.provider.FontRequest) throws android.content.pm.PackageManager.NameNotFoundException;
    method public static void requestFont(android.content.Context, android.support.v4.provider.FontRequest, android.support.v4.provider.FontsContractCompat.FontRequestCallback, android.os.Handler);
  }

  public static final class FontsContractCompat.Columns {
    ctor public FontsContractCompat.Columns();
    field public static final java.lang.String FILE_ID = "file_id";
    field public static final java.lang.String ITALIC = "font_italic";
    field public static final java.lang.String RESULT_CODE = "result_code";
    field public static final int RESULT_CODE_FONT_NOT_FOUND = 1; // 0x1
    field public static final int RESULT_CODE_FONT_UNAVAILABLE = 2; // 0x2
    field public static final int RESULT_CODE_MALFORMED_QUERY = 3; // 0x3
    field public static final int RESULT_CODE_OK = 0; // 0x0
    field public static final java.lang.String TTC_INDEX = "font_ttc_index";
    field public static final java.lang.String VARIATION_SETTINGS = "font_variation_settings";
    field public static final java.lang.String WEIGHT = "font_weight";
  }

  public static class FontsContractCompat.FontFamilyResult {
    method public android.support.v4.provider.FontsContractCompat.FontInfo[] getFonts();
    method public int getStatusCode();
    field public static final int STATUS_OK = 0; // 0x0
    field public static final int STATUS_UNEXPECTED_DATA_PROVIDED = 2; // 0x2
    field public static final int STATUS_WRONG_CERTIFICATES = 1; // 0x1
  }

  public static class FontsContractCompat.FontInfo {
    method public int getResultCode();
    method public int getTtcIndex();
    method public android.net.Uri getUri();
    method public int getWeight();
    method public boolean isItalic();
  }

  public static class FontsContractCompat.FontRequestCallback {
    ctor public FontsContractCompat.FontRequestCallback();
    method public void onTypefaceRequestFailed(int);
    method public void onTypefaceRetrieved(android.graphics.Typeface);
    field public static final int FAIL_REASON_FONT_LOAD_ERROR = -3; // 0xfffffffd
    field public static final int FAIL_REASON_FONT_NOT_FOUND = 1; // 0x1
    field public static final int FAIL_REASON_FONT_UNAVAILABLE = 2; // 0x2
    field public static final int FAIL_REASON_MALFORMED_QUERY = 3; // 0x3
    field public static final int FAIL_REASON_PROVIDER_NOT_FOUND = -1; // 0xffffffff
    field public static final int FAIL_REASON_WRONG_CERTIFICATES = -2; // 0xfffffffe
  }

}

package android.support.v4.text {

  public final class BidiFormatter {
    method public static android.support.v4.text.BidiFormatter getInstance();
    method public static android.support.v4.text.BidiFormatter getInstance(boolean);
    method public static android.support.v4.text.BidiFormatter getInstance(java.util.Locale);
    method public boolean getStereoReset();
    method public boolean isRtl(java.lang.String);
    method public boolean isRtl(java.lang.CharSequence);
    method public boolean isRtlContext();
    method public java.lang.String unicodeWrap(java.lang.String, android.support.v4.text.TextDirectionHeuristicCompat, boolean);
    method public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, android.support.v4.text.TextDirectionHeuristicCompat, boolean);
    method public java.lang.String unicodeWrap(java.lang.String, android.support.v4.text.TextDirectionHeuristicCompat);
    method public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, android.support.v4.text.TextDirectionHeuristicCompat);
    method public java.lang.String unicodeWrap(java.lang.String, boolean);
    method public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, boolean);
    method public java.lang.String unicodeWrap(java.lang.String);
    method public java.lang.CharSequence unicodeWrap(java.lang.CharSequence);
  }

  public static final class BidiFormatter.Builder {
    ctor public BidiFormatter.Builder();
    ctor public BidiFormatter.Builder(boolean);
    ctor public BidiFormatter.Builder(java.util.Locale);
    method public android.support.v4.text.BidiFormatter build();
    method public android.support.v4.text.BidiFormatter.Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat);
    method public android.support.v4.text.BidiFormatter.Builder stereoReset(boolean);
  }

  public final class ICUCompat {
    method public static java.lang.String maximizeAndGetScript(java.util.Locale);
  }

  public abstract interface TextDirectionHeuristicCompat {
    method public abstract boolean isRtl(char[], int, int);
    method public abstract boolean isRtl(java.lang.CharSequence, int, int);
  }

  public final class TextDirectionHeuristicsCompat {
    field public static final android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR;
    field public static final android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR;
    field public static final android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL;
    field public static final android.support.v4.text.TextDirectionHeuristicCompat LOCALE;
    field public static final android.support.v4.text.TextDirectionHeuristicCompat LTR;
    field public static final android.support.v4.text.TextDirectionHeuristicCompat RTL;
  }

  public final class TextUtilsCompat {
    method public static int getLayoutDirectionFromLocale(java.util.Locale);
    method public static java.lang.String htmlEncode(java.lang.String);
    field public static final deprecated java.util.Locale ROOT;
  }

}

package android.support.v4.text.util {

  public final class LinkifyCompat {
    method public static final boolean addLinks(android.text.Spannable, int);
    method public static final boolean addLinks(android.widget.TextView, int);
    method public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String);
    method public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify.MatchFilter, android.text.util.Linkify.TransformFilter);
    method public static final void addLinks(android.widget.TextView, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify.MatchFilter, android.text.util.Linkify.TransformFilter);
    method public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String);
    method public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, android.text.util.Linkify.MatchFilter, android.text.util.Linkify.TransformFilter);
    method public static final boolean addLinks(android.text.Spannable, java.util.regex.Pattern, java.lang.String, java.lang.String[], android.text.util.Linkify.MatchFilter, android.text.util.Linkify.TransformFilter);
  }

}

package android.support.v4.util {

  public class ArrayMap<K, V> extends android.support.v4.util.SimpleArrayMap implements java.util.Map {
    ctor public ArrayMap();
    ctor public ArrayMap(int);
    ctor public ArrayMap(android.support.v4.util.SimpleArrayMap);
    method public boolean containsAll(java.util.Collection<?>);
    method public java.util.Set<java.util.Map.Entry<K, V>> entrySet();
    method public java.util.Set<K> keySet();
    method public void putAll(java.util.Map<? extends K, ? extends V>);
    method public boolean removeAll(java.util.Collection<?>);
    method public boolean retainAll(java.util.Collection<?>);
    method public java.util.Collection<V> values();
  }

  public final class ArraySet<E> implements java.util.Collection java.util.Set {
    ctor public ArraySet();
    ctor public ArraySet(int);
    ctor public ArraySet(android.support.v4.util.ArraySet<E>);
    method public boolean add(E);
    method public void addAll(android.support.v4.util.ArraySet<? extends E>);
    method public boolean addAll(java.util.Collection<? extends E>);
    method public void clear();
    method public boolean contains(java.lang.Object);
    method public boolean containsAll(java.util.Collection<?>);
    method public void ensureCapacity(int);
    method public int indexOf(java.lang.Object);
    method public boolean isEmpty();
    method public java.util.Iterator<E> iterator();
    method public boolean remove(java.lang.Object);
    method public boolean removeAll(android.support.v4.util.ArraySet<? extends E>);
    method public boolean removeAll(java.util.Collection<?>);
    method public E removeAt(int);
    method public boolean retainAll(java.util.Collection<?>);
    method public int size();
    method public java.lang.Object[] toArray();
    method public <T> T[] toArray(T[]);
    method public E valueAt(int);
  }

  public class AtomicFile {
    ctor public AtomicFile(java.io.File);
    method public void delete();
    method public void failWrite(java.io.FileOutputStream);
    method public void finishWrite(java.io.FileOutputStream);
    method public java.io.File getBaseFile();
    method public java.io.FileInputStream openRead() throws java.io.FileNotFoundException;
    method public byte[] readFully() throws java.io.IOException;
    method public java.io.FileOutputStream startWrite() throws java.io.IOException;
  }

  public final class CircularArray<E> {
    ctor public CircularArray();
    ctor public CircularArray(int);
    method public void addFirst(E);
    method public void addLast(E);
    method public void clear();
    method public E get(int);
    method public E getFirst();
    method public E getLast();
    method public boolean isEmpty();
    method public E popFirst();
    method public E popLast();
    method public void removeFromEnd(int);
    method public void removeFromStart(int);
    method public int size();
  }

  public final class CircularIntArray {
    ctor public CircularIntArray();
    ctor public CircularIntArray(int);
    method public void addFirst(int);
    method public void addLast(int);
    method public void clear();
    method public int get(int);
    method public int getFirst();
    method public int getLast();
    method public boolean isEmpty();
    method public int popFirst();
    method public int popLast();
    method public void removeFromEnd(int);
    method public void removeFromStart(int);
    method public int size();
  }

  public class LongSparseArray<E> {
    ctor public LongSparseArray();
    ctor public LongSparseArray(int);
    method public void append(long, E);
    method public void clear();
    method public android.support.v4.util.LongSparseArray<E> clone();
    method public void delete(long);
    method public E get(long);
    method public E get(long, E);
    method public int indexOfKey(long);
    method public int indexOfValue(E);
    method public long keyAt(int);
    method public void put(long, E);
    method public void remove(long);
    method public void removeAt(int);
    method public void setValueAt(int, E);
    method public int size();
    method public E valueAt(int);
  }

  public class LruCache<K, V> {
    ctor public LruCache(int);
    method protected V create(K);
    method public final synchronized int createCount();
    method protected void entryRemoved(boolean, K, V, V);
    method public final void evictAll();
    method public final synchronized int evictionCount();
    method public final V get(K);
    method public final synchronized int hitCount();
    method public final synchronized int maxSize();
    method public final synchronized int missCount();
    method public final V put(K, V);
    method public final synchronized int putCount();
    method public final V remove(K);
    method public void resize(int);
    method public final synchronized int size();
    method protected int sizeOf(K, V);
    method public final synchronized java.util.Map<K, V> snapshot();
    method public final synchronized java.lang.String toString();
    method public void trimToSize(int);
  }

  public class ObjectsCompat {
    method public static boolean equals(java.lang.Object, java.lang.Object);
  }

  public class Pair<F, S> {
    ctor public Pair(F, S);
    method public static <A, B> android.support.v4.util.Pair<A, B> create(A, B);
    field public final F first;
    field public final S second;
  }

  public final class PatternsCompat {
    field public static final java.util.regex.Pattern DOMAIN_NAME;
    field public static final java.util.regex.Pattern EMAIL_ADDRESS;
    field public static final java.util.regex.Pattern IP_ADDRESS;
    field public static final java.util.regex.Pattern WEB_URL;
  }

  public final class Pools {
  }

  public static abstract interface Pools.Pool<T> {
    method public abstract T acquire();
    method public abstract boolean release(T);
  }

  public static class Pools.SimplePool<T> implements android.support.v4.util.Pools.Pool {
    ctor public Pools.SimplePool(int);
    method public T acquire();
    method public boolean release(T);
  }

  public static class Pools.SynchronizedPool<T> extends android.support.v4.util.Pools.SimplePool {
    ctor public Pools.SynchronizedPool(int);
  }

  public class SimpleArrayMap<K, V> {
    ctor public SimpleArrayMap();
    ctor public SimpleArrayMap(int);
    ctor public SimpleArrayMap(android.support.v4.util.SimpleArrayMap<K, V>);
    method public void clear();
    method public boolean containsKey(java.lang.Object);
    method public boolean containsValue(java.lang.Object);
    method public void ensureCapacity(int);
    method public V get(java.lang.Object);
    method public int indexOfKey(java.lang.Object);
    method public boolean isEmpty();
    method public K keyAt(int);
    method public V put(K, V);
    method public void putAll(android.support.v4.util.SimpleArrayMap<? extends K, ? extends V>);
    method public V remove(java.lang.Object);
    method public V removeAt(int);
    method public V setValueAt(int, V);
    method public int size();
    method public V valueAt(int);
  }

  public class SparseArrayCompat<E> {
    ctor public SparseArrayCompat();
    ctor public SparseArrayCompat(int);
    method public void append(int, E);
    method public void clear();
    method public android.support.v4.util.SparseArrayCompat<E> clone();
    method public void delete(int);
    method public E get(int);
    method public E get(int, E);
    method public int indexOfKey(int);
    method public int indexOfValue(E);
    method public int keyAt(int);
    method public void put(int, E);
    method public void remove(int);
    method public void removeAt(int);
    method public void removeAtRange(int, int);
    method public void setValueAt(int, E);
    method public int size();
    method public E valueAt(int);
  }

}

package android.support.v4.view {

  public class AccessibilityDelegateCompat {
    ctor public AccessibilityDelegateCompat();
    method public boolean dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent);
    method public android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View);
    method public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent);
    method public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat);
    method public void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent);
    method public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent);
    method public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle);
    method public void sendAccessibilityEvent(android.view.View, int);
    method public void sendAccessibilityEventUnchecked(android.view.View, android.view.accessibility.AccessibilityEvent);
  }

  public abstract class ActionProvider {
    ctor public ActionProvider(android.content.Context);
    method public android.content.Context getContext();
    method public boolean hasSubMenu();
    method public boolean isVisible();
    method public abstract android.view.View onCreateActionView();
    method public android.view.View onCreateActionView(android.view.MenuItem);
    method public boolean onPerformDefaultAction();
    method public void onPrepareSubMenu(android.view.SubMenu);
    method public boolean overridesItemVisibility();
    method public void refreshVisibility();
    method public void setVisibilityListener(android.support.v4.view.ActionProvider.VisibilityListener);
  }

  public static abstract interface ActionProvider.VisibilityListener {
    method public abstract void onActionProviderVisibilityChanged(boolean);
  }

  public final class GestureDetectorCompat {
    ctor public GestureDetectorCompat(android.content.Context, android.view.GestureDetector.OnGestureListener);
    ctor public GestureDetectorCompat(android.content.Context, android.view.GestureDetector.OnGestureListener, android.os.Handler);
    method public boolean isLongpressEnabled();
    method public boolean onTouchEvent(android.view.MotionEvent);
    method public void setIsLongpressEnabled(boolean);
    method public void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener);
  }

  public final class GravityCompat {
    method public static void apply(int, int, int, android.graphics.Rect, android.graphics.Rect, int);
    method public static void apply(int, int, int, android.graphics.Rect, int, int, android.graphics.Rect, int);
    method public static void applyDisplay(int, android.graphics.Rect, android.graphics.Rect, int);
    method public static int getAbsoluteGravity(int, int);
    field public static final int END = 8388613; // 0x800005
    field public static final int RELATIVE_HORIZONTAL_GRAVITY_MASK = 8388615; // 0x800007
    field public static final int RELATIVE_LAYOUT_DIRECTION = 8388608; // 0x800000
    field public static final int START = 8388611; // 0x800003
  }

  public final class InputDeviceCompat {
    field public static final int SOURCE_ANY = -256; // 0xffffff00
    field public static final int SOURCE_CLASS_BUTTON = 1; // 0x1
    field public static final int SOURCE_CLASS_JOYSTICK = 16; // 0x10
    field public static final int SOURCE_CLASS_MASK = 255; // 0xff
    field public static final int SOURCE_CLASS_NONE = 0; // 0x0
    field public static final int SOURCE_CLASS_POINTER = 2; // 0x2
    field public static final int SOURCE_CLASS_POSITION = 8; // 0x8
    field public static final int SOURCE_CLASS_TRACKBALL = 4; // 0x4
    field public static final int SOURCE_DPAD = 513; // 0x201
    field public static final int SOURCE_GAMEPAD = 1025; // 0x401
    field public static final int SOURCE_HDMI = 33554433; // 0x2000001
    field public static final int SOURCE_JOYSTICK = 16777232; // 0x1000010
    field public static final int SOURCE_KEYBOARD = 257; // 0x101
    field public static final int SOURCE_MOUSE = 8194; // 0x2002
    field public static final int SOURCE_ROTARY_ENCODER = 4194304; // 0x400000
    field public static final int SOURCE_STYLUS = 16386; // 0x4002
    field public static final int SOURCE_TOUCHPAD = 1048584; // 0x100008
    field public static final int SOURCE_TOUCHSCREEN = 4098; // 0x1002
    field public static final int SOURCE_TOUCH_NAVIGATION = 2097152; // 0x200000
    field public static final int SOURCE_TRACKBALL = 65540; // 0x10004
    field public static final int SOURCE_UNKNOWN = 0; // 0x0
  }

  public final deprecated class KeyEventCompat {
    method public static deprecated boolean dispatch(android.view.KeyEvent, android.view.KeyEvent.Callback, java.lang.Object, java.lang.Object);
    method public static deprecated java.lang.Object getKeyDispatcherState(android.view.View);
    method public static deprecated boolean hasModifiers(android.view.KeyEvent, int);
    method public static deprecated boolean hasNoModifiers(android.view.KeyEvent);
    method public static deprecated boolean isCtrlPressed(android.view.KeyEvent);
    method public static deprecated boolean isTracking(android.view.KeyEvent);
    method public static deprecated boolean metaStateHasModifiers(int, int);
    method public static deprecated boolean metaStateHasNoModifiers(int);
    method public static deprecated int normalizeMetaState(int);
    method public static deprecated void startTracking(android.view.KeyEvent);
  }

  public final class LayoutInflaterCompat {
    method public static deprecated android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater);
    method public static deprecated void setFactory(android.view.LayoutInflater, android.support.v4.view.LayoutInflaterFactory);
    method public static void setFactory2(android.view.LayoutInflater, android.view.LayoutInflater.Factory2);
  }

  public abstract deprecated interface LayoutInflaterFactory {
    method public abstract android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet);
  }

  public final class MarginLayoutParamsCompat {
    method public static int getLayoutDirection(android.view.ViewGroup.MarginLayoutParams);
    method public static int getMarginEnd(android.view.ViewGroup.MarginLayoutParams);
    method public static int getMarginStart(android.view.ViewGroup.MarginLayoutParams);
    method public static boolean isMarginRelative(android.view.ViewGroup.MarginLayoutParams);
    method public static void resolveLayoutDirection(android.view.ViewGroup.MarginLayoutParams, int);
    method public static void setLayoutDirection(android.view.ViewGroup.MarginLayoutParams, int);
    method public static void setMarginEnd(android.view.ViewGroup.MarginLayoutParams, int);
    method public static void setMarginStart(android.view.ViewGroup.MarginLayoutParams, int);
  }

  public final class MenuCompat {
    method public static deprecated void setShowAsAction(android.view.MenuItem, int);
  }

  public final class MenuItemCompat {
    method public static deprecated boolean collapseActionView(android.view.MenuItem);
    method public static deprecated boolean expandActionView(android.view.MenuItem);
    method public static android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem);
    method public static deprecated android.view.View getActionView(android.view.MenuItem);
    method public static int getAlphabeticModifiers(android.view.MenuItem);
    method public static java.lang.CharSequence getContentDescription(android.view.MenuItem);
    method public static android.content.res.ColorStateList getIconTintList(android.view.MenuItem);
    method public static android.graphics.PorterDuff.Mode getIconTintMode(android.view.MenuItem);
    method public static int getNumericModifiers(android.view.MenuItem);
    method public static java.lang.CharSequence getTooltipText(android.view.MenuItem);
    method public static deprecated boolean isActionViewExpanded(android.view.MenuItem);
    method public static android.view.MenuItem setActionProvider(android.view.MenuItem, android.support.v4.view.ActionProvider);
    method public static deprecated android.view.MenuItem setActionView(android.view.MenuItem, android.view.View);
    method public static deprecated android.view.MenuItem setActionView(android.view.MenuItem, int);
    method public static void setAlphabeticShortcut(android.view.MenuItem, char, int);
    method public static void setContentDescription(android.view.MenuItem, java.lang.CharSequence);
    method public static void setIconTintList(android.view.MenuItem, android.content.res.ColorStateList);
    method public static void setIconTintMode(android.view.MenuItem, android.graphics.PorterDuff.Mode);
    method public static void setNumericShortcut(android.view.MenuItem, char, int);
    method public static deprecated android.view.MenuItem setOnActionExpandListener(android.view.MenuItem, android.support.v4.view.MenuItemCompat.OnActionExpandListener);
    method public static void setShortcut(android.view.MenuItem, char, char, int, int);
    method public static deprecated void setShowAsAction(android.view.MenuItem, int);
    method public static void setTooltipText(android.view.MenuItem, java.lang.CharSequence);
    field public static final deprecated int SHOW_AS_ACTION_ALWAYS = 2; // 0x2
    field public static final deprecated int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW = 8; // 0x8
    field public static final deprecated int SHOW_AS_ACTION_IF_ROOM = 1; // 0x1
    field public static final deprecated int SHOW_AS_ACTION_NEVER = 0; // 0x0
    field public static final deprecated int SHOW_AS_ACTION_WITH_TEXT = 4; // 0x4
  }

  public static abstract deprecated interface MenuItemCompat.OnActionExpandListener {
    method public abstract boolean onMenuItemActionCollapse(android.view.MenuItem);
    method public abstract boolean onMenuItemActionExpand(android.view.MenuItem);
  }

  public final class MotionEventCompat {
    method public static deprecated int findPointerIndex(android.view.MotionEvent, int);
    method public static deprecated int getActionIndex(android.view.MotionEvent);
    method public static deprecated int getActionMasked(android.view.MotionEvent);
    method public static deprecated float getAxisValue(android.view.MotionEvent, int);
    method public static deprecated float getAxisValue(android.view.MotionEvent, int, int);
    method public static deprecated int getButtonState(android.view.MotionEvent);
    method public static deprecated int getPointerCount(android.view.MotionEvent);
    method public static deprecated int getPointerId(android.view.MotionEvent, int);
    method public static deprecated int getSource(android.view.MotionEvent);
    method public static deprecated float getX(android.view.MotionEvent, int);
    method public static deprecated float getY(android.view.MotionEvent, int);
    method public static boolean isFromSource(android.view.MotionEvent, int);
    field public static final deprecated int ACTION_HOVER_ENTER = 9; // 0x9
    field public static final deprecated int ACTION_HOVER_EXIT = 10; // 0xa
    field public static final deprecated int ACTION_HOVER_MOVE = 7; // 0x7
    field public static final deprecated int ACTION_MASK = 255; // 0xff
    field public static final deprecated int ACTION_POINTER_DOWN = 5; // 0x5
    field public static final deprecated int ACTION_POINTER_INDEX_MASK = 65280; // 0xff00
    field public static final deprecated int ACTION_POINTER_INDEX_SHIFT = 8; // 0x8
    field public static final deprecated int ACTION_POINTER_UP = 6; // 0x6
    field public static final deprecated int ACTION_SCROLL = 8; // 0x8
    field public static final deprecated int AXIS_BRAKE = 23; // 0x17
    field public static final deprecated int AXIS_DISTANCE = 24; // 0x18
    field public static final deprecated int AXIS_GAS = 22; // 0x16
    field public static final deprecated int AXIS_GENERIC_1 = 32; // 0x20
    field public static final deprecated int AXIS_GENERIC_10 = 41; // 0x29
    field public static final deprecated int AXIS_GENERIC_11 = 42; // 0x2a
    field public static final deprecated int AXIS_GENERIC_12 = 43; // 0x2b
    field public static final deprecated int AXIS_GENERIC_13 = 44; // 0x2c
    field public static final deprecated int AXIS_GENERIC_14 = 45; // 0x2d
    field public static final deprecated int AXIS_GENERIC_15 = 46; // 0x2e
    field public static final deprecated int AXIS_GENERIC_16 = 47; // 0x2f
    field public static final deprecated int AXIS_GENERIC_2 = 33; // 0x21
    field public static final deprecated int AXIS_GENERIC_3 = 34; // 0x22
    field public static final deprecated int AXIS_GENERIC_4 = 35; // 0x23
    field public static final deprecated int AXIS_GENERIC_5 = 36; // 0x24
    field public static final deprecated int AXIS_GENERIC_6 = 37; // 0x25
    field public static final deprecated int AXIS_GENERIC_7 = 38; // 0x26
    field public static final deprecated int AXIS_GENERIC_8 = 39; // 0x27
    field public static final deprecated int AXIS_GENERIC_9 = 40; // 0x28
    field public static final deprecated int AXIS_HAT_X = 15; // 0xf
    field public static final deprecated int AXIS_HAT_Y = 16; // 0x10
    field public static final deprecated int AXIS_HSCROLL = 10; // 0xa
    field public static final deprecated int AXIS_LTRIGGER = 17; // 0x11
    field public static final deprecated int AXIS_ORIENTATION = 8; // 0x8
    field public static final deprecated int AXIS_PRESSURE = 2; // 0x2
    field public static final int AXIS_RELATIVE_X = 27; // 0x1b
    field public static final int AXIS_RELATIVE_Y = 28; // 0x1c
    field public static final deprecated int AXIS_RTRIGGER = 18; // 0x12
    field public static final deprecated int AXIS_RUDDER = 20; // 0x14
    field public static final deprecated int AXIS_RX = 12; // 0xc
    field public static final deprecated int AXIS_RY = 13; // 0xd
    field public static final deprecated int AXIS_RZ = 14; // 0xe
    field public static final int AXIS_SCROLL = 26; // 0x1a
    field public static final deprecated int AXIS_SIZE = 3; // 0x3
    field public static final deprecated int AXIS_THROTTLE = 19; // 0x13
    field public static final deprecated int AXIS_TILT = 25; // 0x19
    field public static final deprecated int AXIS_TOOL_MAJOR = 6; // 0x6
    field public static final deprecated int AXIS_TOOL_MINOR = 7; // 0x7
    field public static final deprecated int AXIS_TOUCH_MAJOR = 4; // 0x4
    field public static final deprecated int AXIS_TOUCH_MINOR = 5; // 0x5
    field public static final deprecated int AXIS_VSCROLL = 9; // 0x9
    field public static final deprecated int AXIS_WHEEL = 21; // 0x15
    field public static final deprecated int AXIS_X = 0; // 0x0
    field public static final deprecated int AXIS_Y = 1; // 0x1
    field public static final deprecated int AXIS_Z = 11; // 0xb
    field public static final deprecated int BUTTON_PRIMARY = 1; // 0x1
  }

  public abstract interface NestedScrollingChild {
    method public abstract boolean dispatchNestedFling(float, float, boolean);
    method public abstract boolean dispatchNestedPreFling(float, float);
    method public abstract boolean dispatchNestedPreScroll(int, int, int[], int[]);
    method public abstract boolean dispatchNestedScroll(int, int, int, int, int[]);
    method public abstract boolean hasNestedScrollingParent();
    method public abstract boolean isNestedScrollingEnabled();
    method public abstract void setNestedScrollingEnabled(boolean);
    method public abstract boolean startNestedScroll(int);
    method public abstract void stopNestedScroll();
  }

  public abstract interface NestedScrollingChild2 implements android.support.v4.view.NestedScrollingChild {
    method public abstract boolean dispatchNestedPreScroll(int, int, int[], int[], int);
    method public abstract boolean dispatchNestedScroll(int, int, int, int, int[], int);
    method public abstract boolean hasNestedScrollingParent(int);
    method public abstract boolean startNestedScroll(int, int);
    method public abstract void stopNestedScroll(int);
  }

  public abstract interface NestedScrollingParent {
    method public abstract int getNestedScrollAxes();
    method public abstract boolean onNestedFling(android.view.View, float, float, boolean);
    method public abstract boolean onNestedPreFling(android.view.View, float, float);
    method public abstract void onNestedPreScroll(android.view.View, int, int, int[]);
    method public abstract void onNestedScroll(android.view.View, int, int, int, int);
    method public abstract void onNestedScrollAccepted(android.view.View, android.view.View, int);
    method public abstract boolean onStartNestedScroll(android.view.View, android.view.View, int);
    method public abstract void onStopNestedScroll(android.view.View);
  }

  public abstract interface NestedScrollingParent2 implements android.support.v4.view.NestedScrollingParent {
    method public abstract void onNestedPreScroll(android.view.View, int, int, int[], int);
    method public abstract void onNestedScroll(android.view.View, int, int, int, int, int);
    method public abstract void onNestedScrollAccepted(android.view.View, android.view.View, int, int);
    method public abstract boolean onStartNestedScroll(android.view.View, android.view.View, int, int);
    method public abstract void onStopNestedScroll(android.view.View, int);
  }

  public abstract interface OnApplyWindowInsetsListener {
    method public abstract android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat);
  }

  public final class PointerIconCompat {
    method public static android.support.v4.view.PointerIconCompat create(android.graphics.Bitmap, float, float);
    method public static android.support.v4.view.PointerIconCompat getSystemIcon(android.content.Context, int);
    method public static android.support.v4.view.PointerIconCompat load(android.content.res.Resources, int);
    field public static final int TYPE_ALIAS = 1010; // 0x3f2
    field public static final int TYPE_ALL_SCROLL = 1013; // 0x3f5
    field public static final int TYPE_ARROW = 1000; // 0x3e8
    field public static final int TYPE_CELL = 1006; // 0x3ee
    field public static final int TYPE_CONTEXT_MENU = 1001; // 0x3e9
    field public static final int TYPE_COPY = 1011; // 0x3f3
    field public static final int TYPE_CROSSHAIR = 1007; // 0x3ef
    field public static final int TYPE_DEFAULT = 1000; // 0x3e8
    field public static final int TYPE_GRAB = 1020; // 0x3fc
    field public static final int TYPE_GRABBING = 1021; // 0x3fd
    field public static final int TYPE_HAND = 1002; // 0x3ea
    field public static final int TYPE_HELP = 1003; // 0x3eb
    field public static final int TYPE_HORIZONTAL_DOUBLE_ARROW = 1014; // 0x3f6
    field public static final int TYPE_NO_DROP = 1012; // 0x3f4
    field public static final int TYPE_NULL = 0; // 0x0
    field public static final int TYPE_TEXT = 1008; // 0x3f0
    field public static final int TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW = 1017; // 0x3f9
    field public static final int TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW = 1016; // 0x3f8
    field public static final int TYPE_VERTICAL_DOUBLE_ARROW = 1015; // 0x3f7
    field public static final int TYPE_VERTICAL_TEXT = 1009; // 0x3f1
    field public static final int TYPE_WAIT = 1004; // 0x3ec
    field public static final int TYPE_ZOOM_IN = 1018; // 0x3fa
    field public static final int TYPE_ZOOM_OUT = 1019; // 0x3fb
  }

  public final class ScaleGestureDetectorCompat {
    method public static deprecated boolean isQuickScaleEnabled(java.lang.Object);
    method public static boolean isQuickScaleEnabled(android.view.ScaleGestureDetector);
    method public static deprecated void setQuickScaleEnabled(java.lang.Object, boolean);
    method public static void setQuickScaleEnabled(android.view.ScaleGestureDetector, boolean);
  }

  public abstract interface ScrollingView {
    method public abstract int computeHorizontalScrollExtent();
    method public abstract int computeHorizontalScrollOffset();
    method public abstract int computeHorizontalScrollRange();
    method public abstract int computeVerticalScrollExtent();
    method public abstract int computeVerticalScrollOffset();
    method public abstract int computeVerticalScrollRange();
  }

  public abstract interface TintableBackgroundView {
    method public abstract android.content.res.ColorStateList getSupportBackgroundTintList();
    method public abstract android.graphics.PorterDuff.Mode getSupportBackgroundTintMode();
    method public abstract void setSupportBackgroundTintList(android.content.res.ColorStateList);
    method public abstract void setSupportBackgroundTintMode(android.graphics.PorterDuff.Mode);
  }

  public final deprecated class VelocityTrackerCompat {
    method public static deprecated float getXVelocity(android.view.VelocityTracker, int);
    method public static deprecated float getYVelocity(android.view.VelocityTracker, int);
  }

  public class ViewCompat {
    ctor protected ViewCompat();
    method public static void addKeyboardNavigationClusters(android.view.View, java.util.Collection<android.view.View>, int);
    method public static android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View);
    method public static deprecated boolean canScrollHorizontally(android.view.View, int);
    method public static deprecated boolean canScrollVertically(android.view.View, int);
    method public static void cancelDragAndDrop(android.view.View);
    method public static deprecated int combineMeasuredStates(int, int);
    method public static android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat);
    method public static void dispatchFinishTemporaryDetach(android.view.View);
    method public static boolean dispatchNestedFling(android.view.View, float, float, boolean);
    method public static boolean dispatchNestedPreFling(android.view.View, float, float);
    method public static boolean dispatchNestedPreScroll(android.view.View, int, int, int[], int[]);
    method public static boolean dispatchNestedPreScroll(android.view.View, int, int, int[], int[], int);
    method public static boolean dispatchNestedScroll(android.view.View, int, int, int, int, int[]);
    method public static boolean dispatchNestedScroll(android.view.View, int, int, int, int, int[], int);
    method public static void dispatchStartTemporaryDetach(android.view.View);
    method public static int getAccessibilityLiveRegion(android.view.View);
    method public static android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View);
    method public static deprecated float getAlpha(android.view.View);
    method public static android.content.res.ColorStateList getBackgroundTintList(android.view.View);
    method public static android.graphics.PorterDuff.Mode getBackgroundTintMode(android.view.View);
    method public static android.graphics.Rect getClipBounds(android.view.View);
    method public static android.view.Display getDisplay(android.view.View);
    method public static float getElevation(android.view.View);
    method public static boolean getFitsSystemWindows(android.view.View);
    method public static int getImportantForAccessibility(android.view.View);
    method public static int getLabelFor(android.view.View);
    method public static deprecated int getLayerType(android.view.View);
    method public static int getLayoutDirection(android.view.View);
    method public static deprecated android.graphics.Matrix getMatrix(android.view.View);
    method public static deprecated int getMeasuredHeightAndState(android.view.View);
    method public static deprecated int getMeasuredState(android.view.View);
    method public static deprecated int getMeasuredWidthAndState(android.view.View);
    method public static int getMinimumHeight(android.view.View);
    method public static int getMinimumWidth(android.view.View);
    method public static int getNextClusterForwardId(android.view.View);
    method public static deprecated int getOverScrollMode(android.view.View);
    method public static int getPaddingEnd(android.view.View);
    method public static int getPaddingStart(android.view.View);
    method public static android.view.ViewParent getParentForAccessibility(android.view.View);
    method public static deprecated float getPivotX(android.view.View);
    method public static deprecated float getPivotY(android.view.View);
    method public static deprecated float getRotation(android.view.View);
    method public static deprecated float getRotationX(android.view.View);
    method public static deprecated float getRotationY(android.view.View);
    method public static deprecated float getScaleX(android.view.View);
    method public static deprecated float getScaleY(android.view.View);
    method public static int getScrollIndicators(android.view.View);
    method public static java.lang.String getTransitionName(android.view.View);
    method public static deprecated float getTranslationX(android.view.View);
    method public static deprecated float getTranslationY(android.view.View);
    method public static float getTranslationZ(android.view.View);
    method public static int getWindowSystemUiVisibility(android.view.View);
    method public static deprecated float getX(android.view.View);
    method public static deprecated float getY(android.view.View);
    method public static float getZ(android.view.View);
    method public static boolean hasAccessibilityDelegate(android.view.View);
    method public static boolean hasExplicitFocusable(android.view.View);
    method public static boolean hasNestedScrollingParent(android.view.View);
    method public static boolean hasNestedScrollingParent(android.view.View, int);
    method public static boolean hasOnClickListeners(android.view.View);
    method public static boolean hasOverlappingRendering(android.view.View);
    method public static boolean hasTransientState(android.view.View);
    method public static boolean isAttachedToWindow(android.view.View);
    method public static boolean isFocusedByDefault(android.view.View);
    method public static boolean isImportantForAccessibility(android.view.View);
    method public static boolean isInLayout(android.view.View);
    method public static boolean isKeyboardNavigationCluster(android.view.View);
    method public static boolean isLaidOut(android.view.View);
    method public static boolean isLayoutDirectionResolved(android.view.View);
    method public static boolean isNestedScrollingEnabled(android.view.View);
    method public static deprecated boolean isOpaque(android.view.View);
    method public static boolean isPaddingRelative(android.view.View);
    method public static deprecated void jumpDrawablesToCurrentState(android.view.View);
    method public static android.view.View keyboardNavigationClusterSearch(android.view.View, android.view.View, int);
    method public static void offsetLeftAndRight(android.view.View, int);
    method public static void offsetTopAndBottom(android.view.View, int);
    method public static android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View, android.support.v4.view.WindowInsetsCompat);
    method public static deprecated void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent);
    method public static void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat);
    method public static deprecated void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent);
    method public static boolean performAccessibilityAction(android.view.View, int, android.os.Bundle);
    method public static void postInvalidateOnAnimation(android.view.View);
    method public static void postInvalidateOnAnimation(android.view.View, int, int, int, int);
    method public static void postOnAnimation(android.view.View, java.lang.Runnable);
    method public static void postOnAnimationDelayed(android.view.View, java.lang.Runnable, long);
    method public static void requestApplyInsets(android.view.View);
    method public static deprecated int resolveSizeAndState(int, int, int);
    method public static boolean restoreDefaultFocus(android.view.View);
    method public static void setAccessibilityDelegate(android.view.View, android.support.v4.view.AccessibilityDelegateCompat);
    method public static void setAccessibilityLiveRegion(android.view.View, int);
    method public static deprecated void setActivated(android.view.View, boolean);
    method public static deprecated void setAlpha(android.view.View, float);
    method public static void setBackground(android.view.View, android.graphics.drawable.Drawable);
    method public static void setBackgroundTintList(android.view.View, android.content.res.ColorStateList);
    method public static void setBackgroundTintMode(android.view.View, android.graphics.PorterDuff.Mode);
    method public static void setChildrenDrawingOrderEnabled(android.view.ViewGroup, boolean);
    method public static void setClipBounds(android.view.View, android.graphics.Rect);
    method public static void setElevation(android.view.View, float);
    method public static deprecated void setFitsSystemWindows(android.view.View, boolean);
    method public static void setFocusedByDefault(android.view.View, boolean);
    method public static void setHasTransientState(android.view.View, boolean);
    method public static void setImportantForAccessibility(android.view.View, int);
    method public static void setKeyboardNavigationCluster(android.view.View, boolean);
    method public static void setLabelFor(android.view.View, int);
    method public static void setLayerPaint(android.view.View, android.graphics.Paint);
    method public static deprecated void setLayerType(android.view.View, int, android.graphics.Paint);
    method public static void setLayoutDirection(android.view.View, int);
    method public static void setNestedScrollingEnabled(android.view.View, boolean);
    method public static void setNextClusterForwardId(android.view.View, int);
    method public static void setOnApplyWindowInsetsListener(android.view.View, android.support.v4.view.OnApplyWindowInsetsListener);
    method public static deprecated void setOverScrollMode(android.view.View, int);
    method public static void setPaddingRelative(android.view.View, int, int, int, int);
    method public static deprecated void setPivotX(android.view.View, float);
    method public static deprecated void setPivotY(android.view.View, float);
    method public static void setPointerIcon(android.view.View, android.support.v4.view.PointerIconCompat);
    method public static deprecated void setRotation(android.view.View, float);
    method public static deprecated void setRotationX(android.view.View, float);
    method public static deprecated void setRotationY(android.view.View, float);
    method public static deprecated void setSaveFromParentEnabled(android.view.View, boolean);
    method public static deprecated void setScaleX(android.view.View, float);
    method public static deprecated void setScaleY(android.view.View, float);
    method public static void setScrollIndicators(android.view.View, int);
    method public static void setScrollIndicators(android.view.View, int, int);
    method public static void setTooltipText(android.view.View, java.lang.CharSequence);
    method public static void setTransitionName(android.view.View, java.lang.String);
    method public static deprecated void setTranslationX(android.view.View, float);
    method public static deprecated void setTranslationY(android.view.View, float);
    method public static void setTranslationZ(android.view.View, float);
    method public static deprecated void setX(android.view.View, float);
    method public static deprecated void setY(android.view.View, float);
    method public static void setZ(android.view.View, float);
    method public static boolean startDragAndDrop(android.view.View, android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int);
    method public static boolean startNestedScroll(android.view.View, int);
    method public static boolean startNestedScroll(android.view.View, int, int);
    method public static void stopNestedScroll(android.view.View);
    method public static void stopNestedScroll(android.view.View, int);
    method public static void updateDragShadow(android.view.View, android.view.View.DragShadowBuilder);
    field public static final int ACCESSIBILITY_LIVE_REGION_ASSERTIVE = 2; // 0x2
    field public static final int ACCESSIBILITY_LIVE_REGION_NONE = 0; // 0x0
    field public static final int ACCESSIBILITY_LIVE_REGION_POLITE = 1; // 0x1
    field public static final int IMPORTANT_FOR_ACCESSIBILITY_AUTO = 0; // 0x0
    field public static final int IMPORTANT_FOR_ACCESSIBILITY_NO = 2; // 0x2
    field public static final int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS = 4; // 0x4
    field public static final int IMPORTANT_FOR_ACCESSIBILITY_YES = 1; // 0x1
    field public static final deprecated int LAYER_TYPE_HARDWARE = 2; // 0x2
    field public static final deprecated int LAYER_TYPE_NONE = 0; // 0x0
    field public static final deprecated int LAYER_TYPE_SOFTWARE = 1; // 0x1
    field public static final int LAYOUT_DIRECTION_INHERIT = 2; // 0x2
    field public static final int LAYOUT_DIRECTION_LOCALE = 3; // 0x3
    field public static final int LAYOUT_DIRECTION_LTR = 0; // 0x0
    field public static final int LAYOUT_DIRECTION_RTL = 1; // 0x1
    field public static final deprecated int MEASURED_HEIGHT_STATE_SHIFT = 16; // 0x10
    field public static final deprecated int MEASURED_SIZE_MASK = 16777215; // 0xffffff
    field public static final deprecated int MEASURED_STATE_MASK = -16777216; // 0xff000000
    field public static final deprecated int MEASURED_STATE_TOO_SMALL = 16777216; // 0x1000000
    field public static final deprecated int OVER_SCROLL_ALWAYS = 0; // 0x0
    field public static final deprecated int OVER_SCROLL_IF_CONTENT_SCROLLS = 1; // 0x1
    field public static final deprecated int OVER_SCROLL_NEVER = 2; // 0x2
    field public static final int SCROLL_AXIS_HORIZONTAL = 1; // 0x1
    field public static final int SCROLL_AXIS_NONE = 0; // 0x0
    field public static final int SCROLL_AXIS_VERTICAL = 2; // 0x2
    field public static final int SCROLL_INDICATOR_BOTTOM = 2; // 0x2
    field public static final int SCROLL_INDICATOR_END = 32; // 0x20
    field public static final int SCROLL_INDICATOR_LEFT = 4; // 0x4
    field public static final int SCROLL_INDICATOR_RIGHT = 8; // 0x8
    field public static final int SCROLL_INDICATOR_START = 16; // 0x10
    field public static final int SCROLL_INDICATOR_TOP = 1; // 0x1
    field public static final int TYPE_NON_TOUCH = 1; // 0x1
    field public static final int TYPE_TOUCH = 0; // 0x0
  }

  public final deprecated class ViewConfigurationCompat {
    method public static float getScaledHorizontalScrollFactor(android.view.ViewConfiguration, android.content.Context);
    method public static deprecated int getScaledPagingTouchSlop(android.view.ViewConfiguration);
    method public static float getScaledVerticalScrollFactor(android.view.ViewConfiguration, android.content.Context);
    method public static deprecated boolean hasPermanentMenuKey(android.view.ViewConfiguration);
  }

  public final class ViewGroupCompat {
    method public static int getLayoutMode(android.view.ViewGroup);
    method public static int getNestedScrollAxes(android.view.ViewGroup);
    method public static boolean isTransitionGroup(android.view.ViewGroup);
    method public static deprecated boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent);
    method public static void setLayoutMode(android.view.ViewGroup, int);
    method public static deprecated void setMotionEventSplittingEnabled(android.view.ViewGroup, boolean);
    method public static void setTransitionGroup(android.view.ViewGroup, boolean);
    field public static final int LAYOUT_MODE_CLIP_BOUNDS = 0; // 0x0
    field public static final int LAYOUT_MODE_OPTICAL_BOUNDS = 1; // 0x1
  }

  public final class ViewParentCompat {
    method public static void notifySubtreeAccessibilityStateChanged(android.view.ViewParent, android.view.View, android.view.View, int);
    method public static boolean onNestedFling(android.view.ViewParent, android.view.View, float, float, boolean);
    method public static boolean onNestedPreFling(android.view.ViewParent, android.view.View, float, float);
    method public static void onNestedPreScroll(android.view.ViewParent, android.view.View, int, int, int[]);
    method public static void onNestedPreScroll(android.view.ViewParent, android.view.View, int, int, int[], int);
    method public static void onNestedScroll(android.view.ViewParent, android.view.View, int, int, int, int);
    method public static void onNestedScroll(android.view.ViewParent, android.view.View, int, int, int, int, int);
    method public static void onNestedScrollAccepted(android.view.ViewParent, android.view.View, android.view.View, int);
    method public static void onNestedScrollAccepted(android.view.ViewParent, android.view.View, android.view.View, int, int);
    method public static boolean onStartNestedScroll(android.view.ViewParent, android.view.View, android.view.View, int);
    method public static boolean onStartNestedScroll(android.view.ViewParent, android.view.View, android.view.View, int, int);
    method public static void onStopNestedScroll(android.view.ViewParent, android.view.View);
    method public static void onStopNestedScroll(android.view.ViewParent, android.view.View, int);
    method public static deprecated boolean requestSendAccessibilityEvent(android.view.ViewParent, android.view.View, android.view.accessibility.AccessibilityEvent);
  }

  public final class ViewPropertyAnimatorCompat {
    method public android.support.v4.view.ViewPropertyAnimatorCompat alpha(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float);
    method public void cancel();
    method public long getDuration();
    method public android.view.animation.Interpolator getInterpolator();
    method public long getStartDelay();
    method public android.support.v4.view.ViewPropertyAnimatorCompat rotation(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long);
    method public android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator);
    method public android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener);
    method public android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long);
    method public android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener);
    method public void start();
    method public android.support.v4.view.ViewPropertyAnimatorCompat translationX(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat translationY(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat translationZ(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat translationZBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable);
    method public android.support.v4.view.ViewPropertyAnimatorCompat withLayer();
    method public android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable);
    method public android.support.v4.view.ViewPropertyAnimatorCompat x(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat xBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat y(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat yBy(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat z(float);
    method public android.support.v4.view.ViewPropertyAnimatorCompat zBy(float);
  }

  public abstract interface ViewPropertyAnimatorListener {
    method public abstract void onAnimationCancel(android.view.View);
    method public abstract void onAnimationEnd(android.view.View);
    method public abstract void onAnimationStart(android.view.View);
  }

  public class ViewPropertyAnimatorListenerAdapter implements android.support.v4.view.ViewPropertyAnimatorListener {
    ctor public ViewPropertyAnimatorListenerAdapter();
    method public void onAnimationCancel(android.view.View);
    method public void onAnimationEnd(android.view.View);
    method public void onAnimationStart(android.view.View);
  }

  public abstract interface ViewPropertyAnimatorUpdateListener {
    method public abstract void onAnimationUpdate(android.view.View);
  }

  public final class WindowCompat {
    field public static final int FEATURE_ACTION_BAR = 8; // 0x8
    field public static final int FEATURE_ACTION_BAR_OVERLAY = 9; // 0x9
    field public static final int FEATURE_ACTION_MODE_OVERLAY = 10; // 0xa
  }

  public class WindowInsetsCompat {
    ctor public WindowInsetsCompat(android.support.v4.view.WindowInsetsCompat);
    method public android.support.v4.view.WindowInsetsCompat consumeStableInsets();
    method public android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets();
    method public int getStableInsetBottom();
    method public int getStableInsetLeft();
    method public int getStableInsetRight();
    method public int getStableInsetTop();
    method public int getSystemWindowInsetBottom();
    method public int getSystemWindowInsetLeft();
    method public int getSystemWindowInsetRight();
    method public int getSystemWindowInsetTop();
    method public boolean hasInsets();
    method public boolean hasStableInsets();
    method public boolean hasSystemWindowInsets();
    method public boolean isConsumed();
    method public boolean isRound();
    method public android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int, int, int, int);
    method public android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect);
  }

}

package android.support.v4.view.accessibility {

  public final class AccessibilityEventCompat {
    method public static deprecated void appendRecord(android.view.accessibility.AccessibilityEvent, android.support.v4.view.accessibility.AccessibilityRecordCompat);
    method public static deprecated android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent);
    method public int getAction(android.view.accessibility.AccessibilityEvent);
    method public static int getContentChangeTypes(android.view.accessibility.AccessibilityEvent);
    method public int getMovementGranularity(android.view.accessibility.AccessibilityEvent);
    method public static deprecated android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent, int);
    method public static deprecated int getRecordCount(android.view.accessibility.AccessibilityEvent);
    method public void setAction(android.view.accessibility.AccessibilityEvent, int);
    method public static void setContentChangeTypes(android.view.accessibility.AccessibilityEvent, int);
    method public void setMovementGranularity(android.view.accessibility.AccessibilityEvent, int);
    field public static final int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION = 4; // 0x4
    field public static final int CONTENT_CHANGE_TYPE_SUBTREE = 1; // 0x1
    field public static final int CONTENT_CHANGE_TYPE_TEXT = 2; // 0x2
    field public static final int CONTENT_CHANGE_TYPE_UNDEFINED = 0; // 0x0
    field public static final int TYPES_ALL_MASK = -1; // 0xffffffff
    field public static final int TYPE_ANNOUNCEMENT = 16384; // 0x4000
    field public static final int TYPE_ASSIST_READING_CONTEXT = 16777216; // 0x1000000
    field public static final int TYPE_GESTURE_DETECTION_END = 524288; // 0x80000
    field public static final int TYPE_GESTURE_DETECTION_START = 262144; // 0x40000
    field public static final deprecated int TYPE_TOUCH_EXPLORATION_GESTURE_END = 1024; // 0x400
    field public static final deprecated int TYPE_TOUCH_EXPLORATION_GESTURE_START = 512; // 0x200
    field public static final int TYPE_TOUCH_INTERACTION_END = 2097152; // 0x200000
    field public static final int TYPE_TOUCH_INTERACTION_START = 1048576; // 0x100000
    field public static final int TYPE_VIEW_ACCESSIBILITY_FOCUSED = 32768; // 0x8000
    field public static final int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED = 65536; // 0x10000
    field public static final int TYPE_VIEW_CONTEXT_CLICKED = 8388608; // 0x800000
    field public static final deprecated int TYPE_VIEW_HOVER_ENTER = 128; // 0x80
    field public static final deprecated int TYPE_VIEW_HOVER_EXIT = 256; // 0x100
    field public static final deprecated int TYPE_VIEW_SCROLLED = 4096; // 0x1000
    field public static final deprecated int TYPE_VIEW_TEXT_SELECTION_CHANGED = 8192; // 0x2000
    field public static final int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY = 131072; // 0x20000
    field public static final int TYPE_WINDOWS_CHANGED = 4194304; // 0x400000
    field public static final deprecated int TYPE_WINDOW_CONTENT_CHANGED = 2048; // 0x800
  }

  public final class AccessibilityManagerCompat {
    method public static deprecated boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager, android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener);
    method public static boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager, android.support.v4.view.accessibility.AccessibilityManagerCompat.TouchExplorationStateChangeListener);
    method public static deprecated java.util.List<android.accessibilityservice.AccessibilityServiceInfo> getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager, int);
    method public static deprecated java.util.List<android.accessibilityservice.AccessibilityServiceInfo> getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager);
    method public static deprecated boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager);
    method public static deprecated boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager, android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener);
    method public static boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager, android.support.v4.view.accessibility.AccessibilityManagerCompat.TouchExplorationStateChangeListener);
  }

  public static abstract deprecated interface AccessibilityManagerCompat.AccessibilityStateChangeListener {
    method public abstract deprecated void onAccessibilityStateChanged(boolean);
  }

  public static abstract deprecated class AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat implements android.support.v4.view.accessibility.AccessibilityManagerCompat.AccessibilityStateChangeListener {
    ctor public AccessibilityManagerCompat.AccessibilityStateChangeListenerCompat();
  }

  public static abstract interface AccessibilityManagerCompat.TouchExplorationStateChangeListener {
    method public abstract void onTouchExplorationStateChanged(boolean);
  }

  public class AccessibilityNodeInfoCompat {
    ctor public deprecated AccessibilityNodeInfoCompat(java.lang.Object);
    method public void addAction(int);
    method public void addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat);
    method public void addChild(android.view.View);
    method public void addChild(android.view.View, int);
    method public boolean canOpenPopup();
    method public java.util.List<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(java.lang.String);
    method public java.util.List<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByViewId(java.lang.String);
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int);
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int);
    method public java.util.List<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat> getActionList();
    method public int getActions();
    method public void getBoundsInParent(android.graphics.Rect);
    method public void getBoundsInScreen(android.graphics.Rect);
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int);
    method public int getChildCount();
    method public java.lang.CharSequence getClassName();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat getCollectionInfo();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat getCollectionItemInfo();
    method public java.lang.CharSequence getContentDescription();
    method public int getDrawingOrder();
    method public java.lang.CharSequence getError();
    method public android.os.Bundle getExtras();
    method public deprecated java.lang.Object getInfo();
    method public int getInputType();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabelFor();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy();
    method public int getLiveRegion();
    method public int getMaxTextLength();
    method public int getMovementGranularities();
    method public java.lang.CharSequence getPackageName();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat getRangeInfo();
    method public java.lang.CharSequence getRoleDescription();
    method public java.lang.CharSequence getText();
    method public int getTextSelectionEnd();
    method public int getTextSelectionStart();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore();
    method public java.lang.String getViewIdResourceName();
    method public android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getWindow();
    method public int getWindowId();
    method public boolean isAccessibilityFocused();
    method public boolean isCheckable();
    method public boolean isChecked();
    method public boolean isClickable();
    method public boolean isContentInvalid();
    method public boolean isContextClickable();
    method public boolean isDismissable();
    method public boolean isEditable();
    method public boolean isEnabled();
    method public boolean isFocusable();
    method public boolean isFocused();
    method public boolean isImportantForAccessibility();
    method public boolean isLongClickable();
    method public boolean isMultiLine();
    method public boolean isPassword();
    method public boolean isScrollable();
    method public boolean isSelected();
    method public boolean isVisibleToUser();
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View);
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View, int);
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain();
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat);
    method public boolean performAction(int);
    method public boolean performAction(int, android.os.Bundle);
    method public void recycle();
    method public boolean refresh();
    method public boolean removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat);
    method public boolean removeChild(android.view.View);
    method public boolean removeChild(android.view.View, int);
    method public void setAccessibilityFocused(boolean);
    method public void setBoundsInParent(android.graphics.Rect);
    method public void setBoundsInScreen(android.graphics.Rect);
    method public void setCanOpenPopup(boolean);
    method public void setCheckable(boolean);
    method public void setChecked(boolean);
    method public void setClassName(java.lang.CharSequence);
    method public void setClickable(boolean);
    method public void setCollectionInfo(java.lang.Object);
    method public void setCollectionItemInfo(java.lang.Object);
    method public void setContentDescription(java.lang.CharSequence);
    method public void setContentInvalid(boolean);
    method public void setContextClickable(boolean);
    method public void setDismissable(boolean);
    method public void setDrawingOrder(int);
    method public void setEditable(boolean);
    method public void setEnabled(boolean);
    method public void setError(java.lang.CharSequence);
    method public void setFocusable(boolean);
    method public void setFocused(boolean);
    method public void setImportantForAccessibility(boolean);
    method public void setInputType(int);
    method public void setLabelFor(android.view.View);
    method public void setLabelFor(android.view.View, int);
    method public void setLabeledBy(android.view.View);
    method public void setLabeledBy(android.view.View, int);
    method public void setLiveRegion(int);
    method public void setLongClickable(boolean);
    method public void setMaxTextLength(int);
    method public void setMovementGranularities(int);
    method public void setMultiLine(boolean);
    method public void setPackageName(java.lang.CharSequence);
    method public void setParent(android.view.View);
    method public void setParent(android.view.View, int);
    method public void setPassword(boolean);
    method public void setRangeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat);
    method public void setRoleDescription(java.lang.CharSequence);
    method public void setScrollable(boolean);
    method public void setSelected(boolean);
    method public void setSource(android.view.View);
    method public void setSource(android.view.View, int);
    method public void setText(java.lang.CharSequence);
    method public void setTextSelection(int, int);
    method public void setTraversalAfter(android.view.View);
    method public void setTraversalAfter(android.view.View, int);
    method public void setTraversalBefore(android.view.View);
    method public void setTraversalBefore(android.view.View, int);
    method public void setViewIdResourceName(java.lang.String);
    method public void setVisibleToUser(boolean);
    method public android.view.accessibility.AccessibilityNodeInfo unwrap();
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo);
    field public static final int ACTION_ACCESSIBILITY_FOCUS = 64; // 0x40
    field public static final java.lang.String ACTION_ARGUMENT_COLUMN_INT = "android.view.accessibility.action.ARGUMENT_COLUMN_INT";
    field public static final java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN = "ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN";
    field public static final java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING = "ACTION_ARGUMENT_HTML_ELEMENT_STRING";
    field public static final java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT = "ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT";
    field public static final java.lang.String ACTION_ARGUMENT_PROGRESS_VALUE = "android.view.accessibility.action.ARGUMENT_PROGRESS_VALUE";
    field public static final java.lang.String ACTION_ARGUMENT_ROW_INT = "android.view.accessibility.action.ARGUMENT_ROW_INT";
    field public static final java.lang.String ACTION_ARGUMENT_SELECTION_END_INT = "ACTION_ARGUMENT_SELECTION_END_INT";
    field public static final java.lang.String ACTION_ARGUMENT_SELECTION_START_INT = "ACTION_ARGUMENT_SELECTION_START_INT";
    field public static final java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE = "ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE";
    field public static final int ACTION_CLEAR_ACCESSIBILITY_FOCUS = 128; // 0x80
    field public static final int ACTION_CLEAR_FOCUS = 2; // 0x2
    field public static final int ACTION_CLEAR_SELECTION = 8; // 0x8
    field public static final int ACTION_CLICK = 16; // 0x10
    field public static final int ACTION_COLLAPSE = 524288; // 0x80000
    field public static final int ACTION_COPY = 16384; // 0x4000
    field public static final int ACTION_CUT = 65536; // 0x10000
    field public static final int ACTION_DISMISS = 1048576; // 0x100000
    field public static final int ACTION_EXPAND = 262144; // 0x40000
    field public static final int ACTION_FOCUS = 1; // 0x1
    field public static final int ACTION_LONG_CLICK = 32; // 0x20
    field public static final int ACTION_NEXT_AT_MOVEMENT_GRANULARITY = 256; // 0x100
    field public static final int ACTION_NEXT_HTML_ELEMENT = 1024; // 0x400
    field public static final int ACTION_PASTE = 32768; // 0x8000
    field public static final int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY = 512; // 0x200
    field public static final int ACTION_PREVIOUS_HTML_ELEMENT = 2048; // 0x800
    field public static final int ACTION_SCROLL_BACKWARD = 8192; // 0x2000
    field public static final int ACTION_SCROLL_FORWARD = 4096; // 0x1000
    field public static final int ACTION_SELECT = 4; // 0x4
    field public static final int ACTION_SET_SELECTION = 131072; // 0x20000
    field public static final int ACTION_SET_TEXT = 2097152; // 0x200000
    field public static final int FOCUS_ACCESSIBILITY = 2; // 0x2
    field public static final int FOCUS_INPUT = 1; // 0x1
    field public static final int MOVEMENT_GRANULARITY_CHARACTER = 1; // 0x1
    field public static final int MOVEMENT_GRANULARITY_LINE = 4; // 0x4
    field public static final int MOVEMENT_GRANULARITY_PAGE = 16; // 0x10
    field public static final int MOVEMENT_GRANULARITY_PARAGRAPH = 8; // 0x8
    field public static final int MOVEMENT_GRANULARITY_WORD = 2; // 0x2
  }

  public static class AccessibilityNodeInfoCompat.AccessibilityActionCompat {
    ctor public AccessibilityNodeInfoCompat.AccessibilityActionCompat(int, java.lang.CharSequence);
    method public int getId();
    method public java.lang.CharSequence getLabel();
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_CLEAR_FOCUS;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_CLEAR_SELECTION;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_CLICK;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_COLLAPSE;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_CONTEXT_CLICK;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_COPY;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_CUT;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_DISMISS;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_EXPAND;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_FOCUS;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_LONG_CLICK;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_PASTE;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SCROLL_BACKWARD;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SCROLL_DOWN;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SCROLL_FORWARD;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SCROLL_LEFT;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SCROLL_RIGHT;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SCROLL_TO_POSITION;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SCROLL_UP;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SELECT;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SET_PROGRESS;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SET_SELECTION;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SET_TEXT;
    field public static final android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat ACTION_SHOW_ON_SCREEN;
  }

  public static class AccessibilityNodeInfoCompat.CollectionInfoCompat {
    method public int getColumnCount();
    method public int getRowCount();
    method public int getSelectionMode();
    method public boolean isHierarchical();
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat obtain(int, int, boolean, int);
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat obtain(int, int, boolean);
    field public static final int SELECTION_MODE_MULTIPLE = 2; // 0x2
    field public static final int SELECTION_MODE_NONE = 0; // 0x0
    field public static final int SELECTION_MODE_SINGLE = 1; // 0x1
  }

  public static class AccessibilityNodeInfoCompat.CollectionItemInfoCompat {
    method public int getColumnIndex();
    method public int getColumnSpan();
    method public int getRowIndex();
    method public int getRowSpan();
    method public boolean isHeading();
    method public boolean isSelected();
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat obtain(int, int, int, int, boolean, boolean);
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat obtain(int, int, int, int, boolean);
  }

  public static class AccessibilityNodeInfoCompat.RangeInfoCompat {
    method public float getCurrent();
    method public float getMax();
    method public float getMin();
    method public int getType();
    method public static android.support.v4.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat obtain(int, float, float, float);
    field public static final int RANGE_TYPE_FLOAT = 1; // 0x1
    field public static final int RANGE_TYPE_INT = 0; // 0x0
    field public static final int RANGE_TYPE_PERCENT = 2; // 0x2
  }

  public class AccessibilityNodeProviderCompat {
    ctor public AccessibilityNodeProviderCompat();
    ctor public AccessibilityNodeProviderCompat(java.lang.Object);
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int);
    method public java.util.List<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(java.lang.String, int);
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int);
    method public java.lang.Object getProvider();
    method public boolean performAction(int, int, android.os.Bundle);
    field public static final int HOST_VIEW_ID = -1; // 0xffffffff
  }

  public class AccessibilityRecordCompat {
    ctor public deprecated AccessibilityRecordCompat(java.lang.Object);
    method public deprecated boolean equals(java.lang.Object);
    method public deprecated int getAddedCount();
    method public deprecated java.lang.CharSequence getBeforeText();
    method public deprecated java.lang.CharSequence getClassName();
    method public deprecated java.lang.CharSequence getContentDescription();
    method public deprecated int getCurrentItemIndex();
    method public deprecated int getFromIndex();
    method public deprecated java.lang.Object getImpl();
    method public deprecated int getItemCount();
    method public deprecated int getMaxScrollX();
    method public static int getMaxScrollX(android.view.accessibility.AccessibilityRecord);
    method public deprecated int getMaxScrollY();
    method public static int getMaxScrollY(android.view.accessibility.AccessibilityRecord);
    method public deprecated android.os.Parcelable getParcelableData();
    method public deprecated int getRemovedCount();
    method public deprecated int getScrollX();
    method public deprecated int getScrollY();
    method public deprecated android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource();
    method public deprecated java.util.List<java.lang.CharSequence> getText();
    method public deprecated int getToIndex();
    method public deprecated int getWindowId();
    method public deprecated int hashCode();
    method public deprecated boolean isChecked();
    method public deprecated boolean isEnabled();
    method public deprecated boolean isFullScreen();
    method public deprecated boolean isPassword();
    method public deprecated boolean isScrollable();
    method public static deprecated android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat);
    method public static deprecated android.support.v4.view.accessibility.AccessibilityRecordCompat obtain();
    method public deprecated void recycle();
    method public deprecated void setAddedCount(int);
    method public deprecated void setBeforeText(java.lang.CharSequence);
    method public deprecated void setChecked(boolean);
    method public deprecated void setClassName(java.lang.CharSequence);
    method public deprecated void setContentDescription(java.lang.CharSequence);
    method public deprecated void setCurrentItemIndex(int);
    method public deprecated void setEnabled(boolean);
    method public deprecated void setFromIndex(int);
    method public deprecated void setFullScreen(boolean);
    method public deprecated void setItemCount(int);
    method public deprecated void setMaxScrollX(int);
    method public static void setMaxScrollX(android.view.accessibility.AccessibilityRecord, int);
    method public deprecated void setMaxScrollY(int);
    method public static void setMaxScrollY(android.view.accessibility.AccessibilityRecord, int);
    method public deprecated void setParcelableData(android.os.Parcelable);
    method public deprecated void setPassword(boolean);
    method public deprecated void setRemovedCount(int);
    method public deprecated void setScrollX(int);
    method public deprecated void setScrollY(int);
    method public deprecated void setScrollable(boolean);
    method public deprecated void setSource(android.view.View);
    method public deprecated void setSource(android.view.View, int);
    method public static void setSource(android.view.accessibility.AccessibilityRecord, android.view.View, int);
    method public deprecated void setToIndex(int);
  }

  public class AccessibilityWindowInfoCompat {
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getAnchor();
    method public void getBoundsInScreen(android.graphics.Rect);
    method public android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getChild(int);
    method public int getChildCount();
    method public int getId();
    method public int getLayer();
    method public android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getParent();
    method public android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getRoot();
    method public java.lang.CharSequence getTitle();
    method public int getType();
    method public boolean isAccessibilityFocused();
    method public boolean isActive();
    method public boolean isFocused();
    method public static android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain();
    method public static android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityWindowInfoCompat);
    method public void recycle();
    field public static final int TYPE_ACCESSIBILITY_OVERLAY = 4; // 0x4
    field public static final int TYPE_APPLICATION = 1; // 0x1
    field public static final int TYPE_INPUT_METHOD = 2; // 0x2
    field public static final int TYPE_SPLIT_SCREEN_DIVIDER = 5; // 0x5
    field public static final int TYPE_SYSTEM = 3; // 0x3
  }

}

package android.support.v4.view.animation {

  public final class PathInterpolatorCompat {
    method public static android.view.animation.Interpolator create(android.graphics.Path);
    method public static android.view.animation.Interpolator create(float, float);
    method public static android.view.animation.Interpolator create(float, float, float, float);
  }

}

package android.support.v4.widget {

  public final class CompoundButtonCompat {
    method public static android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton);
    method public static android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton);
    method public static android.graphics.PorterDuff.Mode getButtonTintMode(android.widget.CompoundButton);
    method public static void setButtonTintList(android.widget.CompoundButton, android.content.res.ColorStateList);
    method public static void setButtonTintMode(android.widget.CompoundButton, android.graphics.PorterDuff.Mode);
  }

  public final class EdgeEffectCompat {
    ctor public deprecated EdgeEffectCompat(android.content.Context);
    method public deprecated boolean draw(android.graphics.Canvas);
    method public deprecated void finish();
    method public deprecated boolean isFinished();
    method public deprecated boolean onAbsorb(int);
    method public deprecated boolean onPull(float);
    method public deprecated boolean onPull(float, float);
    method public static void onPull(android.widget.EdgeEffect, float, float);
    method public deprecated boolean onRelease();
    method public deprecated void setSize(int, int);
  }

  public class ImageViewCompat {
    method public static android.content.res.ColorStateList getImageTintList(android.widget.ImageView);
    method public static android.graphics.PorterDuff.Mode getImageTintMode(android.widget.ImageView);
    method public static void setImageTintList(android.widget.ImageView, android.content.res.ColorStateList);
    method public static void setImageTintMode(android.widget.ImageView, android.graphics.PorterDuff.Mode);
  }

  public final class ListPopupWindowCompat {
    method public static deprecated android.view.View.OnTouchListener createDragToOpenListener(java.lang.Object, android.view.View);
    method public static android.view.View.OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow, android.view.View);
  }

  public final class ListViewCompat {
    method public static boolean canScrollList(android.widget.ListView, int);
    method public static void scrollListBy(android.widget.ListView, int);
  }

  public final class PopupMenuCompat {
    method public static android.view.View.OnTouchListener getDragToOpenListener(java.lang.Object);
  }

  public final class PopupWindowCompat {
    method public static boolean getOverlapAnchor(android.widget.PopupWindow);
    method public static int getWindowLayoutType(android.widget.PopupWindow);
    method public static void setOverlapAnchor(android.widget.PopupWindow, boolean);
    method public static void setWindowLayoutType(android.widget.PopupWindow, int);
    method public static void showAsDropDown(android.widget.PopupWindow, android.view.View, int, int, int);
  }

  public final deprecated class ScrollerCompat {
    method public deprecated void abortAnimation();
    method public deprecated boolean computeScrollOffset();
    method public static deprecated android.support.v4.widget.ScrollerCompat create(android.content.Context);
    method public static deprecated android.support.v4.widget.ScrollerCompat create(android.content.Context, android.view.animation.Interpolator);
    method public deprecated void fling(int, int, int, int, int, int, int, int);
    method public deprecated void fling(int, int, int, int, int, int, int, int, int, int);
    method public deprecated float getCurrVelocity();
    method public deprecated int getCurrX();
    method public deprecated int getCurrY();
    method public deprecated int getFinalX();
    method public deprecated int getFinalY();
    method public deprecated boolean isFinished();
    method public deprecated boolean isOverScrolled();
    method public deprecated void notifyHorizontalEdgeReached(int, int, int);
    method public deprecated void notifyVerticalEdgeReached(int, int, int);
    method public deprecated boolean springBack(int, int, int, int, int, int);
    method public deprecated void startScroll(int, int, int, int);
    method public deprecated void startScroll(int, int, int, int, int);
  }

  public final deprecated class SearchViewCompat {
    method public static deprecated java.lang.CharSequence getQuery(android.view.View);
    method public static deprecated boolean isIconified(android.view.View);
    method public static deprecated boolean isQueryRefinementEnabled(android.view.View);
    method public static deprecated boolean isSubmitButtonEnabled(android.view.View);
    method public static deprecated android.view.View newSearchView(android.content.Context);
    method public static deprecated void setIconified(android.view.View, boolean);
    method public static deprecated void setImeOptions(android.view.View, int);
    method public static deprecated void setInputType(android.view.View, int);
    method public static deprecated void setMaxWidth(android.view.View, int);
    method public static deprecated void setOnCloseListener(android.view.View, android.support.v4.widget.SearchViewCompat.OnCloseListener);
    method public static deprecated void setOnQueryTextListener(android.view.View, android.support.v4.widget.SearchViewCompat.OnQueryTextListener);
    method public static deprecated void setQuery(android.view.View, java.lang.CharSequence, boolean);
    method public static deprecated void setQueryHint(android.view.View, java.lang.CharSequence);
    method public static deprecated void setQueryRefinementEnabled(android.view.View, boolean);
    method public static deprecated void setSearchableInfo(android.view.View, android.content.ComponentName);
    method public static deprecated void setSubmitButtonEnabled(android.view.View, boolean);
  }

  public static abstract deprecated interface SearchViewCompat.OnCloseListener {
    method public abstract boolean onClose();
  }

  public static abstract deprecated class SearchViewCompat.OnCloseListenerCompat implements android.support.v4.widget.SearchViewCompat.OnCloseListener {
    ctor public SearchViewCompat.OnCloseListenerCompat();
    method public boolean onClose();
  }

  public static abstract deprecated interface SearchViewCompat.OnQueryTextListener {
    method public abstract boolean onQueryTextChange(java.lang.String);
    method public abstract boolean onQueryTextSubmit(java.lang.String);
  }

  public static abstract deprecated class SearchViewCompat.OnQueryTextListenerCompat implements android.support.v4.widget.SearchViewCompat.OnQueryTextListener {
    ctor public SearchViewCompat.OnQueryTextListenerCompat();
    method public boolean onQueryTextChange(java.lang.String);
    method public boolean onQueryTextSubmit(java.lang.String);
  }

  public final class TextViewCompat {
    method public static int getAutoSizeMaxTextSize(android.widget.TextView);
    method public static int getAutoSizeMinTextSize(android.widget.TextView);
    method public static int getAutoSizeStepGranularity(android.widget.TextView);
    method public static int[] getAutoSizeTextAvailableSizes(android.widget.TextView);
    method public static int getAutoSizeTextType(android.widget.TextView);
    method public static android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView);
    method public static int getMaxLines(android.widget.TextView);
    method public static int getMinLines(android.widget.TextView);
    method public static void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView, int, int, int, int) throws java.lang.IllegalArgumentException;
    method public static void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView, int[], int) throws java.lang.IllegalArgumentException;
    method public static void setAutoSizeTextTypeWithDefaults(android.widget.TextView, int);
    method public static void setCompoundDrawablesRelative(android.widget.TextView, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable);
    method public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable);
    method public static void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView, int, int, int, int);
    method public static void setTextAppearance(android.widget.TextView, int);
    field public static final int AUTO_SIZE_TEXT_TYPE_NONE = 0; // 0x0
    field public static final int AUTO_SIZE_TEXT_TYPE_UNIFORM = 1; // 0x1
  }

  public abstract interface TintableCompoundButton {
    method public abstract android.content.res.ColorStateList getSupportButtonTintList();
    method public abstract android.graphics.PorterDuff.Mode getSupportButtonTintMode();
    method public abstract void setSupportButtonTintList(android.content.res.ColorStateList);
    method public abstract void setSupportButtonTintMode(android.graphics.PorterDuff.Mode);
  }

}

