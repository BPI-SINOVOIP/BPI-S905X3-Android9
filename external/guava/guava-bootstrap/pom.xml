<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.google.guava</groupId>
    <artifactId>guava-parent-jdk5</artifactId>
    <version>17.0</version>
  </parent>
  <artifactId>guava-bootstrap-jdk5</artifactId>
  <name>Guava Compilation Bootstrap Classes (JDK5 Backport)</name>
  <description>
    ExecutorService's type parameters changed between JDK5 and JDK6 in a
    way that makes it impossible for our invokeAll/invokeAny methods to
    match both at compile time. This project builds a JDK6-like copy of
    ExecutorService (but with JDK5 compiler settings to ensure that it will
    work with JRE5 at runtime). It also builds a version of
    AbstractExecutorService that is equivalent to a JDK5 version but using
    the JDK6 type parameters for the invokeAll/invokeAny methods just as with
    ExecutorService. This project's is then used in the bootstrap class path
    of Guava proper.
  </description>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>post-integration-test</phase>
            <goals><goal>jar</goal></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-docs</id>
            <phase>post-integration-test</phase>
            <goals><goal>jar</goal></goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <sourceDirectory>src</sourceDirectory>
  </build>
</project>
