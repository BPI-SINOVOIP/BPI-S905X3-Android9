# Copyright (c) 2015, Intel Corporation
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

add_library(cparameter SHARED ParameterFramework.cpp)

include(GenerateExportHeader)
generate_export_header(cparameter)

install(FILES ParameterFramework.h
              "${CMAKE_CURRENT_BINARY_DIR}/cparameter_export.h"
        DESTINATION "include/parameter/c")

target_link_libraries(cparameter PRIVATE parameter pfw_utility)

target_include_directories(cparameter
    # Fixme use an include folder
    PUBLIC .
    # Export symbol macro header
    PUBLIC "${CMAKE_CURRENT_BINARY_DIR}")

install(TARGETS cparameter LIBRARY DESTINATION lib RUNTIME DESTINATION bin)

if(BUILD_TESTING)
    # Add unit test
    add_executable(cparameterUnitTest Test.cpp)

    target_link_libraries(cparameterUnitTest PRIVATE catch cparameter tmpfile)

    add_test(NAME cparameterUnitTest
             COMMAND cparameterUnitTest)

    # Custom function defined in the top-level CMakeLists
    set_test_env(cparameterUnitTest)
endif()
