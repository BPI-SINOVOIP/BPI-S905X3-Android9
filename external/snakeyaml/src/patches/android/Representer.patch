# HG changeset patch
# Parent 44449b0d7ff73bbda13c28f2ebd4e8257c67a181
diff --git a/src/main/java/org/yaml/snakeyaml/representer/Representer.java b/src/main/java/org/yaml/snakeyaml/representer/Representer.java
--- a/src/main/java/org/yaml/snakeyaml/representer/Representer.java
+++ b/src/main/java/org/yaml/snakeyaml/representer/Representer.java
@@ -15,7 +15,6 @@
  */
 package org.yaml.snakeyaml.representer;
 
-import java.beans.IntrospectionException;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
@@ -24,7 +23,6 @@
 import java.util.Set;
 
 import org.yaml.snakeyaml.DumperOptions.FlowStyle;
-import org.yaml.snakeyaml.error.YAMLException;
 import org.yaml.snakeyaml.introspector.Property;
 import org.yaml.snakeyaml.nodes.MappingNode;
 import org.yaml.snakeyaml.nodes.Node;
@@ -45,11 +43,7 @@
 
     protected class RepresentJavaBean implements Represent {
         public Node representData(Object data) {
-            try {
-                return representJavaBean(getProperties(data.getClass()), data);
-            } catch (IntrospectionException e) {
-                throw new YAMLException(e);
-            }
+            return representJavaBean(getProperties(data.getClass()), data);
         }
     }
 
@@ -233,8 +227,7 @@
      *            - JavaBean to inspect the properties
      * @return properties to serialise
      */
-    protected Set<Property> getProperties(Class<? extends Object> type)
-            throws IntrospectionException {
+    protected Set<Property> getProperties(Class<? extends Object> type) {
         return getPropertyUtils().getProperties(type);
     }
 }
