<api>
<package name="com.google.inject"
>
<class name="AbstractModule"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Module">
</implements>
<constructor name="AbstractModule"
 type="com.google.inject.AbstractModule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addError"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="message" type="com.google.inject.spi.Message">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="arguments" type="java.lang.Object...">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="t" type="java.lang.Throwable">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.LinkedBindingBuilder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.AnnotatedBindingBuilder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.AnnotatedBindingBuilder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="clazz" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="bindConstant"
 return="com.google.inject.binder.AnnotatedConstantBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="bindInterceptor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="classMatcher" type="com.google.inject.matcher.Matcher&lt;? super java.lang.Class&lt;?&gt;&gt;">
</parameter>
<parameter name="methodMatcher" type="com.google.inject.matcher.Matcher&lt;? super java.lang.reflect.Method&gt;">
</parameter>
<parameter name="interceptors" type="org.aopalliance.intercept.MethodInterceptor...">
</parameter>
</method>
<method name="bindListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="typeMatcher" type="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;">
</parameter>
<parameter name="listener" type="com.google.inject.spi.TypeListener">
</parameter>
</method>
<method name="bindScope"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="scopeAnnotation" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
<parameter name="scope" type="com.google.inject.Scope">
</parameter>
</method>
<method name="binder"
 return="com.google.inject.Binder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="configure"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="configure"
 return="void"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="builder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="convertToTypes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="typeMatcher" type="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;">
</parameter>
<parameter name="converter" type="com.google.inject.spi.TypeConverter">
</parameter>
</method>
<method name="currentStage"
 return="com.google.inject.Stage"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="install"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="module" type="com.google.inject.Module">
</parameter>
</method>
<method name="requestInjection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="instance" type="java.lang.Object">
</parameter>
</method>
<method name="requestStaticInjection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="types" type="java.lang.Class&lt;?&gt;...">
</parameter>
</method>
<method name="requireBinding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="com.google.inject.Key&lt;?&gt;">
</parameter>
</method>
<method name="requireBinding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
</class>
<interface name="Binder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="com.google.inject.spi.Message">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="arguments" type="java.lang.Object...">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t" type="java.lang.Throwable">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.LinkedBindingBuilder&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.AnnotatedBindingBuilder&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.AnnotatedBindingBuilder&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="bindConstant"
 return="com.google.inject.binder.AnnotatedConstantBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="bindInterceptor"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="classMatcher" type="com.google.inject.matcher.Matcher&lt;? super java.lang.Class&lt;?&gt;&gt;">
</parameter>
<parameter name="methodMatcher" type="com.google.inject.matcher.Matcher&lt;? super java.lang.reflect.Method&gt;">
</parameter>
<parameter name="interceptors" type="org.aopalliance.intercept.MethodInterceptor...">
</parameter>
</method>
<method name="bindListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeMatcher" type="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;">
</parameter>
<parameter name="listener" type="com.google.inject.spi.TypeListener">
</parameter>
</method>
<method name="bindScope"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
<parameter name="scope" type="com.google.inject.Scope">
</parameter>
</method>
<method name="convertToTypes"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeMatcher" type="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;">
</parameter>
<parameter name="converter" type="com.google.inject.spi.TypeConverter">
</parameter>
</method>
<method name="currentStage"
 return="com.google.inject.Stage"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="install"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="module" type="com.google.inject.Module">
</parameter>
</method>
<method name="newPrivateBinder"
 return="com.google.inject.PrivateBinder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="requestInjection"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
<parameter name="instance" type="T">
</parameter>
</method>
<method name="requestInjection"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instance" type="java.lang.Object">
</parameter>
</method>
<method name="requestStaticInjection"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="types" type="java.lang.Class&lt;?&gt;...">
</parameter>
</method>
<method name="skipSources"
 return="com.google.inject.Binder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="classesToSkip" type="java.lang.Class...">
</parameter>
</method>
<method name="withSource"
 return="com.google.inject.Binder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="java.lang.Object">
</parameter>
</method>
</interface>
<interface name="Binding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<method name="acceptScopingVisitor"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.BindingScopingVisitor&lt;V&gt;">
</parameter>
</method>
<method name="acceptTargetVisitor"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.BindingTargetVisitor&lt;? super T, V&gt;">
</parameter>
</method>
<method name="getKey"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="BindingAnnotation"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="ConfigurationException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ConfigurationException"
 type="com.google.inject.ConfigurationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="messages" type="java.lang.Iterable&lt;com.google.inject.spi.Message&gt;">
</parameter>
</constructor>
<method name="getErrorMessages"
 return="java.util.Collection&lt;com.google.inject.spi.Message&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPartialValue"
 return="E"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="withPartialValue"
 return="com.google.inject.ConfigurationException"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="partialValue" type="java.lang.Object">
</parameter>
</method>
</class>
<class name="CreationException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CreationException"
 type="com.google.inject.CreationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="messages" type="java.util.Collection&lt;com.google.inject.spi.Message&gt;">
</parameter>
</constructor>
<method name="getErrorMessages"
 return="java.util.Collection&lt;com.google.inject.spi.Message&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Exposed"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="Guice"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="createInjector"
 return="com.google.inject.Injector"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="com.google.inject.Module...">
</parameter>
</method>
<method name="createInjector"
 return="com.google.inject.Injector"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stage" type="com.google.inject.Stage">
</parameter>
<parameter name="modules" type="com.google.inject.Module...">
</parameter>
</method>
<method name="createInjector"
 return="com.google.inject.Injector"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stage" type="com.google.inject.Stage">
</parameter>
<parameter name="modules" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
<method name="createInjector"
 return="com.google.inject.Injector"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
</class>
<class name="ImplementedBy"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="Inject"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<interface name="Injector"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="createChildInjector"
 return="com.google.inject.Injector"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="com.google.inject.Module...">
</parameter>
</method>
<method name="createChildInjector"
 return="com.google.inject.Injector"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
<method name="findBindingsByType"
 return="java.util.List&lt;com.google.inject.Binding&lt;T&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="getBinding"
 return="com.google.inject.Binding&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getBinding"
 return="com.google.inject.Binding&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="getBindings"
 return="java.util.Map&lt;com.google.inject.Key&lt;?&gt;, com.google.inject.Binding&lt;?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInstance"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getInstance"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="getParent"
 return="com.google.inject.Injector"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="injectMembers"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instance" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="Key"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Key"
 type="com.google.inject.Key"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</constructor>
<constructor name="Key"
 type="com.google.inject.Key"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</constructor>
<constructor name="Key"
 type="com.google.inject.Key"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</constructor>
<method name="equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.reflect.Type">
</parameter>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="get"
 return="com.google.inject.Key&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.reflect.Type">
</parameter>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
<method name="getAnnotation"
 return="java.lang.annotation.Annotation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAnnotationType"
 return="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypeLiteral"
 return="com.google.inject.TypeLiteral&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hashCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="toString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="MembersInjector"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="injectMembers"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instance" type="T">
</parameter>
</method>
</interface>
<interface name="Module"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="configure"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
</interface>
<class name="OutOfScopeException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="OutOfScopeException"
 type="com.google.inject.OutOfScopeException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="OutOfScopeException"
 type="com.google.inject.OutOfScopeException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="OutOfScopeException"
 type="com.google.inject.OutOfScopeException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<interface name="PrivateBinder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binder">
</implements>
<method name="expose"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;?&gt;">
</parameter>
</method>
<method name="expose"
 return="com.google.inject.binder.AnnotatedElementBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;?&gt;">
</parameter>
</method>
<method name="expose"
 return="com.google.inject.binder.AnnotatedElementBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="skipSources"
 return="com.google.inject.PrivateBinder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="classesToSkip" type="java.lang.Class...">
</parameter>
</method>
<method name="withSource"
 return="com.google.inject.PrivateBinder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="PrivateModule"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Module">
</implements>
<constructor name="PrivateModule"
 type="com.google.inject.PrivateModule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addError"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="message" type="com.google.inject.spi.Message">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="arguments" type="java.lang.Object...">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="t" type="java.lang.Throwable">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.LinkedBindingBuilder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.AnnotatedBindingBuilder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="bind"
 return="com.google.inject.binder.AnnotatedBindingBuilder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="clazz" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="bindConstant"
 return="com.google.inject.binder.AnnotatedConstantBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="bindInterceptor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="classMatcher" type="com.google.inject.matcher.Matcher&lt;? super java.lang.Class&lt;?&gt;&gt;">
</parameter>
<parameter name="methodMatcher" type="com.google.inject.matcher.Matcher&lt;? super java.lang.reflect.Method&gt;">
</parameter>
<parameter name="interceptors" type="org.aopalliance.intercept.MethodInterceptor...">
</parameter>
</method>
<method name="bindListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="typeMatcher" type="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;">
</parameter>
<parameter name="listener" type="com.google.inject.spi.TypeListener">
</parameter>
</method>
<method name="bindScope"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="scopeAnnotation" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
<parameter name="scope" type="com.google.inject.Scope">
</parameter>
</method>
<method name="binder"
 return="com.google.inject.PrivateBinder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="configure"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="configure"
 return="void"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="convertToTypes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="typeMatcher" type="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;">
</parameter>
<parameter name="converter" type="com.google.inject.spi.TypeConverter">
</parameter>
</method>
<method name="currentStage"
 return="com.google.inject.Stage"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="expose"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="expose"
 return="com.google.inject.binder.AnnotatedElementBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;?&gt;">
</parameter>
</method>
<method name="expose"
 return="com.google.inject.binder.AnnotatedElementBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="install"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="module" type="com.google.inject.Module">
</parameter>
</method>
<method name="requestInjection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="instance" type="java.lang.Object">
</parameter>
</method>
<method name="requestStaticInjection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="types" type="java.lang.Class&lt;?&gt;...">
</parameter>
</method>
<method name="requireBinding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="com.google.inject.Key&lt;?&gt;">
</parameter>
</method>
<method name="requireBinding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="type" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
</class>
<class name="ProvidedBy"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<interface name="Provider"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="get"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="Provides"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="ProvisionException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ProvisionException"
 type="com.google.inject.ProvisionException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="messages" type="java.lang.Iterable&lt;com.google.inject.spi.Message&gt;">
</parameter>
</constructor>
<constructor name="ProvisionException"
 type="com.google.inject.ProvisionException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="ProvisionException"
 type="com.google.inject.ProvisionException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<method name="getErrorMessages"
 return="java.util.Collection&lt;com.google.inject.spi.Message&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="Scope"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="scope"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
<parameter name="unscoped" type="com.google.inject.Provider&lt;T&gt;">
</parameter>
</method>
<method name="toString"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="ScopeAnnotation"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="Scopes"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<field name="NO_SCOPE"
 type="com.google.inject.Scope"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SINGLETON"
 type="com.google.inject.Scope"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="Singleton"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="Stage"
 extends="java.lang.Enum"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="valueOf"
 return="com.google.inject.Stage"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="com.google.inject.Stage[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="TypeLiteral"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TypeLiteral"
 type="com.google.inject.TypeLiteral"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</constructor>
<method name="equals"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="get"
 return="com.google.inject.TypeLiteral&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="get"
 return="com.google.inject.TypeLiteral&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="getExceptionTypes"
 return="java.util.List&lt;com.google.inject.TypeLiteral&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="methodOrConstructor" type="java.lang.reflect.Member">
</parameter>
</method>
<method name="getFieldType"
 return="com.google.inject.TypeLiteral&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="field" type="java.lang.reflect.Field">
</parameter>
</method>
<method name="getParameterTypes"
 return="java.util.List&lt;com.google.inject.TypeLiteral&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="methodOrConstructor" type="java.lang.reflect.Member">
</parameter>
</method>
<method name="getRawType"
 return="java.lang.Class&lt;? super T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getReturnType"
 return="com.google.inject.TypeLiteral&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="method" type="java.lang.reflect.Method">
</parameter>
</method>
<method name="getSupertype"
 return="com.google.inject.TypeLiteral&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="supertype" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="getType"
 return="java.lang.reflect.Type"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hashCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="toString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
<package name="com.google.inject.assistedinject"
>
<class name="Assisted"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="AssistedInject"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="FactoryProvider"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.HasDependencies">
</implements>
<implements name="com.google.inject.Provider">
</implements>
<method name="get"
 return="F"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDependencies"
 return="java.util.Set&lt;com.google.inject.spi.Dependency&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="newFactory"
 return="com.google.inject.Provider&lt;F&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="factoryType" type="com.google.inject.TypeLiteral&lt;F&gt;">
</parameter>
<parameter name="implementationType" type="com.google.inject.TypeLiteral&lt;?&gt;">
</parameter>
</method>
<method name="newFactory"
 return="com.google.inject.Provider&lt;F&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="factoryType" type="java.lang.Class&lt;F&gt;">
</parameter>
<parameter name="implementationType" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.binder"
>
<interface name="AnnotatedBindingBuilder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.binder.LinkedBindingBuilder">
</implements>
<method name="annotatedWith"
 return="com.google.inject.binder.LinkedBindingBuilder&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="annotatedWith"
 return="com.google.inject.binder.LinkedBindingBuilder&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
</interface>
<interface name="AnnotatedConstantBindingBuilder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="annotatedWith"
 return="com.google.inject.binder.ConstantBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="annotatedWith"
 return="com.google.inject.binder.ConstantBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
</interface>
<interface name="AnnotatedElementBuilder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="annotatedWith"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="annotatedWith"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
</interface>
<interface name="ConstantBindingBuilder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="E">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="boolean">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="char">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="double">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="float">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="int">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="long">
</parameter>
</method>
<method name="to"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="short">
</parameter>
</method>
</interface>
<interface name="LinkedBindingBuilder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.binder.ScopedBindingBuilder">
</implements>
<method name="to"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetKey" type="com.google.inject.Key&lt;? extends T&gt;">
</parameter>
</method>
<method name="to"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="implementation" type="com.google.inject.TypeLiteral&lt;? extends T&gt;">
</parameter>
</method>
<method name="to"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="implementation" type="java.lang.Class&lt;? extends T&gt;">
</parameter>
</method>
<method name="toInstance"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instance" type="T">
</parameter>
</method>
<method name="toProvider"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providerKey" type="com.google.inject.Key&lt;? extends com.google.inject.Provider&lt;? extends T&gt;&gt;">
</parameter>
</method>
<method name="toProvider"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="provider" type="com.google.inject.Provider&lt;? extends T&gt;">
</parameter>
</method>
<method name="toProvider"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providerType" type="java.lang.Class&lt;? extends com.google.inject.Provider&lt;? extends T&gt;&gt;">
</parameter>
</method>
</interface>
<interface name="ScopedBindingBuilder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="asEagerSingleton"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="in"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="com.google.inject.Scope">
</parameter>
</method>
<method name="in"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scopeAnnotation" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
</interface>
</package>
<package name="com.google.inject.jndi"
>
<class name="JndiIntegration"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="fromJndi"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.matcher"
>
<class name="AbstractMatcher"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.matcher.Matcher">
</implements>
<constructor name="AbstractMatcher"
 type="com.google.inject.matcher.AbstractMatcher"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="and"
 return="com.google.inject.matcher.Matcher&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="other" type="com.google.inject.matcher.Matcher&lt;? super T&gt;">
</parameter>
</method>
<method name="or"
 return="com.google.inject.matcher.Matcher&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="other" type="com.google.inject.matcher.Matcher&lt;? super T&gt;">
</parameter>
</method>
</class>
<interface name="Matcher"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="and"
 return="com.google.inject.matcher.Matcher&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="other" type="com.google.inject.matcher.Matcher&lt;? super T&gt;">
</parameter>
</method>
<method name="matches"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t" type="T">
</parameter>
</method>
<method name="or"
 return="com.google.inject.matcher.Matcher&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="other" type="com.google.inject.matcher.Matcher&lt;? super T&gt;">
</parameter>
</method>
</interface>
<class name="Matchers"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="annotatedWith"
 return="com.google.inject.matcher.Matcher&lt;java.lang.reflect.AnnotatedElement&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="annotatedWith"
 return="com.google.inject.matcher.Matcher&lt;java.lang.reflect.AnnotatedElement&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
<method name="any"
 return="com.google.inject.matcher.Matcher&lt;java.lang.Object&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="identicalTo"
 return="com.google.inject.matcher.Matcher&lt;java.lang.Object&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.Object">
</parameter>
</method>
<method name="inPackage"
 return="com.google.inject.matcher.Matcher&lt;java.lang.Class&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetPackage" type="java.lang.Package">
</parameter>
</method>
<method name="inSubpackage"
 return="com.google.inject.matcher.Matcher&lt;java.lang.Class&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetPackageName" type="java.lang.String">
</parameter>
</method>
<method name="not"
 return="com.google.inject.matcher.Matcher&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p" type="com.google.inject.matcher.Matcher&lt;? super T&gt;">
</parameter>
</method>
<method name="only"
 return="com.google.inject.matcher.Matcher&lt;java.lang.Object&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.Object">
</parameter>
</method>
<method name="returns"
 return="com.google.inject.matcher.Matcher&lt;java.lang.reflect.Method&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="returnType" type="com.google.inject.matcher.Matcher&lt;? super java.lang.Class&lt;?&gt;&gt;">
</parameter>
</method>
<method name="subclassesOf"
 return="com.google.inject.matcher.Matcher&lt;java.lang.Class&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="superclass" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.multibindings"
>
<class name="MapBinder"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addBinding"
 return="com.google.inject.binder.LinkedBindingBuilder&lt;V&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="K">
</parameter>
</method>
<method name="newMapBinder"
 return="com.google.inject.multibindings.MapBinder&lt;K, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="keyType" type="com.google.inject.TypeLiteral&lt;K&gt;">
</parameter>
<parameter name="valueType" type="com.google.inject.TypeLiteral&lt;V&gt;">
</parameter>
</method>
<method name="newMapBinder"
 return="com.google.inject.multibindings.MapBinder&lt;K, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="keyType" type="com.google.inject.TypeLiteral&lt;K&gt;">
</parameter>
<parameter name="valueType" type="com.google.inject.TypeLiteral&lt;V&gt;">
</parameter>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="newMapBinder"
 return="com.google.inject.multibindings.MapBinder&lt;K, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="keyType" type="com.google.inject.TypeLiteral&lt;K&gt;">
</parameter>
<parameter name="valueType" type="com.google.inject.TypeLiteral&lt;V&gt;">
</parameter>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
<method name="newMapBinder"
 return="com.google.inject.multibindings.MapBinder&lt;K, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="keyType" type="java.lang.Class&lt;K&gt;">
</parameter>
<parameter name="valueType" type="java.lang.Class&lt;V&gt;">
</parameter>
</method>
<method name="newMapBinder"
 return="com.google.inject.multibindings.MapBinder&lt;K, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="keyType" type="java.lang.Class&lt;K&gt;">
</parameter>
<parameter name="valueType" type="java.lang.Class&lt;V&gt;">
</parameter>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="newMapBinder"
 return="com.google.inject.multibindings.MapBinder&lt;K, V&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="keyType" type="java.lang.Class&lt;K&gt;">
</parameter>
<parameter name="valueType" type="java.lang.Class&lt;V&gt;">
</parameter>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
</class>
<class name="Multibinder"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addBinding"
 return="com.google.inject.binder.LinkedBindingBuilder&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="newSetBinder"
 return="com.google.inject.multibindings.Multibinder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="newSetBinder"
 return="com.google.inject.multibindings.Multibinder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="newSetBinder"
 return="com.google.inject.multibindings.Multibinder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
<method name="newSetBinder"
 return="com.google.inject.multibindings.Multibinder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="newSetBinder"
 return="com.google.inject.multibindings.Multibinder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="newSetBinder"
 return="com.google.inject.multibindings.Multibinder&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.name"
>
<class name="Named"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="Names"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="bindProperties"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="properties" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
<method name="bindProperties"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="properties" type="java.util.Properties">
</parameter>
</method>
<method name="named"
 return="com.google.inject.name.Named"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.servlet"
>
<class name="GuiceFilter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="GuiceFilter"
 type="com.google.inject.servlet.GuiceFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="doFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="servletRequest" type="ServletRequest">
</parameter>
<parameter name="servletResponse" type="ServletResponse">
</parameter>
<parameter name="filterChain" type="FilterChain">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="ServletException" type="ServletException">
</exception>
</method>
<method name="init"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filterConfig" type="FilterConfig">
</parameter>
<exception name="ServletException" type="ServletException">
</exception>
</method>
</class>
<class name="GuiceServletContextListener"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="GuiceServletContextListener"
 type="com.google.inject.servlet.GuiceServletContextListener"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="contextDestroyed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="servletContextEvent" type="ServletContextEvent">
</parameter>
</method>
<method name="contextInitialized"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="servletContextEvent" type="ServletContextEvent">
</parameter>
</method>
<method name="getInjector"
 return="com.google.inject.Injector"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
</class>
<class name="RequestParameters"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="RequestScoped"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="ServletModule"
 extends="com.google.inject.AbstractModule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ServletModule"
 type="com.google.inject.servlet.ServletModule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="configure"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="configureServlets"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="filter"
 return="com.google.inject.servlet.ServletModule.FilterKeyBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="urlPattern" type="java.lang.String">
</parameter>
<parameter name="morePatterns" type="java.lang.String...">
</parameter>
</method>
<method name="filterRegex"
 return="com.google.inject.servlet.ServletModule.FilterKeyBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="regex" type="java.lang.String">
</parameter>
<parameter name="regexes" type="java.lang.String...">
</parameter>
</method>
<method name="serve"
 return="com.google.inject.servlet.ServletModule.ServletKeyBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="urlPattern" type="java.lang.String">
</parameter>
<parameter name="morePatterns" type="java.lang.String...">
</parameter>
</method>
<method name="serveRegex"
 return="com.google.inject.servlet.ServletModule.ServletKeyBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="regex" type="java.lang.String">
</parameter>
<parameter name="regexes" type="java.lang.String...">
</parameter>
</method>
</class>
<interface name="ServletModule.FilterKeyBindingBuilder"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="through"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filterKey" type="com.google.inject.Key&lt;? extends Filter&gt;">
</parameter>
</method>
<method name="through"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dummyFilterClass" type="com.google.inject.Key&lt;? extends Filter&gt;">
</parameter>
<parameter name="contextParams" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
<method name="through"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filterKey" type="java.lang.Class&lt;? extends Filter&gt;">
</parameter>
</method>
<method name="through"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dummyFilterClass" type="java.lang.Class&lt;? extends Filter&gt;">
</parameter>
<parameter name="contextParams" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
</interface>
<interface name="ServletModule.ServletKeyBindingBuilder"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="with"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="servletKey" type="com.google.inject.Key&lt;? extends HttpServlet&gt;">
</parameter>
</method>
<method name="with"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="servletKey" type="com.google.inject.Key&lt;? extends HttpServlet&gt;">
</parameter>
<parameter name="contextParams" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
<method name="with"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="servletKey" type="java.lang.Class&lt;? extends HttpServlet&gt;">
</parameter>
</method>
<method name="with"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="servletKey" type="java.lang.Class&lt;? extends HttpServlet&gt;">
</parameter>
<parameter name="contextParams" type="java.util.Map&lt;java.lang.String, java.lang.String&gt;">
</parameter>
</method>
</interface>
<class name="ServletScopes"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<field name="REQUEST"
 type="com.google.inject.Scope"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SESSION"
 type="com.google.inject.Scope"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="SessionScoped"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
</package>
<package name="com.google.inject.spi"
>
<interface name="BindingScopingVisitor"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="visitEagerSingleton"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="visitNoScoping"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="visitScope"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="com.google.inject.Scope">
</parameter>
</method>
<method name="visitScopeAnnotation"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scopeAnnotation" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
</interface>
<interface name="BindingTargetVisitor"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.ConstructorBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.ConvertedConstantBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.ExposedBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.InstanceBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.LinkedKeyBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.ProviderBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.ProviderInstanceBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.ProviderKeyBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.UntargettedBinding&lt;? extends T&gt;">
</parameter>
</method>
</interface>
<interface name="ConstructorBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<implements name="com.google.inject.spi.HasDependencies">
</implements>
<method name="getConstructor"
 return="com.google.inject.spi.InjectionPoint"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInjectableMembers"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMethodInterceptors"
 return="java.util.Map&lt;java.lang.reflect.Method, java.util.List&lt;org.aopalliance.intercept.MethodInterceptor&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="ConvertedConstantBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<implements name="com.google.inject.spi.HasDependencies">
</implements>
<method name="getDependencies"
 return="java.util.Set&lt;com.google.inject.spi.Dependency&lt;?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSourceKey"
 return="com.google.inject.Key&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getValue"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="DefaultBindingScopingVisitor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.BindingScopingVisitor">
</implements>
<constructor name="DefaultBindingScopingVisitor"
 type="com.google.inject.spi.DefaultBindingScopingVisitor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="visitEagerSingleton"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="visitNoScoping"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="visitOther"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="visitScope"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="com.google.inject.Scope">
</parameter>
</method>
<method name="visitScopeAnnotation"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scopeAnnotation" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
</class>
<class name="DefaultBindingTargetVisitor"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.BindingTargetVisitor">
</implements>
<constructor name="DefaultBindingTargetVisitor"
 type="com.google.inject.spi.DefaultBindingTargetVisitor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="constructorBinding" type="com.google.inject.spi.ConstructorBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="convertedConstantBinding" type="com.google.inject.spi.ConvertedConstantBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="exposedBinding" type="com.google.inject.spi.ExposedBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instanceBinding" type="com.google.inject.spi.InstanceBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="linkedKeyBinding" type="com.google.inject.spi.LinkedKeyBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providerBinding" type="com.google.inject.spi.ProviderBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providerInstanceBinding" type="com.google.inject.spi.ProviderInstanceBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providerKeyBinding" type="com.google.inject.spi.ProviderKeyBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="untargettedBinding" type="com.google.inject.spi.UntargettedBinding&lt;? extends T&gt;">
</parameter>
</method>
<method name="visitOther"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="binding" type="com.google.inject.Binding&lt;? extends T&gt;">
</parameter>
</method>
</class>
<class name="DefaultElementVisitor"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.ElementVisitor">
</implements>
<constructor name="DefaultElementVisitor"
 type="com.google.inject.spi.DefaultElementVisitor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.Binding&lt;T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="injectionRequest" type="com.google.inject.spi.InjectionRequest">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="interceptorBinding" type="com.google.inject.spi.InterceptorBinding">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lookup" type="com.google.inject.spi.MembersInjectorLookup&lt;T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="com.google.inject.spi.Message">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="privateElements" type="com.google.inject.spi.PrivateElements">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providerLookup" type="com.google.inject.spi.ProviderLookup&lt;T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scopeBinding" type="com.google.inject.spi.ScopeBinding">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="staticInjectionRequest" type="com.google.inject.spi.StaticInjectionRequest">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeConverterBinding" type="com.google.inject.spi.TypeConverterBinding">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.TypeListenerBinding">
</parameter>
</method>
<method name="visitOther"
 return="V"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="element" type="com.google.inject.spi.Element">
</parameter>
</method>
</class>
<class name="Dependency"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="forInjectionPoints"
 return="java.util.Set&lt;com.google.inject.spi.Dependency&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="injectionPoints" type="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;">
</parameter>
</method>
<method name="get"
 return="com.google.inject.spi.Dependency&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getInjectionPoint"
 return="com.google.inject.spi.InjectionPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKey"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParameterIndex"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isNullable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="Element"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="acceptVisitor"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="ElementVisitor"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.Binding&lt;T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="com.google.inject.spi.InjectionRequest">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.InterceptorBinding">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lookup" type="com.google.inject.spi.MembersInjectorLookup&lt;T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="com.google.inject.spi.Message">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="elements" type="com.google.inject.spi.PrivateElements">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lookup" type="com.google.inject.spi.ProviderLookup&lt;T&gt;">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.ScopeBinding">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="com.google.inject.spi.StaticInjectionRequest">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.TypeConverterBinding">
</parameter>
</method>
<method name="visit"
 return="V"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binding" type="com.google.inject.spi.TypeListenerBinding">
</parameter>
</method>
</interface>
<class name="Elements"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Elements"
 type="com.google.inject.spi.Elements"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getElements"
 return="java.util.List&lt;com.google.inject.spi.Element&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="com.google.inject.Module...">
</parameter>
</method>
<method name="getElements"
 return="java.util.List&lt;com.google.inject.spi.Element&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stage" type="com.google.inject.Stage">
</parameter>
<parameter name="modules" type="com.google.inject.Module...">
</parameter>
</method>
<method name="getElements"
 return="java.util.List&lt;com.google.inject.spi.Element&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stage" type="com.google.inject.Stage">
</parameter>
<parameter name="modules" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
<method name="getElements"
 return="java.util.List&lt;com.google.inject.spi.Element&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
<method name="getModule"
 return="com.google.inject.Module"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="elements" type="java.lang.Iterable&lt;? extends com.google.inject.spi.Element&gt;">
</parameter>
</method>
</class>
<interface name="ExposedBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<implements name="com.google.inject.spi.HasDependencies">
</implements>
<method name="applyTo"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getPrivateElements"
 return="com.google.inject.spi.PrivateElements"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="HasDependencies"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getDependencies"
 return="java.util.Set&lt;com.google.inject.spi.Dependency&lt;?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="InjectionListener"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="afterInjection"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="injectee" type="I">
</parameter>
</method>
</interface>
<class name="InjectionPoint"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="forConstructorOf"
 return="com.google.inject.spi.InjectionPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;?&gt;">
</parameter>
</method>
<method name="forConstructorOf"
 return="com.google.inject.spi.InjectionPoint"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="forInstanceMethodsAndFields"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;?&gt;">
</parameter>
</method>
<method name="forInstanceMethodsAndFields"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="forStaticMethodsAndFields"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="com.google.inject.TypeLiteral">
</parameter>
</method>
<method name="forStaticMethodsAndFields"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="getDependencies"
 return="java.util.List&lt;com.google.inject.spi.Dependency&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMember"
 return="java.lang.reflect.Member"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isOptional"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="InjectionRequest"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<constructor name="InjectionRequest"
 type="com.google.inject.spi.InjectionRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="java.lang.Object">
</parameter>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
<parameter name="instance" type="T">
</parameter>
</constructor>
<method name="acceptVisitor"
 return="R"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;R&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getInjectionPoints"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="ConfigurationException" type="com.google.inject.ConfigurationException">
</exception>
</method>
<method name="getInstance"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="com.google.inject.TypeLiteral&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="InstanceBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<implements name="com.google.inject.spi.HasDependencies">
</implements>
<method name="getInjectionPoints"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInstance"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="InterceptorBinding"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getClassMatcher"
 return="com.google.inject.matcher.Matcher&lt;? super java.lang.Class&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInterceptors"
 return="java.util.List&lt;MethodInterceptor&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMethodMatcher"
 return="com.google.inject.matcher.Matcher&lt;? super java.lang.reflect.Method&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="LinkedKeyBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<method name="getLinkedKey"
 return="com.google.inject.Key&lt;? extends T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="MembersInjectorLookup"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<constructor name="MembersInjectorLookup"
 type="com.google.inject.spi.MembersInjectorLookup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="java.lang.Object">
</parameter>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</constructor>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getDelegate"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="com.google.inject.TypeLiteral&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initializeDelegate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="delegate" type="com.google.inject.MembersInjector&lt;T&gt;">
</parameter>
</method>
</class>
<class name="Message"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<constructor name="Message"
 type="com.google.inject.spi.Message"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="java.lang.Object">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="Message"
 type="com.google.inject.spi.Message"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="Message"
 type="com.google.inject.spi.Message"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="sources" type="java.util.List&lt;java.lang.Object&gt;">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getCause"
 return="java.lang.Throwable"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSources"
 return="java.util.List&lt;java.lang.Object&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PrivateElements"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<method name="getElements"
 return="java.util.List&lt;com.google.inject.spi.Element&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExposedKeys"
 return="java.util.Set&lt;com.google.inject.Key&lt;?&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExposedSource"
 return="java.lang.Object"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;?&gt;">
</parameter>
</method>
<method name="getInjector"
 return="com.google.inject.Injector"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="ProviderBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<method name="getProvidedKey"
 return="com.google.inject.Key&lt;?&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="ProviderInstanceBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<implements name="com.google.inject.spi.HasDependencies">
</implements>
<method name="getInjectionPoints"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProviderInstance"
 return="com.google.inject.Provider&lt;? extends T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<interface name="ProviderKeyBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
<method name="getProviderKey"
 return="com.google.inject.Key&lt;? extends com.google.inject.Provider&lt;? extends T&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="ProviderLookup"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<constructor name="ProviderLookup"
 type="com.google.inject.spi.ProviderLookup"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="java.lang.Object">
</parameter>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</constructor>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getDelegate"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKey"
 return="com.google.inject.Key&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initializeDelegate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="delegate" type="com.google.inject.Provider&lt;T&gt;">
</parameter>
</method>
</class>
<interface name="ProviderWithDependencies"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.HasDependencies">
</implements>
<implements name="com.google.inject.Provider">
</implements>
</interface>
<class name="ScopeBinding"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getAnnotationType"
 return="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScope"
 return="com.google.inject.Scope"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="StaticInjectionRequest"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getInjectionPoints"
 return="java.util.Set&lt;com.google.inject.spi.InjectionPoint&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="ConfigurationException" type="com.google.inject.ConfigurationException">
</exception>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getType"
 return="java.lang.Class&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="TypeConverter"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="convert"
 return="java.lang.Object"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="value" type="java.lang.String">
</parameter>
<parameter name="toType" type="com.google.inject.TypeLiteral&lt;?&gt;">
</parameter>
</method>
</interface>
<class name="TypeConverterBinding"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypeConverter"
 return="com.google.inject.spi.TypeConverter"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypeMatcher"
 return="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="TypeEncounter"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="com.google.inject.spi.Message">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="arguments" type="java.lang.Object...">
</parameter>
</method>
<method name="addError"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="t" type="java.lang.Throwable">
</parameter>
</method>
<method name="bindInterceptor"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="methodMatcher" type="com.google.inject.matcher.Matcher&lt;? super java.lang.reflect.Method&gt;">
</parameter>
<parameter name="interceptors" type="org.aopalliance.intercept.MethodInterceptor...">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="typeLiteral" type="com.google.inject.TypeLiteral&lt;T&gt;">
</parameter>
</method>
<method name="getMembersInjector"
 return="com.google.inject.MembersInjector&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="com.google.inject.Key&lt;T&gt;">
</parameter>
</method>
<method name="getProvider"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
</method>
<method name="register"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="membersInjector" type="com.google.inject.MembersInjector&lt;? super I&gt;">
</parameter>
</method>
<method name="register"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="com.google.inject.spi.InjectionListener&lt;? super I&gt;">
</parameter>
</method>
</interface>
<interface name="TypeListener"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="hear"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="com.google.inject.TypeLiteral&lt;I&gt;">
</parameter>
<parameter name="encounter" type="com.google.inject.spi.TypeEncounter&lt;I&gt;">
</parameter>
</method>
</interface>
<class name="TypeListenerBinding"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.spi.Element">
</implements>
<method name="acceptVisitor"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="visitor" type="com.google.inject.spi.ElementVisitor&lt;T&gt;">
</parameter>
</method>
<method name="applyTo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
<method name="getListener"
 return="com.google.inject.spi.TypeListener"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypeMatcher"
 return="com.google.inject.matcher.Matcher&lt;? super com.google.inject.TypeLiteral&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="UntargettedBinding"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="com.google.inject.Binding">
</implements>
</interface>
</package>
<package name="com.google.inject.spring"
>
<class name="SpringIntegration"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="bindAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
<parameter name="beanFactory" type="ListableBeanFactory">
</parameter>
</method>
<method name="fromSpring"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;T&gt;">
</parameter>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.throwingproviders"
>
<interface name="ThrowingProvider"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="get"
 return="T"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
</interface>
<class name="ThrowingProviderBinder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="bind"
 return="com.google.inject.throwingproviders.ThrowingProviderBinder.SecondaryBinder&lt;P&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="interfaceType" type="java.lang.Class&lt;P&gt;">
</parameter>
<parameter name="valueType" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="create"
 return="com.google.inject.throwingproviders.ThrowingProviderBinder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="binder" type="com.google.inject.Binder">
</parameter>
</method>
</class>
<class name="ThrowingProviderBinder.SecondaryBinder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ThrowingProviderBinder.SecondaryBinder"
 type="com.google.inject.throwingproviders.ThrowingProviderBinder.SecondaryBinder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="interfaceType" type="java.lang.Class&lt;P&gt;">
</parameter>
<parameter name="valueType" type="java.lang.reflect.Type">
</parameter>
</constructor>
<method name="annotatedWith"
 return="com.google.inject.throwingproviders.ThrowingProviderBinder.SecondaryBinder&lt;P&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotationType" type="java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;">
</parameter>
</method>
<method name="annotatedWith"
 return="com.google.inject.throwingproviders.ThrowingProviderBinder.SecondaryBinder&lt;P&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="annotation" type="java.lang.annotation.Annotation">
</parameter>
</method>
<method name="to"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="target" type="P">
</parameter>
</method>
<method name="to"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetKey" type="com.google.inject.Key&lt;? extends P&gt;">
</parameter>
</method>
<method name="to"
 return="com.google.inject.binder.ScopedBindingBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="targetType" type="java.lang.Class&lt;? extends P&gt;">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.tools.jmx"
>
<interface name="ManagedBindingMBean"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getKey"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getProvider"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSource"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="Manager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Manager"
 type="com.google.inject.tools.jmx.Manager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="main"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="args" type="java.lang.String[]">
</parameter>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="manage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="domain" type="java.lang.String">
</parameter>
<parameter name="injector" type="com.google.inject.Injector">
</parameter>
</method>
<method name="manage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="server" type="javax.management.MBeanServer">
</parameter>
<parameter name="domain" type="java.lang.String">
</parameter>
<parameter name="injector" type="com.google.inject.Injector">
</parameter>
</method>
</class>
</package>
<package name="com.google.inject.util"
>
<class name="Modules"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="combine"
 return="com.google.inject.Module"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="com.google.inject.Module...">
</parameter>
</method>
<method name="combine"
 return="com.google.inject.Module"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
<method name="override"
 return="com.google.inject.util.Modules.OverriddenModuleBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="com.google.inject.Module...">
</parameter>
</method>
<method name="override"
 return="com.google.inject.util.Modules.OverriddenModuleBuilder"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modules" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
<field name="EMPTY_MODULE"
 type="com.google.inject.Module"
 transient="false"
 volatile="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="Modules.OverriddenModuleBuilder"
 abstract="true"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="with"
 return="com.google.inject.Module"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="overrides" type="com.google.inject.Module...">
</parameter>
</method>
<method name="with"
 return="com.google.inject.Module"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="overrides" type="java.lang.Iterable&lt;? extends com.google.inject.Module&gt;">
</parameter>
</method>
</interface>
<class name="Providers"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="of"
 return="com.google.inject.Provider&lt;T&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instance" type="T">
</parameter>
</method>
</class>
<class name="Types"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="arrayOf"
 return="java.lang.reflect.GenericArrayType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="componentType" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="listOf"
 return="java.lang.reflect.ParameterizedType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="elementType" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="mapOf"
 return="java.lang.reflect.ParameterizedType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keyType" type="java.lang.reflect.Type">
</parameter>
<parameter name="valueType" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="newParameterizedType"
 return="java.lang.reflect.ParameterizedType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawType" type="java.lang.reflect.Type">
</parameter>
<parameter name="typeArguments" type="java.lang.reflect.Type...">
</parameter>
</method>
<method name="newParameterizedTypeWithOwner"
 return="java.lang.reflect.ParameterizedType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ownerType" type="java.lang.reflect.Type">
</parameter>
<parameter name="rawType" type="java.lang.reflect.Type">
</parameter>
<parameter name="typeArguments" type="java.lang.reflect.Type...">
</parameter>
</method>
<method name="providerOf"
 return="java.lang.reflect.ParameterizedType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providedType" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="setOf"
 return="java.lang.reflect.ParameterizedType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="elementType" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="subtypeOf"
 return="java.lang.reflect.WildcardType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bound" type="java.lang.reflect.Type">
</parameter>
</method>
<method name="supertypeOf"
 return="java.lang.reflect.WildcardType"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bound" type="java.lang.reflect.Type">
</parameter>
</method>
</class>
</package>
</api>
