# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "Chrome OS Team"
NAME = "firmware_PDResetSoft"
PURPOSE = "Servo based PD soft reset test"
CRITERIA = "This test will fail if soft reset does not complete"
TIME = "SHORT"
TEST_CATEGORY = "Functional"
TEST_CLASS = "firmware"
TEST_TYPE = "server"

DOC = """
This test checks:
  - Ability of DUT to initate soft resets
  - Ability of DUT to receive soft reset requests from Plankton
  - If DUT is dualrole capable, soft resets are done with the DUT
    in each power role.
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)
plankton_args = hosts.CrosHost.get_plankton_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args,
                             plankton_args=plankton_args)
    job.run_test("firmware_PDResetSoft", host=host, cmdline_args=args,
                 disable_sysinfo=True)

parallel_simple(run, machines)