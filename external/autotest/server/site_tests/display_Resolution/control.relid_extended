# Copyright 2015 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "chromeos-chameleon"
NAME = "display_Resolution.relid_extended"
PURPOSE = "Remotely controlled display resolution test."
CRITERIA = "This test will fail if the screens mismatch."
ATTRIBUTES = "suite:chameleon_dp, suite:chameleon_dp_hdmi, suite:chameleon_hdmi, suite:chameleon_hdmi_nightly"
TIME = "SHORT"
TEST_CATEGORY = "Functional"
TEST_CLASS = "display"
TEST_TYPE = "server"
DEPENDENCIES = 'chameleon,servo'
JOB_RETRIES = 2

DOC = """
This test remotely tests display resolution functions, by switching EDIDs
in extended mode while performing lid close, and then lid open. DUT is
expected to detect a new resolution after lid open.
"""

args_dict = utils.args_to_dict(args)
chameleon_args = hosts.CrosHost.get_chameleon_arguments(args_dict)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, chameleon_args=chameleon_args,
                             servo_args=servo_args)
    job.run_test("display_Resolution", host=host,
                 test_lid_close_open=True, tag="relid_extended")

parallel_simple(run, machines)
