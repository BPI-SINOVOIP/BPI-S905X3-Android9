# Copyright (c) 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "chromeos-chameleon"
NAME = "display_HotPlugAtBoot.mirrored.unplug"
PURPOSE = "Remotely controlled display hot-plug and reboot test."
CRITERIA = "This test will fail if DUT doesn't see the display after boot."
ATTRIBUTES = "suite:chameleon_dp, suite:chameleon_dp_hdmi, suite:chameleon_hdmi_nightly, suite:chameleon_hdmi"
TIME = "SHORT"
TEST_CATEGORY = "Functional"
TEST_CLASS = "display"
TEST_TYPE = "server"
DEPENDENCIES = 'chameleon'
JOB_RETRIES = 2

DOC = """
This test remotely emulates external display hot-plug and reboot.
"""

# Plug unplug sequnce
# (plugged_before_boot, plugged_after_boot)
plug_status = [(False,True),
               (True, False)]

args_dict = utils.args_to_dict(args)
chameleon_args = hosts.CrosHost.get_chameleon_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, chameleon_args=chameleon_args)
    job.run_test("display_HotPlugAtBoot", host=host, test_mirrored=True,
                 plug_status=plug_status, tag="mirrored.unplug")

parallel_simple(run, machines)
