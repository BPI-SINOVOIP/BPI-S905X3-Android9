# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "Chrome OS Team"
NAME = "firmware_PDTrySrc"
PURPOSE = "Servo based PD Try.SRC protocol test"
CRITERIA = "This test will fail if a power swap gives unexpected results"
TIME = "SHORT"
TEST_CATEGORY = "Functional"
TEST_CLASS = "firmware"
TEST_TYPE = "server"

DOC = """
This test checks:
  - If the DUT advertises support for dualrole and Try.SRC operation
  - Runs a series of disconnect/connects with Try.SRC on
  - Runs a series of disconnect/connects with Try.SRC off
  - Verifies that with Try.SRC on the DUT connects in SRC mode
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)
plankton_args = hosts.CrosHost.get_plankton_arguments(args_dict)

def run(machine):
    host = hosts.create_host(machine, servo_args=servo_args,
                             plankton_args=plankton_args)
    job.run_test("firmware_PDTrySrc", host=host, cmdline_args=args,
                 disable_sysinfo=True)

parallel_simple(run, machines)