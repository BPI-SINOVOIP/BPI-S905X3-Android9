# Copyright 2016 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

from autotest_lib.server import utils

AUTHOR = "harpreet@chromium.org"
NAME = "enterprise_CFM_SessionStress"
TIME = "LONG"
TEST_CATEGORY = "Functional"
TEST_CLASS = "enterprise"
TEST_TYPE = "server"
ATTRIBUTES = "suite:hotrod, suite:hotrod-release"
JOB_RETRIES = 3

DOC = """
This test clears the TPM and enables the appropriate usb port on the servo
before enrolling the device into CFM. Once the device in enrolled, it tries to
stress test the device by repeatedly starting and ending new hangout sessions.
This is repeated for the number of times defined below which can be overwritten
by an arg passed via command propmt when run manually.
"""

args_dict = utils.args_to_dict(args)
servo_args = hosts.CrosHost.get_servo_arguments(args_dict)

def run_test(machine):
    host = hosts.create_host(machine, servo_args=servo_args)
    repeat = int(args_dict.get('repeat', 100))

    job.run_test('enterprise_CFM_SessionStress',
                 host=host,
                 repeat=repeat)


parallel_simple(run_test, machines)
