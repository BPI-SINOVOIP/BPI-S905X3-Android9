// Copyright (C) 2013 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//

// Builds the Mockito source code, but does not include any run-time
// dependencies. Most projects should use mockito-target instead, which includes
// everything needed to run Mockito tests.
java_library_static {
    name: "mockito",
    host_supported: true,
    hostdex: true,
    no_framework_libs: true,
    srcs: ["src/main/java/**/*.java"],

    libs: [
        "junit",
        "objenesis",
    ],

    target: {
        android: {
            // Exclude source used to dynamically create classes since target builds use
            // dexmaker instead and including it causes conflicts.
            exclude_srcs: [
                "src/main/java/org/mockito/internal/creation/bytebuddy/**/*.java",
            ],
        },
        host: {
            static_libs: [
                "mockito-byte-buddy",
                "mockito-byte-buddy-agent",
            ],
        },
    },
    sdk_version: "16",
    java_version: "1.7",
}

// Compatibility library for old name of host target
java_library_host {
    name: "mockito-host",
    static_libs: ["mockito"],
}

// Compatibility library for old name of api target
java_library_static {
    name: "mockito-api",
    hostdex: true,
    no_framework_libs: true,
    static_libs: ["mockito"],
    sdk_version: "16",
}

// Compatibility library for old name of host target
java_library_host {
    name: "mockito-inline",
    static_libs: ["mockito"],
    java_resource_dirs: ["subprojects/inline/src/main/resources"],
}

// Main target for dependent projects. Bundles all the run-time dependencies
// needed to run Mockito tests on the device.
java_library_static {
    name: "mockito-target",
    no_framework_libs: true,
    static_libs: [
        "mockito-target-minus-junit4",
        "junit",
    ],
    sdk_version: "16",
}

// A mockito target that doesn't pull in junit. This is used to work around
// issues caused by multiple copies of junit in the classpath, usually when a test
// using mockito is run using android.test.runner.
java_library_static {
    name: "mockito-target-minus-junit4",
    no_framework_libs: true,
    static_libs: [
        "mockito",
        "dexmaker",
        "dexmaker-mockmaker",
        "objenesis",
    ],
    libs: ["junit"],
    sdk_version: "16",

    java_version: "1.7",
}

// Main target for dependent projects. Bundles all the run-time dependencies
// needed to run Mockito tests on the device.
java_library_static {
    name: "mockito-target-inline",
    no_framework_libs: true,
    static_libs: [
        "mockito-target-inline-minus-junit4",
        "junit",
    ],
    sdk_version: "current",
}

// A mockito target that doesn't pull in junit. This is used to work around
// issues caused by multiple copies of junit in the classpath, usually when a test
// using mockito is run using android.test.runner.
java_library_static {
    name: "mockito-target-inline-minus-junit4",
    no_framework_libs: true,
    static_libs: [
        "mockito",
        "dexmaker",
        "dexmaker-inline-mockmaker",
        "objenesis",
    ],
    libs: ["junit"],
    sdk_version: "current",

    java_version: "1.7",
}

// Host prebuilt dependencies.
// ============================================================
java_import_host {
    name: "mockito-byte-buddy",
    jars: ["lib/byte-buddy-1.7.9.jar"],
}

java_import_host {
    name: "mockito-byte-buddy-agent",
    jars: ["lib/byte-buddy-agent-1.7.9.jar"],
}

