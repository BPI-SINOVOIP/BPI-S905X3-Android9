Code completion in completionvalues1.xml for <item name="^"></item>:
android:
android:addStatesFromChildren : Sets whether this ViewGroup's drawable states also include its  children's drawable states.  [boolean]
android:adjustViewBounds : Set this to true if you want the ImageView to adjust its bounds  to preserve the aspect ratio of its drawable.  [boolean]
android:alignmentMode : When set to alignMargins, causes alignment to take place between  the outer boundary of a view, as defined by its margins.  [enum]
android:allowSingleTap : Indicates whether the drawer can be opened/closed by a single  tap on the handle.  [boolean]
android:alpha : alpha property of the view, as a value between 0 (completely  transparent) and 1 (completely opaque).  [float]
android:alwaysDrawnWithCache : Defines whether the ViewGroup should always draw its children  using their drawing cache or not.  [boolean]
android:animateFirstView : Defines whether to animate the current View when the ViewAnimation  is first displayed.  [boolean]
android:animateLayoutChanges : Defines whether changes in layout (caused by adding and removing  items) should cause a LayoutTransition to run.  [boolean]
android:animateOnClick : Indicates whether the drawer should be opened/closed with an  animation when the user clicks the handle.  [boolean]
android:animationCache : Defines whether layout animations should create a drawing cache  for their children.  [boolean]
android:animationDuration : Sets how long a transition animation should run (in milliseconds)  when layout has changed.  [integer]
android:animationResolution : Timeout between frames of animation in milliseconds  * Deprecated: Not used by the framework.  [integer]
android:autoLink : Controls whether links such as urls and email addresses are automatically  found and converted to clickable links.  [flag]
android:autoStart : When true, automatically start animating  [boolean]
android:autoText : If set, specifies that this TextView has a textual input method  and automatically corrects some common spelling errors. * Deprecated: Use inputType instead.  [boolean]
android:background : A drawable to use as the background.  [color, reference]
android:baseline : The offset of the baseline within this view.  [dimension]
android:baselineAlignBottom : If true, the image view will be baseline aligned with based on  its bottom edge.  [boolean]
android:baselineAligned : When set to false, prevents the layout from aligning its children's  baselines.  [boolean]
android:baselineAlignedChildIndex : When a linear layout is part of another layout that is baseline  aligned, it can specify which of its children to baseline align  to (that is, which child TextView).  [integer]
android:bottomOffset : Extra offset for the handle at the bottom of the SlidingDrawer.  [dimension]
android:bufferType : Determines the minimum type that getText() will return.  [enum]
android:button : Drawable used for the button graphic (e.g. checkbox, radio button,  etc).  [reference]
android:cacheColorHint : Indicates that this list will always be drawn on top of solid,  single-color opaque background.  [color]
android:calendarViewShown : Whether the calendar view is shown.  [boolean]
android:capitalize : If set, specifies that this TextView has a textual input method  and should automatically capitalize what the user types. * Deprecated: Use inputType instead.  [enum]
android:checkMark : Drawable used for the check mark graphic.  [reference]
android:checked : Indicates the initial checked state of this button.  [boolean]
android:checkedButton : The id of the child radio button that should be checked by default  within this radio group.  [integer]
android:childDivider : Drawable or color that is used as a divider for children.  [color, reference]
android:childIndicator : Indicator shown beside the child View.  [reference]
android:childIndicatorLeft : The left bound for a child's indicator.  [dimension]
android:childIndicatorRight : The right bound for a child's indicator.  [dimension]
android:choiceMode : Defines the choice behavior for the view.  [enum]
class : Supply the name of the view class to instantiate
android:clickColor : Color of the outline of click feedback.  [color]
android:clickable : Defines whether this view reacts to click events.  [boolean]
android:clipChildren : Defines whether a child is limited to draw inside of its bounds  or not.  [boolean]
android:clipToPadding : Defines whether the ViewGroup will clip its drawing surface so  as to exclude the padding area.  [boolean]
android:collapseColumns : The zero-based index of the columns to collapse.  [string]
android:columnCount : The maxmimum number of columns to create when automatically positioning  children.  [integer]
android:columnOrderPreserved : When set to true, forces column boundaries to appear in the same  order as column indices.  [boolean]
android:columnWidth : Specifies the fixed width for each column.  [dimension]
android:completionHint : Defines the hint displayed in the drop down menu.  [string]
android:completionHintView : Defines the hint view displayed in the drop down menu.  [reference]
android:completionThreshold : Defines the number of characters that the user must type before  completion suggestions are displayed in a drop down menu.  [integer]
android:content : Identifier for the child that represents the drawer's content.  [reference]
android:contentDescription : Defines text that briefly describes content of the view.  [string]
android:cropToPadding : If true, the image will be cropped to fit within its padding.  [boolean]
android:cursorVisible : Makes the cursor visible (the default) or invisible.  [boolean]
android:dateTextAppearance : The text appearance for the calendar dates.  [reference]
android:descendantFocusability : Defines the relationship between the ViewGroup and its descendants  when looking for a View to take focus.  [enum]
android:dial : [reference]
android:digits : If set, specifies that this TextView has a numeric input method  and that these specific characters are the ones that it will  accept.  [string]
android:disableChildrenWhenDisabled : Whether this spinner should mark child views as enabled/disabled  when the spinner itself is enabled/disabled.  [boolean]
android:disabledAlpha : The alpha to apply to the indicator when disabled.  [float]
android:divider : Drawable to use as a vertical divider between buttons.
android:dividerHeight : Height of the divider.  [dimension]
android:dividerPadding : Size of padding on either end of a divider.  [dimension]
android:drawSelectorOnTop : When set to true, the selector will be drawn over the selected  item.  [boolean]
android:drawableBottom : The drawable to be drawn below the text.  [color, reference]
android:drawableEnd : The drawable to be drawn to the end of the text.  [color, reference]
android:drawableLeft : The drawable to be drawn to the left of the text.  [color, reference]
android:drawablePadding : The padding between the drawables and the text.  [dimension]
android:drawableRight : The drawable to be drawn to the right of the text.  [color, reference]
android:drawableStart : The drawable to be drawn to the start of the text.  [color, reference]
android:drawableTop : The drawable to be drawn above the text.  [color, reference]
android:drawingCacheQuality : Defines the quality of translucent drawing caches.  [enum]
android:dropDownAnchor : View to anchor the auto-complete dropdown to.  [reference]
android:dropDownHeight : Specifies the basic height of the dropdown.  [dimension, enum]
android:dropDownHorizontalOffset : Horizontal offset from the spinner widget for positioning the  dropdown in spinnerMode="dropdown".  [dimension]
android:dropDownSelector : List selector to use for spinnerMode="dropdown" display.  [color, reference]
android:dropDownVerticalOffset : Vertical offset from the spinner widget for positioning the dropdown  in spinnerMode="dropdown".  [dimension]
android:dropDownWidth : Width of the dropdown in spinnerMode="dropdown".  [dimension, enum]
android:duplicateParentState : When this attribute is set to true, the view gets its drawable  state (focused, pressed, etc.) from its direct parent rather  than from itself.  [boolean]
android:editable : If set, specifies that this TextView has an input method. * Deprecated: Use inputType instead.  [boolean]
android:editorExtras : Reference to an "input-extras" XML resource containing additional  data to supply to an input method, which is private to the implementation  of the input method.  [reference]
android:ellipsize : If set, causes words that are longer than the view is wide to  be ellipsized instead of broken in the middle.  [enum]
android:ems : Makes the TextView be exactly this many ems wide.  [integer]
android:enabled : Specifies whether the widget is enabled.  [boolean]
android:endYear : The last year (inclusive), for example "2010". * Deprecated: Use maxDate instead.  [integer]
android:entries : Reference to an array resource that will populate the Spinner.  [reference]
android:eventsInterceptionEnabled : Defines whether the overlay should intercept the motion events  when a gesture is recognized.  [boolean]
android:fadeDuration : Duration, in milliseconds, of the fade out effect after the user  is done drawing a gesture.  [integer]
android:fadeEnabled : Defines whether the gesture will automatically fade out after  being recognized.  [boolean]
android:fadeOffset : Time, in milliseconds, to wait before the gesture fades out after  the user is done drawing it.  [integer]
android:fadeScrollbars : Defines whether to fade out scrollbars when they are not in use.  [boolean]
android:fadingEdge : This attribute is deprecated and will be ignored as of API level  14 (ICE_CREAM_SANDWICH).  [flag]
android:fadingEdgeLength : Defines the length of the fading edges.  [dimension]
android:fastScrollAlwaysVisible : When set to true, the list will always show the fast scroll interface.  [boolean]
android:fastScrollEnabled : Enables the fast scroll thumb that can be dragged to quickly  scroll through the list.  [boolean]
android:fillViewport : Defines whether the scrollview should stretch its content to  fill the viewport.  [boolean]
android:filterTouchesWhenObscured : Specifies whether to filter touches when the view's window is  obscured by another visible window.  [boolean]
android:firstDayOfWeek : The first day of week according to java.util.Calendar.  [integer]
android:fitsSystemWindows : Boolean internal attribute to adjust view layout based on system  windows such as the status bar.  [boolean]
android:flipInterval : [integer]
android:focusable : Boolean that controls whether a view can take focus.  [boolean]
android:focusableInTouchMode : Boolean that controls whether a view can take focus while in  touch mode.  [boolean]
android:focusedMonthDateColor : The color for the dates of the focused month.  [color, reference]
android:fontFamily : Font family (named by string) for the text.  [string]
android:footerDividersEnabled : When set to false, the ListView will not draw the divider before  each footer view.  [boolean]
android:foreground : Defines the drawable to draw over the content.  [color, reference]
android:foregroundGravity : Defines the gravity to apply to the foreground drawable.  [flag]
android:foregroundInsidePadding : Defines whether the foreground drawable should be drawn inside  the padding.  [boolean]
android:format : Format string: if specified, the Chronometer will display this  string, with the first "%s" replaced by the current timer value  in "MM:SS" or "H:MM:SS" form.  [string]
android:freezesText : If set, the text view will include its current complete text  inside of its frozen icicle in addition to meta-data such as  the current cursor position.  [boolean]
android:gestureColor : Color used to draw a gesture.  [color]
android:gestureStrokeAngleThreshold : Minimum curve angle a stroke must contain before it is recognized  as a gesture.  [float]
android:gestureStrokeLengthThreshold : Minimum length of a stroke before it is recognized as a gesture.  [float]
android:gestureStrokeSquarenessThreshold : Squareness threshold of a stroke before it is recognized as a  gesture.  [float]
android:gestureStrokeType : Defines the type of strokes that define a gesture.  [enum]
android:gestureStrokeWidth : Width of the stroke used to draw the gesture.  [float]
android:gravity : Specifies how to place the content of an object, both on the  x- and y-axis, within the object itself.  [flag]
android:groupIndicator : Indicator shown beside the group View.  [reference]
android:hand_hour : [reference]
android:hand_minute : [reference]
android:handle : Identifier for the child that represents the drawer's handle.  [reference]
android:hapticFeedbackEnabled : Boolean that controls whether a view should have haptic feedback  enabled for events such as long presses.  [boolean]
android:headerDividersEnabled : When set to false, the ListView will not draw the divider after  each header view.  [boolean]
android:height : Makes the TextView be exactly this many pixels tall.  [dimension]
android:hint : Hint text to display when the text is empty.  [string]
android:horizontalSpacing : Defines the default horizontal spacing between columns.  [dimension]
android:iconifiedByDefault : The default state of the SearchView.  [boolean]
android:id : Supply an identifier name for the top-level view, to later retrieve  it with View.findViewById() or Activity.findViewById().  [reference]
android:ignoreGravity : Indicates what view should not be affected by gravity.  [reference]
android:imeActionId : Supply a value for EditorInfo.actionId used when an input method  is connected to the text view.  [integer]
android:imeActionLabel : Supply a value for EditorInfo.actionLabel used when an input  method is connected to the text view.  [string]
android:imeOptions : Additional features you can enable in an IME associated with  an editor to improve the integration with your application.  [flag]
android:importantForAccessibility : Controls how this View is important for accessibility which is  if it fires accessibility events and if it is reported to accessibility  services that query the screen.  [integer, enum]
android:inAnimation : Identifier for the animation to use when a view is shown.  [reference]
android:includeFontPadding : Leave enough room for ascenders and descenders instead of using  the font ascent and descent strictly.  [boolean]
android:indeterminate : Allows to enable the indeterminate mode.  [boolean]
android:indeterminateBehavior : Defines how the indeterminate mode should behave when the progress  reaches max.  [enum]
android:indeterminateDrawable : Drawable used for the indeterminate mode.  [reference]
android:indeterminateDuration : Duration of the indeterminate animation.  [integer]
android:indeterminateOnly : Restricts to ONLY indeterminate mode (state-keeping progress  mode will not work).  [boolean]
android:indicatorLeft : The left bound for an item's indicator.  [dimension]
android:indicatorRight : The right bound for an item's indicator.  [dimension]
android:inflatedId : Overrides the id of the inflated View with this value.  [reference]
android:inputMethod : If set, specifies that this TextView should use the specified  input method (specified by fully-qualified class name). * Deprecated: Use inputType instead.  [string]
android:inputType : The type of data being placed in a text field, used to help an  input method decide how to let the user enter text.  [flag]
android:interpolator : [reference]
android:isIndicator : Whether this rating bar is an indicator (and non-changeable by  the user).  [boolean]
android:isScrollContainer : Set this if the view will serve as a scrolling container, meaing  that it can be resized to shrink its overall window so that there  will be space for an input method.  [boolean]
android:keepScreenOn : Controls whether the view's window should keep the screen on  while visible.  [boolean]
android:layerType : Specifies the type of layer backing this view.  [enum]
layout : [reference]. * Required.
android:layoutAnimation : Defines the layout animation to use the first time the ViewGroup  is laid out.  [reference]
android:layoutDirection : Defines the direction of layout drawing.  [enum]
android:lineSpacingExtra : Extra spacing between lines of text.  [dimension]
android:lineSpacingMultiplier : Extra spacing between lines of text, as a multiplier.  [float]
android:lines : Makes the TextView be exactly this many lines tall.  [integer]
android:linksClickable : If set to false, keeps the movement method from being set to  the link movement method even if autoLink causes links to be  found.  [boolean]
android:listSelector : Drawable used to indicate the currently selected item in the  list.  [color, reference]
android:longClickable : Defines whether this view reacts to long click events.  [boolean]
android:loopViews : Defines whether the animator loops to the first view once it  has reached the end of the list.  [boolean]
android:marqueeRepeatLimit : The number of times to repeat the marquee animation.  [integer, enum]
android:max : Defines the maximum value the progress can take.  [integer]
android:maxDate : The minimal date shown by this calendar view in mm/dd/yyyy format.  [string]
android:maxEms : Makes the TextView be at most this many ems wide.  [integer]
android:maxHeight : An optional argument to supply a maximum height for this view.  [dimension]
android:maxLength : Set an input filter to constrain the text length to the specified  number.  [integer]
android:maxLines : Makes the TextView be at most this many lines tall.  [integer]
android:maxWidth : An optional argument to supply a maximum width for this view.  [dimension]
android:measureAllChildren : Determines whether to measure all children or just those in the  VISIBLE or INVISIBLE state when measuring.  [boolean]
android:measureWithLargestChild : When set to true, all children with a weight will be considered  having the minimum size of the largest child.  [boolean]
android:minDate : The minimal date shown by this calendar view in mm/dd/yyyy format.  [string]
android:minEms : Makes the TextView be at least this many ems wide.  [integer]
android:minHeight : Defines the minimum height of the view.
android:minLines : Makes the TextView be at least this many lines tall.  [integer]
android:minWidth : Defines the minimum width of the view.
android:mode : [enum]
android:name : Supply the name of the fragment class to instantiate.
android:nextFocusDown : Defines the next view to give focus to when the next focus is FOCUS_DOWN If the reference refers to a view that does not exist or is  part of a hierarchy that is invisible, a java.lang.RuntimeException will result when the  reference is accessed.  [reference]
android:nextFocusForward : Defines the next view to give focus to when the next focus is FOCUS_FORWARD If the reference refers to a view that does not exist or is  part of a hierarchy that is invisible, a java.lang.RuntimeException will result when the  reference is accessed.  [reference]
android:nextFocusLeft : Defines the next view to give focus to when the next focus is FOCUS_LEFT.  [reference]
android:nextFocusRight : Defines the next view to give focus to when the next focus is FOCUS_RIGHT If the reference refers to a view that does not exist or is  part of a hierarchy that is invisible, a java.lang.RuntimeException will result when the  reference is accessed.  [reference]
android:nextFocusUp : Defines the next view to give focus to when the next focus is FOCUS_UP If the reference refers to a view that does not exist or is  part of a hierarchy that is invisible, a java.lang.RuntimeException will result when the  reference is accessed.  [reference]
android:numColumns : Defines how many columns to show.  [integer, enum]
android:numStars : The number of stars (or rating items) to show.  [integer]
android:numeric : If set, specifies that this TextView has a numeric input method. * Deprecated: Use inputType instead.  [flag]
android:onClick : Name of the method in this View's context to invoke when the  view is clicked.  [string]
android:orientation : Should the layout be a column or a row? Use "horizontal" for  a row, "vertical" for a column.  [enum]
android:outAnimation : Identifier for the animation to use when a view is hidden.  [reference]
android:overScrollFooter : Drawable to draw below list content.  [color, reference]
android:overScrollHeader : Drawable to draw above list content.  [color, reference]
android:overScrollMode : Defines over-scrolling behavior.  [enum]
android:padding : Sets the padding, in pixels, of all four edges.  [dimension]
android:paddingBottom : Sets the padding, in pixels, of the bottom edge; see padding.  [dimension]
android:paddingEnd : Sets the padding, in pixels, of the end edge; see padding.  [dimension]
android:paddingLeft : Sets the padding, in pixels, of the left edge; see padding.  [dimension]
android:paddingRight : Sets the padding, in pixels, of the right edge; see padding.  [dimension]
android:paddingStart : Sets the padding, in pixels, of the start edge; see padding.  [dimension]
android:paddingTop : Sets the padding, in pixels, of the top edge; see padding.  [dimension]
android:password : Whether the characters of the field are displayed as password  dots instead of themselves. * Deprecated: Use inputType instead.  [boolean]
android:persistentDrawingCache : Defines the persistence of the drawing cache.  [flag]
android:phoneNumber : If set, specifies that this TextView has a phone number input  method. * Deprecated: Use inputType instead.  [boolean]
android:popupBackground : Background drawable to use for the dropdown in spinnerMode="dropdown".  [color, reference]
android:popupPromptView : Reference to a layout to use for displaying a prompt in the dropdown  for spinnerMode="dropdown".  [reference]
android:privateImeOptions : An addition content type description to supply to the input method  attached to the text view, which is private to the implementation  of the input method.  [string]
android:progress : Defines the default progress value, between 0 and max.  [integer]
android:progressDrawable : Drawable used for the progress mode.  [reference]
android:prompt : The prompt to display when the spinner's dialog is shown.  [reference]
android:queryHint : An optional query hint string to be displayed in the empty query  field.  [string]
android:quickContactWindowSize : [enum]
android:rating : The rating to set by default.  [float]
android:requiresFadingEdge : Defines which edges should be faded on scrolling.  [flag]
android:resOutColor : Color of the res-out outline.  [color]
android:rotation : rotation of the view, in degrees.  [float]
android:rotationX : rotation of the view around the x axis, in degrees.  [float]
android:rotationY : rotation of the view around the y axis, in degrees.  [float]
android:rowCount : The maxmimum number of rows to create when automatically positioning  children.  [integer]
android:rowOrderPreserved : When set to true, forces row boundaries to appear in the same  order as row indices.  [boolean]
android:saveEnabled : If unset, no state will be saved for this view when it is being  frozen.  [boolean]
android:scaleType : Controls how the image should be resized or moved to match the  size of this ImageView.  [enum]
android:scaleX : scale of the view in the x direction.  [float]
android:scaleY : scale of the view in the y direction.  [float]
android:scrollHorizontally : Whether the text is allowed to be wider than the view (and therefore  can be scrolled horizontally).  [boolean]
android:scrollX : The initial horizontal scroll offset, in pixels.  [dimension]
android:scrollY : The initial vertical scroll offset, in pixels.  [dimension]
android:scrollbarAlwaysDrawHorizontalTrack : Defines whether the horizontal scrollbar track should always  be drawn.  [boolean]
android:scrollbarAlwaysDrawVerticalTrack : Defines whether the vertical scrollbar track should always be  drawn.  [boolean]
android:scrollbarDefaultDelayBeforeFade : Defines the delay in milliseconds that a scrollbar waits before  fade out.  [integer]
android:scrollbarFadeDuration : Defines the delay in milliseconds that a scrollbar takes to fade  out.  [integer]
android:scrollbarSize : Sets the width of vertical scrollbars and height of horizontal  scrollbars.  [dimension]
android:scrollbarStyle : Controls the scrollbar style and position.  [enum]
android:scrollbarThumbHorizontal : Defines the horizontal scrollbar thumb drawable.  [reference]
android:scrollbarThumbVertical : Defines the vertical scrollbar thumb drawable.  [reference]
android:scrollbarTrackHorizontal : Defines the horizontal scrollbar track drawable.  [reference]
android:scrollbarTrackVertical : Defines the vertical scrollbar track drawable.  [reference]
android:scrollbars : Defines which scrollbars should be displayed on scrolling or  not.  [flag]
android:scrollingCache : When set to true, the list uses a drawing cache during scrolling.  [boolean]
android:secondaryProgress : Defines the secondary progress value, between 0 and max.  [integer]
android:selectAllOnFocus : If the text is selectable, select it all when the view takes  focus.  [boolean]
android:selectedDateVerticalBar : Drawable for the vertical bar shown at the beginning and at the  end of the selected date.  [reference]
android:selectedWeekBackgroundColor : The background color for the selected week.  [color, reference]
android:shadowColor : Place a shadow of the specified color behind the text.  [color]
android:shadowDx : Horizontal offset of the shadow.  [float]
android:shadowDy : Vertical offset of the shadow.  [float]
android:shadowRadius : Radius of the shadow.  [float]
android:showDividers : Setting for which dividers to show.  [flag]
android:showWeekNumber : Whether do show week numbers.  [boolean]
android:shownWeekCount : The number of weeks to be shown.  [integer]
android:shrinkColumns : The zero-based index of the columns to shrink.  [string]
android:singleLine : Constrains the text to a single horizontally scrolling line instead  of letting it wrap onto multiple lines, and advances focus instead  of inserting a newline when you press the enter key. * Deprecated: This attribute is deprecated. Use "maxLines" instead  to change the layo...
android:smoothScrollbar : When set to true, the list will use a more refined calculation  method based on the pixels height of the items visible on screen.  [boolean]
android:soundEffectsEnabled : Boolean that controls whether a view should have sound effects  enabled for events such as clicking and touching.  [boolean]
android:spacing : [dimension]
android:spinnerMode : Display mode for spinner options.  [enum]
android:spinnersShown : Whether the spinners are shown.  [boolean]
android:splitMotionEvents : Sets whether this ViewGroup should split MotionEvents to separate  child views during touch event dispatch.  [boolean]
android:src : Sets a drawable as the content of this ImageView.  [color, reference]
android:stackFromBottom : Used by ListView and GridView to stack their content from the  bottom.  [boolean]
android:startYear : The first year (inclusive), for example "1940". * Deprecated: Use minDate instead.  [integer]
android:stepSize : The step size of the rating.  [float]
android:stretchColumns : The zero-based index of the columns to stretch.  [string]
android:stretchMode : Defines how columns should stretch to fill the available empty  space, if any.  [enum]
style : A reference to a custom style  [reference]
android:switchMinWidth : Minimum width for the switch component  [dimension]
android:switchPadding : Minimum space between the switch and caption text  [dimension]
android:switchTextAppearance : TextAppearance style for text displayed on the switch thumb.  [reference]
android:tabLayout : Layout used to organize each tab's content.  [reference]
android:tabStripEnabled : Determines whether the strip under the tab indicators is drawn  or not.  [boolean]
android:tabStripLeft : Drawable used to draw the left part of the strip underneath the  tabs.  [reference]
android:tabStripRight : Drawable used to draw the right part of the strip underneath  the tabs.  [reference]
android:tag : Supply a tag for the top-level view containing a String, to be  retrieved later with View.getTag() or searched for with View.findViewWithTag() .  [string]
android:text : Text to display.  [string]
android:textAlignment : Alignment of the text.  [integer, enum]
android:textAllCaps : Present the text in ALL CAPS.  [boolean]
android:textAppearance : Base text color, typeface, size, and style.  [reference]
android:textColor : Text color.  [color, reference]
android:textColorHighlight : Color of the text selection highlight.  [color, reference]
android:textColorHint : Color of the hint text.  [color, reference]
android:textColorLink : Text color for links.  [color, reference]
android:textCursorDrawable : Reference to a drawable that will be drawn under the insertion  cursor.  [reference]
android:textDirection : Direction of the text.  [integer, enum]
android:textEditNoPasteWindowLayout : Variation of textEditPasteWindowLayout displayed when the clipboard  is empty.  [reference]
android:textEditPasteWindowLayout : The layout of the view that is displayed on top of the cursor  to paste inside a TextEdit field.  [reference]
android:textEditSideNoPasteWindowLayout : Variation of textEditSidePasteWindowLayout displayed when the  clipboard is empty.  [reference]
android:textEditSidePasteWindowLayout : Used instead of textEditPasteWindowLayout when the window is  moved on the side of the insertion cursor because it would be  clipped if it were positioned on top.  [reference]
android:textEditSuggestionItemLayout : Layout of the TextView item that will populate the suggestion  popup window.  [reference]
android:textFilterEnabled : When set to true, the list will filter results as the user types.  [boolean]
android:textIsSelectable : Indicates that the content of a non-editable text can be selected.  [boolean]
android:textOff : The text for the button when it is not checked.  [string]
android:textOn : The text for the button when it is checked.  [string]
android:textScaleX : Sets the horizontal scaling factor for the text.  [float]
android:textSelectHandle : Reference to a drawable that will be used to display a text selection  anchor for positioning the cursor within text.  [reference]
android:textSelectHandleLeft : Reference to a drawable that will be used to display a text selection  anchor on the left side of a selection region.  [reference]
android:textSelectHandleRight : Reference to a drawable that will be used to display a text selection  anchor on the right side of a selection region.  [reference]
android:textSize : Size of the text.  [dimension]
android:textStyle : Style (bold, italic, bolditalic) for the text.  [flag]
android:thumb : Drawable to use as the "thumb" that switches back and forth.  [reference]
android:thumbOffset : An offset for the thumb that allows it to extend out of the range  of the track.  [dimension]
android:thumbTextPadding : Amount of padding on either side of text within the switch thumb.  [dimension]
android:tint : Set a tinting color for the image.  [color]
android:topOffset : Extra offset for the handle at the top of the SlidingDrawer.  [dimension]
android:track : Drawable to use as the "track" that the switch thumb slides within.  [reference]
android:transcriptMode : Sets the transcript mode for the list.  [enum]
android:transformPivotX : x location of the pivot point around which the view will rotate  and scale.  [dimension]
android:transformPivotY : y location of the pivot point around which the view will rotate  and scale.  [dimension]
android:translationX : translation in x of the view.  [dimension]
android:translationY : translation in y of the view.  [dimension]
android:typeface : Typeface (normal, sans, serif, monospace) for the text.  [enum]
android:uncertainGestureColor : Color used to draw the user's strokes until we are sure it's  a gesture.  [color]
android:unfocusedMonthDateColor : The color for the dates of an unfocused month.  [color, reference]
android:unselectedAlpha : Sets the alpha on the items that are not selected.  [float]
android:useDefaultMargins : When set to true, tells GridLayout to use default margins when  none are specified in a view's layout parameters.  [boolean]
android:verticalScrollbarPosition : Determines which side the vertical scroll bar should be placed  on.  [enum]
android:verticalSpacing : Defines the default vertical spacing between rows.  [dimension]
android:visibility : Controls the initial visibility of the view.  [enum]
android:weekDayTextAppearance : The text appearance for the week day abbreviation of the calendar  header.  [reference]
android:weekNumberColor : The color for the week numbers.  [color, reference]
android:weekSeparatorLineColor : The color for the separator line between weeks.  [color, reference]
android:weightSum : Defines the maximum weight sum.  [float]
android:width : Makes the TextView be exactly this many pixels wide.  [dimension]
