<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2013 The Android Open Source Project

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<sample>
    <name>HorizontalPaging</name>
    <group>UI</group>
    <package>com.example.android.horizontalpaging</package>

    <!-- change minSdk if needed-->
    <minSdk>11</minSdk>

    <strings>
        <intro>
            <![CDATA[
            This sample demonstrates how to implement horizontal paging between fragments in
            applications that use ActionBar, using a ViewPager widget.
            ]]>
        </intro>
    </strings>

    <template src="base"/>

    <metadata>
        <status>DEPRECATED</status>
        <categories>UI</categories>
        <technologies>Android</technologies>
        <languages>Java</languages>
        <solutions>Mobile</solutions>
        <level>INTERMEDIATE</level>
        <icon>screenshots/icon-web.png</icon>
        <screenshots>
            <img>screenshots/1-tab1.png</img>
            <img>screenshots/2-tab2.png</img>
        </screenshots>
        <api_refs>
            <android>android.support.v4.view.ViewPager</android>
            <android>android.support.v4.app.FragmentPagerAdapter</android>
        </api_refs>
        <description>
This sample shows how to implement tabs, using Fragments and a ViewPager.
        </description>
        <intro>
This sample implements tabs using the deprecated [ActionBar.TabListener][1]. It uses [ViewPager][2] and
[FragmentPagerAdapter][3] to handle swiping between tabs and displaying the selected tab content.


1. Create an Activity that extends [FragmentActivity][4], with a [ViewPager][2] for its layout.
2. Implement [ActionBar.TabListener][1] interface.
3. Create a class that extends [FragmentPagerAdapter][3] and override its `getItem(int position)`,
`getCount()` and `getPageTitle(int position)` methods.
4. In the `onCreate(Bundle savedInstanceState)` method of your activity, set navigation mode to tabs for the
ActionBar using `setNavigationMode(ActionBar.NAVIGATION_MODE_TABS)`. Note: This is DEPRECATED as of Android
Lollipop.
5. Set your custom [FragmentPagerAdapter][3] on your [ViewPager][2].
6. Implement `setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener())` on your [ViewPager][2] to
know the selected tab, so you can update your ActionBar with `setSelectedNavigationItem(position)`.

[1]: http://developer.android.com/reference/android/support/v7/app/ActionBar.TabListener.html
[2]: http://developer.android.com/reference/android/support/v4/view/ViewPager.html
[3]: http://developer.android.com/reference/android/support/v4/app/FragmentPagerAdapter.html
[4]: http://developer.android.com/reference/android/support/v4/app/FragmentActivity.html
        </intro>
    </metadata>

</sample>
