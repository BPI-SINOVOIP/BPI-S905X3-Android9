<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2013 The Android Open Source Project

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<sample>
    <name>BasicTransition</name>
    <group>UI</group>
    <package>com.example.android.basictransition</package>

    <!-- change minSdk if needed-->
    <minSdk>19</minSdk>

    <strings>
        <intro>
            <![CDATA[
	    This sample demonstrates the basic use of the transition framework introduced in KitKat.
	    Select each of the RadioButtons to switch between the Scenes.
            ]]>
        </intro>
    </strings>

    <template src="base"/>
    <template src="FragmentView"/>
    <common src="logger"/>
    <common src="activities"/>
    <common src="view"/>

    <metadata>
        <status>PUBLISHED</status>
        <categories>Transition, UI</categories>
        <technologies>Android</technologies>
        <languages>Java</languages>
        <solutions>Mobile</solutions>
        <level>ADVANCED</level>
        <icon>Application/src/main/big_icon.png</icon>
        <screenshots>
            <img>screenshots/main.png</img>
        </screenshots>
        <api_refs>
            <android>android.transition.TransitionManager</android>
            <android>android.transition.Transition</android>
            <android>android.transition.Scene</android>
        </api_refs>

        <description>
<![CDATA[
A basic app showing how to use the Transition framework introduced in
KitKat. The app shows radioboxes to select between different Scenes,
and uses various ways to transition between them.
]]>
        </description>

        <intro>
<![CDATA[
A Scene is an encapsulation of the state of a view hierarchy,
including the views in that hierarchy and the various values
(layout-related and otherwise) that those views have. A scene can be
defined by a layout hierarchy directly or by code which sets up the
scene dynamically as it is entered.

A Transition is a mechanism to automatically animate changes that
occur when a new scene is entered. Some transition capabilities are
automatic. That is, entering a scene may cause animations to run which
fade out views that go away, changeBounds and resize existing views
that change, and fade in views that become visible. There are
additional transitions that can animate other attributes, such as
color changes, and which can optionally be specified to take place
during particular scene changes. Finally, developers can define their
own Transition subclasses which monitor particular property changes
and which run custom animations when those properties change values.

TransitionManager is used to specify custom transitions for particular
scene changes, and to cause scene changes with specific transitions to
take place.
]]>
        </intro>
    </metadata>

</sample>
