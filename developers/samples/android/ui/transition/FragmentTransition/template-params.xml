<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2013 The Android Open Source Project

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<sample>
    <name>FragmentTransition</name>
    <group>UI</group>
    <package>com.example.android.fragmenttransition</package>

    <minSdk>19</minSdk>

    <strings>
        <intro>
            <![CDATA[
	    This sample demonstrates how to start a transition right after a fragment transaction.
            ]]>
        </intro>
    </strings>

    <template src="base"/>
    <template src="FragmentView"/>
    <common src="logger"/>
    <common src="activities"/>
    <common src="view"/>

    <metadata>
        <status>PUBLISHED</status>
        <categories>Transition, UI</categories>
        <technologies>Android</technologies>
        <languages>Java</languages>
        <solutions>Mobile</solutions>
        <level>ADVANCED</level>
        <icon>screenshots/icon-web.png</icon>
        <screenshots>
            <img>screenshots/grid.png</img>
            <img>screenshots/main.png</img>
        </screenshots>
        <api_refs>
            <android>android.transition.TransitionManager</android>
            <android>android.transition.Transition</android>
            <android>android.transition.Scene</android>
        </api_refs>

        <description>
<![CDATA[
This sample demonstrates how to start a Transition after a Fragment Transaction.
]]>
        </description>

        <intro>
<![CDATA[
This sample uses [the Transition framework][1] to show a nice visual effect on
Fragment Transaction.

Animation for fragment _transaction_ can be customized by overriding
[onCreateAnimation][2]. In this sample, we set up an AnimationListener
for this Animation, and start our Transition on [onAnimationEnd][3].

Transition is started by calling [TransitionManager.go][4]. We don't
instantiate a Scene for the initial state of Transition, as we never
go back. One thing we need to be careful here is that we need to
populate the content of Views after starting the Transition.

[1]: https://developer.android.com/reference/android/transition/package-summary.html
[2]: http://developer.android.com/reference/android/support/v4/app/Fragment.html#onCreateAnimation(int, boolean, int)
[3]: http://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html#onAnimationEnd(android.view.animation.Animation)
[4]: http://developer.android.com/reference/android/transition/TransitionManager.html#go(android.transition.Scene)
]]>
        </intro>
    </metadata>

</sample>
