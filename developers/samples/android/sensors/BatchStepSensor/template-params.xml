<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2013 The Android Open Source Project

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<sample>
    <name>BatchStepSensor</name>
    <group>Sensors</group>
    <package>com.example.android.batchstepsensor</package>
    <!-- change minSdk if needed-->
    <minSdk>19</minSdk>
    <strings>
        <intro>
            <![CDATA[
            <p>This sample demonstrates the use of the two step sensors (step detector and counter) and
            sensor batching.</p>
            <p>It shows how to register a SensorEventListener with and without
            batching and shows how these events are received.</p>
            <p>The Step Detector sensor fires an
            event when a step is detected, while the step counter returns the total number of
            steps since a listener was first registered for this sensor.
            Both sensors only count steps while a listener is registered. This sample only covers the
            basic case, where a listener is only registered while the app is running. Likewise,
            batched sensors can be used in the background (when the CPU is suspended), which
            requires manually flushing the sensor event queue before it overflows, which is not
            covered in this sample.</p>
            ]]>
        </intro>
    </strings>

    <template src="base"/>
    <template src="CardStream"/>
    <common src="logger"/>
    <common src="activities"/>
    <metadata>
    <status>PUBLISHED</status>
    <categories>Sensors</categories>
    <technologies>Android</technologies>
    <languages>Java</languages>
    <solutions>Mobile</solutions>
    <level>ADVANCED</level>
    <icon>screenshots/big_icon.png</icon>
    <screenshots>
        <img>screenshots/screenshot1.png</img>
        <img>screenshots/screenshot2.png</img>
        <img>screenshots/screenshot3.png</img>
        <img>screenshots/screenshot4.png</img>
        <img>screenshots/screenshot5.png</img>
        <img>screenshots/screenshot6.png</img>
      </screenshots>
    <api_refs>
        <android>android.hardware.Sensor</android>
        <android>android.hardware.SensorEvent</android>
        <android>android.hardware.SensorEventListener</android>
        <android>android.hardware.SensorManager</android>
    </api_refs>
    <description>
<![CDATA[
Sample demonstrating how to set up SensorEventListeners for step
detectors and step counters.
]]>
    </description>

    <intro>
<![CDATA[
This sample demonstrates the use of the two step [sensors][1] (step detector and counter) and
sensor batching.

It shows how to register a [SensorEventListener][2] with and without
batching and shows how these events are received.

The Step Detector sensor fires an
event when a step is detected, while the step counter returns the total number of
steps since a listener was first registered for this sensor.

Both sensors only count steps while a listener is registered. This sample only covers the
basic case, where a listener is only registered while the app is running. Likewise,
batched sensors can be used in the background (when the CPU is suspended), which
requires manually flushing the [sensor event][3] queue before it overflows, which is not
covered in this sample.

[1]: https://developer.android.com/reference/android/hardware/Sensor.html
[2]: https://developer.android.com/reference/android/hardware/SensorEventListener.html
[3]: https://developer.android.com/reference/android/hardware/SensorEvent.html
]]>
    </intro>
</metadata>

</sample>
