From 23a9d5ba9e0e7c0b2891dee767d9546a166249ea Mon Sep 17 00:00:00 2001
From: Sam Wu <yihui.wu@amlogic.com>
Date: Mon, 5 Nov 2018 01:00:55 +0800
Subject: [PATCH] secureboot:compile: support compile out signed target [2/2]

PD#TV-546

Problem:
reference sdk not support compiling out signed target for secure boot

Solution:
Update Makefile to support signing out ota_zip/aml_upgrade/aml_fastboot targets
1,suffix .encrypt for boot.img/recovery.img;
2,call aml-secureboot-sign-kernel after boot/recovery target created.
3,INSTALLED_AML_ENC_RADIOIMAGE_TARGET gen boot/recovery to IMAGES.

Verify:
Verified on ampere and franklin.

Change-Id: I747237f3b949fa08ff4e9c6dcb513cfa7b59dc35
Signed-off-by: Sam Wu <yihui.wu@amlogic.com>
---
 core/Makefile | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/core/Makefile b/core/Makefile
index 0a2f6e39d..6b8d38902 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -384,6 +384,9 @@ build_desc :=
 
 ifeq (,$(filter true, $(TARGET_NO_KERNEL) $(TARGET_NO_RECOVERY)))
 INSTALLED_RECOVERYIMAGE_TARGET := $(PRODUCT_OUT)/recovery.img
+ifeq ($(PRODUCT_BUILD_SECURE_BOOT_IMAGE_DIRECTLY),true)
+	INSTALLED_RECOVERYIMAGE_TARGET := $(INSTALLED_RECOVERYIMAGE_TARGET).encrypt
+endif# ifeq ($(PRODUCT_BUILD_SECURE_BOOT_IMAGE_DIRECTLY),true)
 else
 INSTALLED_RECOVERYIMAGE_TARGET :=
 endif
@@ -696,6 +699,9 @@ ramdisk-nodeps: $(MKBOOTFS) | $(MINIGZIP)
 	$(hide) $(MKBOOTFS) -d $(TARGET_OUT) $(TARGET_ROOT_OUT) | $(MINIGZIP) > $(INSTALLED_RAMDISK_TARGET)
 
 INSTALLED_BOOTIMAGE_TARGET := $(PRODUCT_OUT)/boot.img
+ifeq ($(PRODUCT_BUILD_SECURE_BOOT_IMAGE_DIRECTLY),true)
+	INSTALLED_BOOTIMAGE_TARGET := $(INSTALLED_BOOTIMAGE_TARGET).encrypt
+endif# ifeq ($(PRODUCT_BUILD_SECURE_BOOT_IMAGE_DIRECTLY),true)
 
 ifneq ($(strip $(TARGET_NO_KERNEL)),true)
 
@@ -752,6 +758,7 @@ else ifeq (true,$(BOARD_AVB_ENABLE)) # TARGET_BOOTIMAGE_USE_EXT2 != true
 $(INSTALLED_BOOTIMAGE_TARGET): $(MKBOOTIMG) $(AVBTOOL) $(INTERNAL_BOOTIMAGE_FILES) $(BOARD_AVB_BOOT_KEY_PATH)
 	$(call pretty,"Target boot image: $@")
 	$(hide) $(MKBOOTIMG) $(INTERNAL_BOOTIMAGE_ARGS) $(INTERNAL_MKBOOTIMG_VERSION_ARGS) $(BOARD_MKBOOTIMG_ARGS) --output $@
+	$(hide) $(call aml-secureboot-sign-kernel, $@)
 	$(hide) $(call assert-max-image-size,$@,$(call get-hash-image-max-size,$(BOARD_BOOTIMAGE_PARTITION_SIZE)))
 	$(hide) $(AVBTOOL) add_hash_footer \
 	  --image $@ \
@@ -805,6 +812,7 @@ else # PRODUCT_SUPPORTS_VBOOT != true
 $(INSTALLED_BOOTIMAGE_TARGET): $(MKBOOTIMG) $(INTERNAL_BOOTIMAGE_FILES)
 	$(call pretty,"Target boot image: $@")
 	$(hide) $(MKBOOTIMG) $(INTERNAL_BOOTIMAGE_ARGS) $(INTERNAL_MKBOOTIMG_VERSION_ARGS) $(BOARD_MKBOOTIMG_ARGS) --output $@
+	$(hide) $(call aml-secureboot-sign-kernel, $@)
 	$(hide) $(call assert-max-image-size,$@,$(BOARD_BOOTIMAGE_PARTITION_SIZE))
 
 .PHONY: bootimage-nodeps
@@ -1397,6 +1405,7 @@ define build-recoveryimage-target
   )
   $(if $(filter true,$(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_SUPPORTS_VBOOT)), \
     $(VBOOT_SIGNER) $(FUTILITY) $(1).unsigned $(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_VBOOT_SIGNING_KEY).vbpubk $(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_VBOOT_SIGNING_KEY).vbprivk $(PRODUCTS.$(INTERNAL_PRODUCT).PRODUCT_VBOOT_SIGNING_SUBKEY).vbprivk $(1).keyblock $(1))
+  $(hide) $(call aml-secureboot-sign-kernel, $(1))
   $(if $(filter true,$(BOARD_USES_RECOVERY_AS_BOOT)), \
     $(hide) $(call assert-max-image-size,$(1),$(call get-hash-image-max-size,$(BOARD_BOOTIMAGE_PARTITION_SIZE))), \
     $(hide) $(call assert-max-image-size,$(1),$(call get-hash-image-max-size,$(BOARD_RECOVERYIMAGE_PARTITION_SIZE))))
@@ -2614,6 +2623,12 @@ endif # BOARD_USES_RECOVERY_AS_BOOT
 	$(hide) $(foreach t,$(INSTALLED_RADIOIMAGE_TARGET),\
 	            mkdir -p $(zip_root)/RADIO; \
 	            cp $(t) $(zip_root)/RADIO/$(notdir $(t));)
+ifeq ($(PRODUCT_BUILD_SECURE_BOOT_IMAGE_DIRECTLY),true)
+	$(hide) $(foreach t,$(INSTALLED_AML_ENC_RADIOIMAGE_TARGET),\
+	            mkdir -p $(zip_root)/IMAGES; \
+	            cp $(t) $(zip_root)/RADIO/$(notdir $(basename $(t))); \
+	            cp $(t) $(zip_root)/IMAGES/$(notdir $(basename $(t)));)
+endif#ifeq ($(PRODUCT_BUILD_SECURE_BOOT_IMAGE_DIRECTLY),true)
 	@# Contents of the system image
 	$(hide) $(call package_files-copy-root, \
 		$(SYSTEMIMAGE_SOURCE_DIR),$(zip_root)/SYSTEM)
-- 
2.18.0

