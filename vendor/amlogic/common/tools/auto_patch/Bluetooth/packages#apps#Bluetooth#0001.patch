From ddd62281acedc90f8cbf0a4b25b244e7adba6ddd Mon Sep 17 00:00:00 2001
From: Kuibao Zhang <kuibao.zhang@amlogic.com>
Date: Tue, 17 Apr 2018 20:03:21 +0800
Subject: [PATCH] BT: a2dp sink

PD#164511

Change-Id: If867ea5a3ed50993b2faad98dae9286353f60c68
---
 .../android/bluetooth/a2dpsink/A2dpSinkStreamHandler.java  | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/src/com/android/bluetooth/a2dpsink/A2dpSinkStreamHandler.java b/src/com/android/bluetooth/a2dpsink/A2dpSinkStreamHandler.java
index f442c49..0716339 100644
--- a/src/com/android/bluetooth/a2dpsink/A2dpSinkStreamHandler.java
+++ b/src/com/android/bluetooth/a2dpsink/A2dpSinkStreamHandler.java
@@ -51,7 +51,7 @@ import java.util.List;
  * restored.
  */
 public class A2dpSinkStreamHandler extends Handler {
-    private static final boolean DBG = false;
+    private static final boolean DBG = true;
     private static final String TAG = "A2dpSinkStreamHandler";
 
     // Configuration Variables
@@ -108,9 +108,15 @@ public class A2dpSinkStreamHandler extends Handler {
         if (DBG) {
             Log.d(TAG, " process message: " + message.what);
             Log.d(TAG, " audioFocus =  " + mAudioFocus);
+            Log.d(TAG, " AUDIOFOCUS_NONE =  " + AudioManager.AUDIOFOCUS_NONE);
         }
         switch (message.what) {
             case SRC_STR_START:
+                if (mAudioFocus == AudioManager.AUDIOFOCUS_NONE) {
+                   requestAudioFocus();
+                }
+                startAvrcpUpdates();
+                // Audio stream has started, stop it if we don't have focus.
                 mStreamAvailable = true;
                 // Always request audio focus if on TV.
                 if (isTvDevice()) {
@@ -133,9 +139,13 @@ public class A2dpSinkStreamHandler extends Handler {
                 break;
 
             case SNK_PLAY:
-                // Local play command, gain focus and start avrcp updates.
                 if (mAudioFocus == AudioManager.AUDIOFOCUS_NONE) {
                     requestAudioFocus();
+               }
+               startAvrcpUpdates();
+               // Local play command, gain focus and start avrcp updates.
+               if (mAudioFocus == AudioManager.AUDIOFOCUS_NONE) {
+                    requestAudioFocus();
                 }
                 startAvrcpUpdates();
                 break;
-- 
1.9.1

