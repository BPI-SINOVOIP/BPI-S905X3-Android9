# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/zvbi
pkglibdir = $(libdir)/zvbi
pkgincludedir = $(includedir)/zvbi
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src
DIST_COMMON = $(libzvbiinclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/aclocal-include.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/lib-ld.m4 $(top_srcdir)/m4/lib-link.m4 \
	$(top_srcdir)/m4/lib-prefix.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libzvbiincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libzvbi_chains_la_LIBADD =
am_libzvbi_chains_la_OBJECTS = chains.lo io.lo misc.lo proxy-client.lo \
	proxy-msg.lo
libzvbi_chains_la_OBJECTS = $(am_libzvbi_chains_la_OBJECTS)
am_libzvbi_chains_la_rpath = -rpath $(libdir)
am__DEPENDENCIES_1 =
libzvbi_la_DEPENDENCIES = libzvbiinline.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__libzvbi_la_SOURCES_DIST = bcd.h bit_slicer.c bit_slicer.h cache.c \
	cache.h cache-priv.h dlist.h caption.c cc.h conv.c conv.h \
	dvb.h dvb_mux.c dvb_mux.h dvb_demux.c dvb_demux.h exp-html.c \
	exp-templ.c exp-txt.c exp-txt.h exp-vtx.c export.c export.h \
	format.h hamm.c hamm.h hamm-tables.h idl_demux.c idl_demux.h \
	intl-priv.h io.c io.h io-bktr.c io-dvb.c io-sim.c io-sim.h \
	io-v4l.c videodev.h io-v4l2.c videodev2.h io-v4l2k.c \
	videodev2k.h lang.c lang.h macros.h misc.c misc.h packet.c \
	teletext.c teletext_decoder.h vt.h page_table.c page_table.h \
	pfc_demux.c pfc_demux.h proxy-client.c proxy-client.h \
	raw_decoder.c raw_decoder.h sampling_par.c sampling_par.h \
	search.c search.h ure.c ure.h sliced_filter.c sliced_filter.h \
	tables.c tables.h network-table.h trigger.c trigger.h vbi.c \
	vbi.h event.h vps.c vps.h pdc.h wss.c wss.h xds_demux.c \
	xds_demux.h proxy-msg.c proxy-msg.h
am__objects_1 = proxy-msg.lo
am_libzvbi_la_OBJECTS = bit_slicer.lo cache.lo caption.lo conv.lo \
	dvb_mux.lo dvb_demux.lo exp-html.lo exp-templ.lo exp-txt.lo \
	exp-vtx.lo export.lo hamm.lo idl_demux.lo io.lo io-bktr.lo \
	io-dvb.lo io-sim.lo io-v4l.lo io-v4l2.lo io-v4l2k.lo lang.lo \
	misc.lo packet.lo teletext.lo page_table.lo pfc_demux.lo \
	proxy-client.lo raw_decoder.lo sampling_par.lo search.lo \
	ure.lo sliced_filter.lo tables.lo trigger.lo vbi.lo vps.lo \
	wss.lo xds_demux.lo $(am__objects_1)
libzvbi_la_OBJECTS = $(am_libzvbi_la_OBJECTS)
libzvbiinline_la_LIBADD =
am_libzvbiinline_la_OBJECTS = libzvbiinline_la-decoder.lo \
	libzvbiinline_la-exp-gfx.lo
libzvbiinline_la_OBJECTS = $(am_libzvbiinline_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libzvbi_chains_la_SOURCES) $(libzvbi_la_SOURCES) \
	$(libzvbiinline_la_SOURCES)
DIST_SOURCES = $(libzvbi_chains_la_SOURCES) \
	$(am__libzvbi_la_SOURCES_DIST) $(libzvbiinline_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
libzvbiincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libzvbiinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/gk/work/ics/external/zvbi-0.2.33/missing --run aclocal-1.9 -I m4
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/gk/work/ics/external/zvbi-0.2.33/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/gk/work/ics/external/zvbi-0.2.33/missing --run autoconf
AUTOHEADER = ${SHELL} /home/gk/work/ics/external/zvbi-0.2.33/missing --run autoheader
AUTOMAKE = ${SHELL} /home/gk/work/ics/external/zvbi-0.2.33/missing --run automake-1.9
AWK = gawk
BUILD_STATIC_LIB_FALSE = #
BUILD_STATIC_LIB_TRUE = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ENABLE_DVB_FALSE = #
ENABLE_DVB_TRUE = 
ENABLE_PROXY_FALSE = #
ENABLE_PROXY_TRUE = 
EXEEXT = 
F77 = 
FFLAGS = 
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_DOXYGEN = no
HAVE_DOXYGEN_FALSE = 
HAVE_DOXYGEN_TRUE = #
HAVE_GCC_C89_SUPPORT_FALSE = #
HAVE_GCC_C89_SUPPORT_TRUE = 
HAVE_GCC_C94_SUPPORT_FALSE = #
HAVE_GCC_C94_SUPPORT_TRUE = 
HAVE_GCC_C99_SUPPORT_FALSE = #
HAVE_GCC_C99_SUPPORT_TRUE = 
HAVE_GCC_LIMITS_FALSE = #
HAVE_GCC_LIMITS_TRUE = 
HAVE_GXX_CXX98_SUPPORT_FALSE = #
HAVE_GXX_CXX98_SUPPORT_TRUE = 
HAVE_X_FALSE = #
HAVE_X_TRUE = 
INSIDE_GNOME_COMMON_FALSE = 
INSIDE_GNOME_COMMON_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INTLLIBS = 
INTL_MACOSX_LIBS = 
LDFLAGS = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS =  -lpthread  -lm  -lpng -lz
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBZVBI_SO_VERSION = 13:1:13
LN_S = ln -s
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/gk/work/ics/external/zvbi-0.2.33/missing --run makeinfo
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = zvbi
PACKAGE_BUGREPORT = 
PACKAGE_NAME = zvbi
PACKAGE_STRING = zvbi 0.2.33
PACKAGE_TARNAME = zvbi
PACKAGE_VERSION = 0.2.33
PATH_SEPARATOR = :
POSUB = po
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
UNICODE_CFLAGS = 
UNICODE_LIBS = 
USE_NLS = yes
VERSION = 0.2.33
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS =  -lX11
X_PRE_LIBS =  -lSM -lICE
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/gk/work/ics/external/zvbi-0.2.33/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = dvb
structpr = structpr.pl
BUILT_SOURCES = \
	hamm-tables.h \
	libzvbi.h \
	network-table.h \
	version.h \
	_videodev.h \
	_videodev2.h \
	_videodev2k.h

EXTRA_DIST = \
	$(structpr) \
	hamm-tables.h \
	network-table.pl \
	$(BUILT_SOURCES) \
	wstfont2.xbm \
	ccfont2.xbm


# -D_GNU_SOURCE to declare pthread_rwlocks,
#   and asprintf if available.
AM_CPPFLAGS = \
	-I$(top_srcdir) \
	$(UNICODE_CFLAGS) \
	-D_REENTRANT \
	-D_GNU_SOURCE

#proxy_sources = 
proxy_sources = \
	proxy-msg.c \
	proxy-msg.h

#proxy_libs = 
proxy_libs = \
	libzvbi-chains.la

noinst_LTLIBRARIES = \
	libzvbiinline.la

libzvbiinline_la_SOURCES = \
	decoder.c decoder.h sliced.h \
	exp-gfx.c exp-gfx.h

libzvbiinline_la_CFLAGS = \
	--param max-inline-insns-single=50000 \
	--param large-function-insns=150000 \
	--param inline-unit-growth=30000 \
	--param large-function-growth=30000

lib_LTLIBRARIES = \
	libzvbi.la \
	$(proxy_libs)

libzvbi_la_SOURCES = \
	bcd.h \
	bit_slicer.c bit_slicer.h \
	cache.c cache.h cache-priv.h dlist.h \
	caption.c cc.h \
	conv.c conv.h \
	dvb.h \
	dvb_mux.c dvb_mux.h \
	dvb_demux.c dvb_demux.h \
	exp-html.c \
	exp-templ.c \
	exp-txt.c exp-txt.h \
	exp-vtx.c \
	export.c export.h format.h \
	hamm.c hamm.h hamm-tables.h \
	idl_demux.c idl_demux.h \
	intl-priv.h \
	io.c io.h \
	io-bktr.c \
	io-dvb.c \
	io-sim.c io-sim.h \
	io-v4l.c videodev.h \
	io-v4l2.c videodev2.h \
	io-v4l2k.c videodev2k.h \
	lang.c lang.h \
	macros.h \
	misc.c misc.h \
	packet.c teletext.c teletext_decoder.h vt.h \
	page_table.c page_table.h \
	pfc_demux.c pfc_demux.h \
	proxy-client.c proxy-client.h \
	raw_decoder.c raw_decoder.h \
	sampling_par.c sampling_par.h \
	search.c search.h ure.c ure.h \
	sliced_filter.c sliced_filter.h \
	tables.c tables.h network-table.h \
	trigger.c trigger.h \
	vbi.c vbi.h event.h \
	vps.c vps.h pdc.h \
	wss.c wss.h \
	xds_demux.c xds_demux.h \
	$(proxy_sources)

libzvbiincludedir = $(includedir)
libzvbiinclude_HEADERS = libzvbi.h
libzvbi_la_LIBADD = \
	libzvbiinline.la \
	$(LIBS) \
	$(UNICODE_LIBS)

libzvbi_la_LDFLAGS = -version-info $(LIBZVBI_SO_VERSION)
libzvbi_chains_la_SOURCES = \
	chains.c \
	io.c \
	misc.c \
	proxy-client.c \
	proxy-msg.c


# Note order matters.
#LIBZVBI_HDRS = \
#	macros.h \
#	bcd.h \
#	conv.h \
#	event.h \
#	format.h \
#	lang.h \
#	export.h \
#	cache.h \
#	search.h \
#	sliced.h \
#	decoder.h \
#	sampling_par.h \
#	dvb_demux.h \
#	dvb_mux.h \
#	idl_demux.h \
#	pfc_demux.h \
#	xds_demux.h \
#	io.h \
#	io-sim.h \
#	proxy-msg.h \
#	proxy-client.h \
#	exp-gfx.h \
#	exp-txt.h \
#	hamm.h \
#	cc.h \
#	teletext_decoder.h \
#	tables.h \
#	vps.h \
#	vbi.h

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libzvbi-chains.la: $(libzvbi_chains_la_OBJECTS) $(libzvbi_chains_la_DEPENDENCIES) 
	$(LINK) $(am_libzvbi_chains_la_rpath) $(libzvbi_chains_la_LDFLAGS) $(libzvbi_chains_la_OBJECTS) $(libzvbi_chains_la_LIBADD) $(LIBS)
libzvbi.la: $(libzvbi_la_OBJECTS) $(libzvbi_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libzvbi_la_LDFLAGS) $(libzvbi_la_OBJECTS) $(libzvbi_la_LIBADD) $(LIBS)
libzvbiinline.la: $(libzvbiinline_la_OBJECTS) $(libzvbiinline_la_DEPENDENCIES) 
	$(LINK)  $(libzvbiinline_la_LDFLAGS) $(libzvbiinline_la_OBJECTS) $(libzvbiinline_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bit_slicer.Plo
include ./$(DEPDIR)/cache.Plo
include ./$(DEPDIR)/caption.Plo
include ./$(DEPDIR)/chains.Plo
include ./$(DEPDIR)/conv.Plo
include ./$(DEPDIR)/dvb_demux.Plo
include ./$(DEPDIR)/dvb_mux.Plo
include ./$(DEPDIR)/exp-html.Plo
include ./$(DEPDIR)/exp-templ.Plo
include ./$(DEPDIR)/exp-txt.Plo
include ./$(DEPDIR)/exp-vtx.Plo
include ./$(DEPDIR)/export.Plo
include ./$(DEPDIR)/hamm.Plo
include ./$(DEPDIR)/idl_demux.Plo
include ./$(DEPDIR)/io-bktr.Plo
include ./$(DEPDIR)/io-dvb.Plo
include ./$(DEPDIR)/io-sim.Plo
include ./$(DEPDIR)/io-v4l.Plo
include ./$(DEPDIR)/io-v4l2.Plo
include ./$(DEPDIR)/io-v4l2k.Plo
include ./$(DEPDIR)/io.Plo
include ./$(DEPDIR)/lang.Plo
include ./$(DEPDIR)/libzvbiinline_la-decoder.Plo
include ./$(DEPDIR)/libzvbiinline_la-exp-gfx.Plo
include ./$(DEPDIR)/misc.Plo
include ./$(DEPDIR)/packet.Plo
include ./$(DEPDIR)/page_table.Plo
include ./$(DEPDIR)/pfc_demux.Plo
include ./$(DEPDIR)/proxy-client.Plo
include ./$(DEPDIR)/proxy-msg.Plo
include ./$(DEPDIR)/raw_decoder.Plo
include ./$(DEPDIR)/sampling_par.Plo
include ./$(DEPDIR)/search.Plo
include ./$(DEPDIR)/sliced_filter.Plo
include ./$(DEPDIR)/tables.Plo
include ./$(DEPDIR)/teletext.Plo
include ./$(DEPDIR)/trigger.Plo
include ./$(DEPDIR)/ure.Plo
include ./$(DEPDIR)/vbi.Plo
include ./$(DEPDIR)/vps.Plo
include ./$(DEPDIR)/wss.Plo
include ./$(DEPDIR)/xds_demux.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libzvbiinline_la-decoder.lo: decoder.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzvbiinline_la_CFLAGS) $(CFLAGS) -MT libzvbiinline_la-decoder.lo -MD -MP -MF "$(DEPDIR)/libzvbiinline_la-decoder.Tpo" -c -o libzvbiinline_la-decoder.lo `test -f 'decoder.c' || echo '$(srcdir)/'`decoder.c; \
	then mv -f "$(DEPDIR)/libzvbiinline_la-decoder.Tpo" "$(DEPDIR)/libzvbiinline_la-decoder.Plo"; else rm -f "$(DEPDIR)/libzvbiinline_la-decoder.Tpo"; exit 1; fi
#	source='decoder.c' object='libzvbiinline_la-decoder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzvbiinline_la_CFLAGS) $(CFLAGS) -c -o libzvbiinline_la-decoder.lo `test -f 'decoder.c' || echo '$(srcdir)/'`decoder.c

libzvbiinline_la-exp-gfx.lo: exp-gfx.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzvbiinline_la_CFLAGS) $(CFLAGS) -MT libzvbiinline_la-exp-gfx.lo -MD -MP -MF "$(DEPDIR)/libzvbiinline_la-exp-gfx.Tpo" -c -o libzvbiinline_la-exp-gfx.lo `test -f 'exp-gfx.c' || echo '$(srcdir)/'`exp-gfx.c; \
	then mv -f "$(DEPDIR)/libzvbiinline_la-exp-gfx.Tpo" "$(DEPDIR)/libzvbiinline_la-exp-gfx.Plo"; else rm -f "$(DEPDIR)/libzvbiinline_la-exp-gfx.Tpo"; exit 1; fi
#	source='exp-gfx.c' object='libzvbiinline_la-exp-gfx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzvbiinline_la_CFLAGS) $(CFLAGS) -c -o libzvbiinline_la-exp-gfx.lo `test -f 'exp-gfx.c' || echo '$(srcdir)/'`exp-gfx.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-libzvbiincludeHEADERS: $(libzvbiinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libzvbiincludedir)" || $(mkdir_p) "$(DESTDIR)$(libzvbiincludedir)"
	@list='$(libzvbiinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libzvbiincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libzvbiincludedir)/$$f'"; \
	  $(libzvbiincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libzvbiincludedir)/$$f"; \
	done

uninstall-libzvbiincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libzvbiinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libzvbiincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libzvbiincludedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libzvbiincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-libzvbiincludeHEADERS

install-exec-am: install-libLTLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libzvbiincludeHEADERS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libzvbiincludeHEADERS install-man install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-libzvbiincludeHEADERS


#hammgen: hammgen.c
#	$(CC) -o hammgen $(srcdir)/hammgen.c

#hamm-tables.h: hammgen$(EXEEXT) Makefile.am
#	$(top_builddir)/src/hammgen$(EXEEXT) > $@

#version.h: ../configure.in
#	echo -e "\n#define VBI_VERSION_MAJOR" `echo 0.2.33 \
#	 | sed "s/\./\\\\\n#define VBI_VERSION_MINOR /" \
#	 | sed "s/\./\\\\\n#define VBI_VERSION_MICRO /"` > $@

# Concat the header files in this order and filter out all lines
#   before "^/* Public", after "^/* Private" and between "^/**"..."**/$"
#libzvbi.h: version.h $(LIBZVBI_HDRS)
#	sed -ne "1,/\*\//p" $(srcdir)/vbi.h > $@
#	echo -e "\n/* Generated file, do not edit! */" >> $@
#	echo -e "\n#ifndef __LIBZVBI_H__\n#define __LIBZVBI_H__" >> $@
#	cat version.h >> $@
#	echo -e "\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n" >> $@
#	echo -e "\ntypedef struct vbi_decoder vbi_decoder;\n" >> $@
#	for fi in $(LIBZVBI_HDRS); do \
#		echo "/* $$fi */" >> $@; \
#		sed -e "/^\/\* Public/,/^\/\* Private/!d;/^\/\* Public/d;/^\/\* Private/d;s/\(\/\*\*.*\*\/\)//;/^[ 	]*\/\*\*/,/\*\/[ 	]*$$/d;" $(srcdir)/$$fi >> $@; \
#	done
#	echo -e "\n#ifdef __cplusplus\n}\n#endif" >> $@
#	echo -e "\n#endif /* __LIBZVBI_H__ */" >> $@

#network-table.h: network-table.pl Makefile.am
#	wget -q -O- --proxy=off \
#	  http://zapping.sourceforge.net/zvbi-0.3/networks.xml | \
#	  $(srcdir)/network-table.pl > $@

#_videodev.h: Makefile.am $(structpr) videodev.h
#	$(srcdir)/$(structpr) <$(srcdir)/videodev.h \
#	video_device.type=VFL_TYPE_ \
#	video_device.hardware=VID_HARDWARE_ \
#	video_capability.type=VID_TYPE_ \
#	video_channel.flags=VIDEO_VC_ \
#	video_channel.type=VIDEO_TYPE_ \
#	video_tuner.flags=VIDEO_TUNER_ \
#	video_tuner.mode=VIDEO_MODE_ \
#	video_picture.palette=VIDEO_PALETTE_ \
#	video_audio.flags=VIDEO_AUDIO_ \
#	video_audio.mode=VIDEO_SOUND_ \
#	video_window.flags=VIDEO_WINDOW_ \
#	video_capture.flags=VIDEO_CAPTURE_ \
#	vbi_format.flags=VBI_ \
#	> $@

# XXX v4l2_pix_format.flags has V4L2_FMT_CS_field subset.
# XXX v4l2_timecode.flags has V4L2_TC_USERBITS_field subset.
# XXX v4l2_buffer.flags has V4L2_BUF_FLAG_, V4L2_BUF_ATTR_, V4L2_BUF_REQ_.
#_videodev2.h: Makefile.am $(structpr) videodev2.h
#	$(srcdir)/$(structpr) <$(srcdir)/videodev2.h \
#	v4l2_capability.type=V4L2_TYPE_ \
#	v4l2_capability.flags=V4L2_FLAG_ \
#	v4l2_pix_format.pixelformat=V4L2_PIX_FMT_ \
#	v4l2_pix_format.flags=V4L2_FMT_FLAG_ \
#	v4l2_fmtdesc.pixelformat=V4L2_PIX_FMT_ \
#	v4l2_timecode.flags=V4L2_TC_FLAG_ \
#	v4l2_timecode.type=V4L2_TC_TYPE_ \
#	v4l2_requestbuffers.type=V4L2_BUF_TYPE_ \
#	v4l2_buffer.type=V4L2_BUF_TYPE_ \
#	v4l2_buffer.flags=V4L2_BUF_FLAG_ \
#	v4l2_framebuffer.capability=V4L2_FBUF_CAP_ \
#	v4l2_framebuffer.flags=V4L2_FBUF_FLAG_ \
#	v4l2_captureparm.capability=V4L2_CAP_ \
#	v4l2_captureparm.capturemode=V4L2_MODE_ \
#	v4l2_zoomcap.capability=V4L2_ZOOM_ \
#	v4l2_standard.colorstandard=V4L2_COLOR_STD_, \
#		V4L2_COLOR_STD_PAL:colorstandard_data.pal, \
#		V4L2_COLOR_STD_NTSC:colorstandard_data.ntsc, \
#		V4L2_COLOR_STD_SECAM:colorstandard_data.secam \
#	v4l2_standard.transmission=V4L2_TRANSM_STD_ \
#	v4l2_input.type=V4L2_INPUT_TYPE_ \
#	v4l2_input.capability=V4L2_INPUT_CAP_ \
#	v4l2_output.type=V4L2_OUTPUT_TYPE_ \
#	v4l2_output.capability=V4L2_OUTPUT_CAP_ \
#	v4l2_control.id=V4L2_CID_ \
#	v4l2_queryctrl.id=V4L2_CID_ \
#	v4l2_queryctrl.type=V4L2_CTRL_TYPE_ \
#	v4l2_queryctrl.flags=V4L2_CTRL_FLAG_ \
#	v4l2_queryctrl.group=string \
#	v4l2_queryctrl.category=V4L2_CTRL_CAT_ \
#	v4l2_querymenu.id=V4L2_CID_ \
#	v4l2_fxcontrol.id=V4L2_CID_ \
#	v4l2_tuner.capability=V4L2_TUNER_CAP_ \
#	v4l2_tuner.rxsubchans=V4L2_TUNER_SUB_ \
#	v4l2_tuner.audmode=V4L2_TUNER_MODE_ \
#	v4l2_modulator.capability=V4L2_TUNER_CAP_ \
#	v4l2_modulator.txsubchans=V4L2_TUNER_SUB_ \
#	v4l2_audio.capability=V4L2_AUDCAP_ \
#	v4l2_audio.mode=V4L2_AUDMODE_ \
#	v4l2_vbi_format.sample_format=V4L2_VBI_SF_ \
#	v4l2_vbi_format.flags=V4L2_VBI_ \
#	v4l2_format.type=V4L2_BUF_TYPE_, \
#		V4L2_BUF_TYPE_CAPTURE:fmt.pix, \
#		V4L2_BUF_TYPE_VBI:fmt.vbi \
#	v4l2_streamparm.type=V4L2_BUF_TYPE_, \
#		V4L2_BUF_TYPE_CAPTURE:parm.capture, \
#		V4L2_BUF_TYPE_VIDEOOUT:parm.output \
#	> $@

# XXX v4l2_timecode.flags has V4L2_TC_USERBITS_field subset.
#_videodev2k.h: Makefile.am $(structpr) videodev2k.h
#	$(srcdir)/$(structpr) <$(srcdir)/videodev2k.h \
#	"v4l2_fract={ fprintf (fp, \"%u/%u\", t->numerator, t->denominator); }" \
#	v4l2_capability.driver=string \
#	v4l2_capability.card=string \
#	v4l2_capability.bus_info=string \
#	v4l2_capability.version=hex \
#	v4l2_capability.capabilities=V4L2_CAP_ \
#	v4l2_pix_format.pixelformat=V4L2_PIX_FMT_ \
#	v4l2_fmtdesc.flags=V4L2_FMT_FLAG_ \
#	v4l2_fmtdesc.description=string \
#	v4l2_fmtdesc.pixelformat=fourcc \
#	v4l2_timecode.type=V4L2_TC_TYPE_ \
#	v4l2_timecode.flags=V4L2_TC_FLAG_ \
#	v4l2_jpegcompression.jpeg_markers=V4L2_JPEG_MARKER_ \
#	v4l2_buffer.flags=V4L2_BUF_FLAG_ \
#	v4l2_buffer.memory=V4L2_MEMORY_MMAP:m.offset, \
#			   V4L2_MEMORY_USERPTR:m.userptr \
#	v4l2_framebuffer.capability=V4L2_FBUF_CAP_ \
#	v4l2_framebuffer.flags=V4L2_FBUF_FLAG_ \
#	v4l2_captureparm.capability=V4L2_CAP_ \
#	v4l2_captureparm.capturemode=V4L2_MODE_ \
#	v4l2_std_id=V4L2_STD_ \
#	v4l2_input.type=V4L2_INPUT_TYPE_ \
#	v4l2_input.status=V4L2_IN_ST_ \
#	v4l2_output.type=V4L2_OUTPUT_TYPE_ \
#	v4l2_control.id=V4L2_CID_ \
#	v4l2_queryctrl.id=V4L2_CID_ \
#	v4l2_queryctrl.flags=V4L2_CTRL_FLAG_ \
#	v4l2_querymenu.id=V4L2_CID_ \
#	v4l2_querymenu.index=V4L2_CID_ \
#	v4l2_tuner.capability=V4L2_TUNER_CAP_ \
#	v4l2_tuner.rxsubchans=V4L2_TUNER_SUB_ \
#	v4l2_tuner.audmode=V4L2_TUNER_MODE_ \
#	v4l2_modulator.capability=V4L2_TUNER_CAP_ \
#	v4l2_modulator.txsubchans=V4L2_TUNER_SUB_ \
#	v4l2_audio.capability=V4L2_AUDCAP_ \
#	v4l2_audio.mode=V4L2_AUDMODE_ \
#	v4l2_vbi_format.sample_format=V4L2_PIX_FMT_ \
#	v4l2_vbi_format.flags=V4L2_VBI_ \
#	v4l2_format.type=V4L2_BUF_TYPE_VIDEO_CAPTURE:fmt.pix, \
#		V4L2_BUF_TYPE_VIDEO_OVERLAY:fmt.win, \
#		V4L2_BUF_TYPE_VBI_CAPTURE:fmt.vbi \
#	> $@

#_bktr.h: Makefile.am $(structpr) ioctl_bt848.h ioctl_meteor.h
#	cat $(srcdir)/ioctl_bt848.h $(srcdir)/ioctl_meteor.h | \
#	$(srcdir)/$(structpr) \
#	> $@

#unrename:
#	for file in *.c *.h ; do \
#	  case "$$file" in \
#	  io*|bit_slicer*|decoder.c|raw_decoder*|sampling_par.c) \
#	    continue ; ;; \
#	  esac ; \
#	  if grep -q -i vbi3_ "$$file" ; then \
#	    sed 's/vbi3_/vbi_/g;s/VBI3_/VBI_/g' < "$$file" >tmp ; \
#	    mv tmp "$$file" ; \
#	  fi ; \
#	done
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
