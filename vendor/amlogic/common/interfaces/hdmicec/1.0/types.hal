/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.amlogic.hardware.hdmicec@1.0;

enum Result : int32_t {
    SUCCESS = 0,
    FAILURE_UNKNOWN = 1,
    FAILURE_INVALID_ARGS = 2,
    FAILURE_INVALID_STATE = 3,
    FAILURE_NOT_SUPPORTED = 4,
    FAILURE_BUSY = 5,
};

/**
 * connect to server type
 */
enum ConnectType : int32_t {
    TYPE_HAL = 0,
    TYPE_EXTEND,
    TYPE_TOTAL,
};

/**
 * error code used for send_message.
 */
enum SendMessageResult : int32_t {
    SUCCESS = 0,
    NACK = 1, // not acknowledged
    BUSY = 2, // bus is busy
    FAIL = 3,
};

enum CecLogicalAddress : int32_t {
    TV = 0,
    RECORDER_1 = 1,
    RECORDER_2 = 2,
    TUNER_1 = 3,
    PLAYBACK_1 = 4,
    AUDIO_SYSTEM = 5,
    TUNER_2 = 6,
    TUNER_3 = 7,
    PLAYBACK_2 = 8,
    RECORDER_3 = 9,
    TUNER_4 = 10,
    PLAYBACK_3 = 11,
    FREE_USE = 14,
    UNREGISTERED = 15, // as Initiator address
    BROADCAST = 15, // as Destination address
};

/**
 * HDMI port type.
 */
enum HdmiPortType : int32_t {
    INPUT = 0,
    OUTPUT = 1,
};

/**
 * Options used for IHdmiCec.setOption()
 */
enum OptionKey : int32_t {
    /**
     * When set to false, HAL does not wake up the system upon receiving <Image
     * View On> or <Text View On>. Used when user changes the TV settings to
     * disable the auto TV on functionality.
     * True by default.
     */
    WAKEUP = 1,

    /**
     * When set to false, all the CEC commands are discarded. Used when user
     * changes the TV settings to disable CEC functionality.
     * True by default.
     */
    ENABLE_CEC = 2,

    /**
     * Setting this flag to false means Android system must stop handling CEC
     * service and yield the control over to the microprocessor that is powered
     * on through the standby mode. When set to true, the system must gain the
     * control over, hence telling the microprocessor to stop handling the CEC
     * commands. For example, this may be called when system goes in and out of
     * standby mode to notify the microprocessor that it should start/stop
     * handling CEC commands on behalf of the system.
     * False by default.
     */
    SYSTEM_CEC_CONTROL = 3,

    /* Option 4 not used */
};

struct CecMessage {
    /** logical address of sender */
    CecLogicalAddress initiator;

    /** logical address of receiver */
    CecLogicalAddress destination;

    /**
     * The maximum size of body is 15 (MaxLength::MESSAGE_BODY) as specified in
     * the section 6 of the CEC Spec 1.4b. Overflowed data must be ignored. */
    vec<uint8_t> body;
};

struct HotplugEvent {
    bool connected;
    uint32_t portId;
};

struct CecEvent {
    int32_t eventType;
    CecMessage cec;
    HotplugEvent hotplug;
    int32_t logicalAddress;
};


/**
 * HDMI port descriptor
 */
struct HdmiPortInfo {
    HdmiPortType type;
    uint32_t portId; // Should start from 1 which corresponds to HDMI "port 1".
    bool cecSupported;
    bool arcSupported;
    uint16_t physicalAddress;
};
