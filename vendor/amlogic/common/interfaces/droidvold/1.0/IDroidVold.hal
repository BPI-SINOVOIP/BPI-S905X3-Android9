/*
 * Copyright 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package vendor.amlogic.hardware.droidvold@1.0;

import IDroidVoldCallback;

interface IDroidVold {
    /**
     * Sets a callback that DroidVold HAL use for incoming Uevent messages.
     * @param callback Callback object to pass events to the system.
     *
     */
    oneway setCallback(IDroidVoldCallback callback);

    /**
    * reset volumes success or fail
    * @param none
    *
    * @return result OK, reset success
    *                FAIL, reset fail
    *
    */
    reset() generates (Result result);

    /**
    * shutdown volumes success or fail
    * @param none
    *
    * @return result OK, shutdown success
    *                FAIL, shutdown fail
    *
    */
    shutdown() generates (Result result);

    /**
    * mount a volume
    * @param id the volume id
    * @param flag mount flag
    * @param uid  mount user id
    *
    * @return result OK, mount success; FAIL, mount fail
    *
    */
    mount(string id, uint32_t flag, uint32_t uid) generates (Result result);

    /**
    * unmount a volume
    * @param id the volume id
    *
    * @return result OK, unmount success; FAIL, unmount fail
    *
    */
    unmount(string id) generates (Result result);

    /**
    * format a volume
    * @param id the volume id
    * @param type the format type
    *
    * @return result OK, format success; FAIL, format fail
    *
    */
    format(string id, string type) generates (Result result);

    /**
    * get disk flag
    * @param path the mount path
    *
    * @return udisk flag
    *
    */
    getDiskFlag(string path) generates (int32_t flag);
};
