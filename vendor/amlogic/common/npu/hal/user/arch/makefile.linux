##############################################################################
#
#    Copyright (c) 2005 - 2020 by Vivante Corp.  All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Vivante Corporation. This is proprietary information owned by
#    Vivante Corporation. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Vivante Corporation.
#
##############################################################################


#
# Linux build file for architecture dependent user HAL layer.
#
#

################################################################################
# Include common definitions.

include $(AQROOT)/makefile.linux.def

################################################################################
# Define target module name.

STATIC              := 1
TARGET_NAME         := libhalarchuser.a
TARGET_MODULE       := $(OBJ_DIR)/$(TARGET_NAME)

################################################################################
# Installation directory.

INSTALL_DIR         := $(SDK_DIR)/drivers

################################################################################
# Supply additional include directories.

INCLUDE := -I$(AQROOT)/hal/inc \
           -I$(AQROOT)/hal/user \
           -I$(AQARCH)/cmodel/inc \
           -I$(AQROOT)/hal/user/arch \

ifeq ($(VIVANTE_ENABLE_3D),1)
  INCLUDE += -I$(AQROOT)/compiler/libVSC/include

endif
  INCLUDE += -I$(AQROOT)/hal/os/linux/user

CFLAGS += $(INCLUDE)

################################################################################
# Add extra flags for object files.


ifneq ($(USE_ARMCC),1)
  CFLAGS += -fPIC -Wno-unused-function -Werror

    CFLAGS += -ansi
endif

################################################################################
# Describe object files.

OBJECTS  := $(OBJ_DIR)/gc_hal_user_hardware_blt.o \
            $(OBJ_DIR)/gc_hal_user_hardware_filter_blt_vr.o \
            $(OBJ_DIR)/gc_hal_user_hardware_filter_blt_blocksize.o \
            $(OBJ_DIR)/gc_hal_user_hardware.o \
            $(OBJ_DIR)/gc_hal_user_hardware_pattern.o \
            $(OBJ_DIR)/gc_hal_user_hardware_pipe.o \
            $(OBJ_DIR)/gc_hal_user_hardware_primitive.o \
            $(OBJ_DIR)/gc_hal_user_hardware_query.o \
            $(OBJ_DIR)/gc_hal_user_hardware_source.o \
            $(OBJ_DIR)/gc_hal_user_hardware_target.o \
            $(OBJ_DIR)/gc_hal_user_hardware_dec.o

ifeq ($(VIVANTE_ENABLE_3D),1)
  OBJECTS += $(OBJ_DIR)/gc_hal_user_hardware_clear.o \
             $(OBJ_DIR)/gc_hal_user_hardware_filter_blt_de.o \
             $(OBJ_DIR)/gc_hal_user_hardware_engine.o \
             $(OBJ_DIR)/gc_hal_user_hardware_frag_proc.o \
             $(OBJ_DIR)/gc_hal_user_hardware_texture.o \
             $(OBJ_DIR)/gc_hal_user_hardware_texture_upload.o \
             $(OBJ_DIR)/gc_hal_user_hardware_stream.o \
             $(OBJ_DIR)/gc_hal_user_hardware_shader.o

  ifeq ($(USE_OPENVX),1)
    OBJECTS += $(OBJ_DIR)/gc_hal_user_hardware_vx.o
  endif
endif


################################################################################
# Define targets.

.PHONY: all clean install

all: $(TARGET_MODULE)

clean:
	@rm -rf $(OBJ_DIR)

install: all

ifeq ($(gcdSTATIC_LINK),1)
install:
	@mkdir -p $(INSTALL_DIR)
	@-cp $(TARGET_MODULE) $(INSTALL_DIR)
endif

################################################################################
# Module rules.

$(TARGET_MODULE): $(OBJECTS)
	@echo "  ARCHIVE \033[1m$(notdir $@)\033[0m"
	@$(AR) -r -c $@ $(OBJECTS)
ifneq ($(USE_ARMCC),1)
	@$(RANLIB) $@
endif

################################################################################
# Object rules.

vpath %.c thirdparty_special

$(OBJ_DIR)/%.o: %.c
	@echo "  COMPILE $(abspath $<)"
	@mkdir -p $(OBJ_DIR)
	@$(CC) -c $(CFLAGS) -MMD -o $@ $<

# object dependencies.
-include $(OBJECTS:.o=.d)

