// Processing 'dalvik-opcodes/out/classes_dasm/dot/junit/opcodes/invoke_virtual_range/d/T_invoke_virtual_range_8.dex'...
// Opened 'dalvik-opcodes/out/classes_dasm/dot/junit/opcodes/invoke_virtual_range/d/T_invoke_virtual_range_8.dex', DEX version '035'
// DEX file header:
// parsed: offset 0, len 8: magic               : 'dex
// 035'
    64 65 78 0A 30 33 35 00 
// parsed: offset 8, len 4: checksum            : a1e659ab
    AB 59 E6 A1 
// parsed: offset 12, len 20: signature           : 8e95...8017
    8E 95 BB E6 C0 B0 72 A9 B2 A8 7C 08 01 0B 76 DC A6 B9 80 17 
// parsed: offset 32, len 4: file_size           : 644
    84 02 00 00 
// parsed: offset 36, len 4: header_size         : 112
    70 00 00 00 
// parsed: offset 40, len 4: endian_tag          : 0x12345678
    78 56 34 12 
// parsed: offset 44, len 4: link_size           : 0
    00 00 00 00 
// parsed: offset 48, len 4: link_off            : 0 (0x000000)
    00 00 00 00 
// parsed: offset 52, len 4: map_off             : 508 (0x0001fc)
    FC 01 00 00 
// parsed: offset 56, len 4: string_ids_size     : 10
    0A 00 00 00 
// parsed: offset 60, len 4: string_ids_off      : 112 (0x000070)
    70 00 00 00 
// parsed: offset 64, len 4: type_ids_size       : 4
    04 00 00 00 
// parsed: offset 68, len 4: type_ids_off        : 152 (0x000098)
    98 00 00 00 
// parsed: offset 72, len 4: proto_ids_size      : 3
    03 00 00 00 
// parsed: offset 76, len 4: proto_ids_off       : 168 (0x0000a8)
    A8 00 00 00 
// parsed: offset 80, len 4: field_ids_size      : 0
    00 00 00 00 
// parsed: offset 84, len 4: field_ids_off       : 0 (0x000000)
    00 00 00 00 
// parsed: offset 88, len 4: method_ids_size     : 4
    04 00 00 00 
// parsed: offset 92, len 4: method_ids_off      : 204 (0x0000cc)
    CC 00 00 00 
// parsed: offset 96, len 4: class_defs_size     : 1
    01 00 00 00 
// parsed: offset 100, len 4: class_defs_off      : 236 (0x0000ec)
    EC 00 00 00 
// parsed: offset 104, len 4: data_size           : 376
    78 01 00 00 
// parsed: offset 108, len 4: data_off            : 268 (0x00010c)
    0C 01 00 00 
// 
// string_ids:
// parsed: offset 112, len 4: [0] string_data_off: 336 (0x000150) "<init>"
    50 01 00 00 
// parsed: offset 116, len 4: [1] string_data_off: 344 (0x000158) "Ldot/junit/opcodes/invoke_virtual_range/d/T_invoke_virtual_range_8;"
    58 01 00 00 
// parsed: offset 120, len 4: [2] string_data_off: 413 (0x00019d) "Ljava/lang/Object;"
    9D 01 00 00 
// parsed: offset 124, len 4: [3] string_data_off: 433 (0x0001b1) "T_invoke_virtual_range_8.java"
    B1 01 00 00 
// parsed: offset 128, len 4: [4] string_data_off: 464 (0x0001d0) "V"
    D0 01 00 00 
// parsed: offset 132, len 4: [5] string_data_off: 467 (0x0001d3) "Z"
    D3 01 00 00 
// parsed: offset 136, len 4: [6] string_data_off: 470 (0x0001d6) "ZL"
    D6 01 00 00 
// parsed: offset 140, len 4: [7] string_data_off: 474 (0x0001da) "ZLL"
    DA 01 00 00 
// parsed: offset 144, len 4: [8] string_data_off: 479 (0x0001df) "equals"
    DF 01 00 00 
// parsed: offset 148, len 4: [9] string_data_off: 487 (0x0001e7) "run"
    E7 01 00 00 

// type_ids:
// parsed: offset 152, len 4: [0] descriptor_idx: 1 (0x000001) "Ldot/junit/opcodes/invoke_virtual_range/d/T_invoke_virtual_range_8;"
    01 00 00 00 
// parsed: offset 156, len 4: [1] descriptor_idx: 2 (0x000002) "Ljava/lang/Object;"
    02 00 00 00 
// parsed: offset 160, len 4: [2] descriptor_idx: 4 (0x000004) "V"
    04 00 00 00 
// parsed: offset 164, len 4: [3] descriptor_idx: 5 (0x000005) "Z"
    05 00 00 00 

// proto_ids:
// parsed: offset 168, len 12: [0] 
//     shorty_idx: 4 (0x000004) "V"
//     return_type_idx: 2 (0x000002) "V"
//     parameters_off: 0 (0x000000)
    04 00 00 00 02 00 00 00 00 00 00 00 
// parsed: offset 180, len 12: [1] 
//     shorty_idx: 6 (0x000006) "ZL"
//     return_type_idx: 3 (0x000003) "Z"
//     parameters_off: 320 (0x000140)
    06 00 00 00 03 00 00 00 40 01 00 00 
// parsed: offset 192, len 12: [2] 
//     shorty_idx: 7 (0x000007) "ZLL"
//     return_type_idx: 3 (0x000003) "Z"
//     parameters_off: 328 (0x000148)
    07 00 00 00 03 00 00 00 48 01 00 00 

// field_ids:

// methods_ids:
// parsed: offset 204, len 8: [0] class_idx: 0 (0x000000)  proto_idx: 0 (0x000000) name_idx: 0 (0x000000) "<init>"
    00 00 00 00 00 00 00 00 
// parsed: offset 212, len 8: [1] class_idx: 0 (0x000000)  proto_idx: 2 (0x000002) name_idx: 9 (0x000009) "run"
    00 00 02 00 09 00 00 00 
// parsed: offset 220, len 8: [2] class_idx: 1 (0x000001)  proto_idx: 0 (0x000000) name_idx: 0 (0x000000) "<init>"
    01 00 00 00 00 00 00 00 
// parsed: offset 228, len 8: [3] class_idx: 1 (0x000001)  proto_idx: 1 (0x000001) name_idx: 8 (0x000008) "equals"
    01 00 01 00 08 00 00 00 

// class_defs:
// parsed: offset 236, len 32: Class [0]
//     class_idx: 0 "Ldot/junit/opcodes/invoke_virtual_range/d/T_invoke_virtual_range_8;"
//     access_flags: 0x000001 (PUBLIC)
//     superclass_idx: 1 "Ljava/lang/Object;"
//     interfaces_off: 0 (0x000000)
//     source_file_idx: 3 "T_invoke_virtual_range_8.java"
//     annotations_off: 0 (0x000000)
//     class_data_off: 492 (0x0001ec)
//     static_values_off: 0 (0x000000)
    00 00 00 00 01 00 00 00 01 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00 EC 01 00 00 00 00 00 00 
// data_section:
// CODE_ITEM for "dot.junit.opcodes.invoke_virtual_range.d.T_invoke_virtual_range_8.<init>"
    // parsed: offset 268, len 2: registers_size: 2
        02 00 
    // parsed: offset 270, len 2: ins_size: 1
        01 00 
    // parsed: offset 272, len 2: outs_size: 1
        01 00 
    // parsed: offset 274, len 2: tries_size: 0
        00 00 
    // parsed: offset 276, len 4: debug_info_off: 0 (0x000000)
        00 00 00 00 
    // parsed: offset 280, len 4: insns_size: 4
        04 00 00 00 
    // insns:
        // parsed: offset 284, len 6: |0000: invoke-direct {v1}, Ljava/lang/Object;.<init>:()V // method@0002
            70 10 02 00 01 00 
        // parsed: offset 290, len 2: |0003: return-void
            0E 00 
    // tries: 
    // handlers: 
// CODE_ITEM for "dot.junit.opcodes.invoke_virtual_range.d.T_invoke_virtual_range_8.run"
    // parsed: offset 292, len 2: registers_size: 8
        08 00 
    // parsed: offset 294, len 2: ins_size: 3
        03 00 
    // parsed: offset 296, len 2: outs_size: 2
        02 00 
    // parsed: offset 298, len 2: tries_size: 0
        00 00 
    // parsed: offset 300, len 4: debug_info_off: 0 (0x000000)
        00 00 00 00 
    // parsed: offset 304, len 4: insns_size: 5
        05 00 00 00 
    // insns:
        // parsed: offset 308, len 6: |0000: invoke-virtual/range {v6..v7}, Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z // method@0003
//@mod            74 02 03 00 06 00 
            74 02 03 01 06 00 
        // parsed: offset 314, len 2: |0003: move-result v0
            0A 00 
        // parsed: offset 316, len 2: |0004: return v0
            0F 00 
    // tries: 
    // handlers: 
// parsed: offset 318, len 2: PADDING
    00 00 
// TYPE_LIST
    // parsed: offset 320, len 4: size: 1
        01 00 00 00 
    // parsed: offset 324, len 2: type_item [0] type_idx: 1
        01 00 
// parsed: offset 326, len 2: PADDING
    00 00 
// TYPE_LIST
    // parsed: offset 328, len 4: size: 2
        02 00 00 00 
    // parsed: offset 332, len 2: type_item [0] type_idx: 1
        01 00 
    // parsed: offset 334, len 2: type_item [1] type_idx: 1
        01 00 
// parsed: offset 336, len 8: TYPE_STRING_DATA_ITEM [0] "<init>"
    06 3C 69 6E 69 74 3E 00 
// parsed: offset 344, len 69: TYPE_STRING_DATA_ITEM [1] "Ldot/junit/opcodes/invoke_virtual_range/d/T_invoke_virtual_range_8;"
    43 4C 64 6F 74 2F 6A 75 6E 69 74 2F 6F 70 63 6F 64 65 73 2F 69 6E 76 6F 6B 65 5F 76 69 72 74 75 61 6C 5F 72 61 6E 67 65 2F 64 2F 54 5F 69 6E 76 6F 6B 65 5F 76 69 72 74 75 61 6C 5F 72 61 6E 67 65 5F 38 3B 00 
// parsed: offset 413, len 20: TYPE_STRING_DATA_ITEM [2] "Ljava/lang/Object;"
    12 4C 6A 61 76 61 2F 6C 61 6E 67 2F 4F 62 6A 65 63 74 3B 00 
// parsed: offset 433, len 31: TYPE_STRING_DATA_ITEM [3] "T_invoke_virtual_range_8.java"
    1D 54 5F 69 6E 76 6F 6B 65 5F 76 69 72 74 75 61 6C 5F 72 61 6E 67 65 5F 38 2E 6A 61 76 61 00 
// parsed: offset 464, len 3: TYPE_STRING_DATA_ITEM [4] "V"
    01 56 00 
// parsed: offset 467, len 3: TYPE_STRING_DATA_ITEM [5] "Z"
    01 5A 00 
// parsed: offset 470, len 4: TYPE_STRING_DATA_ITEM [6] "ZL"
    02 5A 4C 00 
// parsed: offset 474, len 5: TYPE_STRING_DATA_ITEM [7] "ZLL"
    03 5A 4C 4C 00 
// parsed: offset 479, len 8: TYPE_STRING_DATA_ITEM [8] "equals"
    06 65 71 75 61 6C 73 00 
// parsed: offset 487, len 5: TYPE_STRING_DATA_ITEM [9] "run"
    03 72 75 6E 00 
// CLASS_DATA_ITEM for class [0] "Ldot/junit/opcodes/invoke_virtual_range/d/T_invoke_virtual_range_8;"
    // parsed: offset 492, len 1: static_fields_size: 0
        00 
    // parsed: offset 493, len 1: instance_fields_size: 0
        00 
    // parsed: offset 494, len 1: direct_methods_size: 1
        01 
    // parsed: offset 495, len 1: virtual_methods_size: 1
        01 
    // static_fields:
    // instance_fields:
    // direct_methods:
        // method [0]:
            // parsed: offset 496, len 1: method_idx_diff: 0 (method_idx: 0 "<init>")
                00 
            // parsed: offset 497, len 3: access_flags: 0x010001 (PUBLIC CONSTRUCTOR)
                81 80 04 
            // parsed: offset 500, len 2: code_off: 268 (0x00010c)
                8C 02 
    // virtual_methods:
        // method [0]:
            // parsed: offset 502, len 1: method_idx_diff: 1 (method_idx: 1 "run")
                01 
            // parsed: offset 503, len 1: access_flags: 0x000001 (PUBLIC)
                01 
            // parsed: offset 504, len 2: code_off: 292 (0x000124)
                A4 02 
// parsed: offset 506, len 2: PADDING
    00 00 
// map_list:
    // parsed: offset 508, len 4: size: 11
        0B 00 00 00 
    // parsed: offset 512, len 12: [0] type: 0x0000 TYPE_HEADER_ITEM
    //      unused: 0
    //      size: 1
    //      offset: 0 (0x000000)
        00 00 00 00 01 00 00 00 00 00 00 00 
    // parsed: offset 524, len 12: [1] type: 0x0001 TYPE_STRING_ID_ITEM
    //      unused: 0
    //      size: 10
    //      offset: 112 (0x000070)
        01 00 00 00 0A 00 00 00 70 00 00 00 
    // parsed: offset 536, len 12: [2] type: 0x0002 TYPE_TYPE_ID_ITEM
    //      unused: 0
    //      size: 4
    //      offset: 152 (0x000098)
        02 00 00 00 04 00 00 00 98 00 00 00 
    // parsed: offset 548, len 12: [3] type: 0x0003 TYPE_PROTO_ID_ITEM
    //      unused: 0
    //      size: 3
    //      offset: 168 (0x0000a8)
        03 00 00 00 03 00 00 00 A8 00 00 00 
    // parsed: offset 560, len 12: [4] type: 0x0005 TYPE_METHOD_ID_ITEM
    //      unused: 0
    //      size: 4
    //      offset: 204 (0x0000cc)
        05 00 00 00 04 00 00 00 CC 00 00 00 
    // parsed: offset 572, len 12: [5] type: 0x0006 TYPE_CLASS_DEF_ITEM
    //      unused: 0
    //      size: 1
    //      offset: 236 (0x0000ec)
        06 00 00 00 01 00 00 00 EC 00 00 00 
    // parsed: offset 584, len 12: [6] type: 0x2001 TYPE_CODE_ITEM
    //      unused: 0
    //      size: 2
    //      offset: 268 (0x00010c)
        01 20 00 00 02 00 00 00 0C 01 00 00 
    // parsed: offset 596, len 12: [7] type: 0x1001 TYPE_TYPE_LIST
    //      unused: 0
    //      size: 2
    //      offset: 320 (0x000140)
        01 10 00 00 02 00 00 00 40 01 00 00 
    // parsed: offset 608, len 12: [8] type: 0x2002 TYPE_STRING_DATA_ITEM
    //      unused: 0
    //      size: 10
    //      offset: 336 (0x000150)
        02 20 00 00 0A 00 00 00 50 01 00 00 
    // parsed: offset 620, len 12: [9] type: 0x2000 TYPE_CLASS_DATA_ITEM
    //      unused: 0
    //      size: 1
    //      offset: 492 (0x0001ec)
        00 20 00 00 01 00 00 00 EC 01 00 00 
    // parsed: offset 632, len 12: [10] type: 0x1000 TYPE_MAP_LIST
    //      unused: 0
    //      size: 1
    //      offset: 508 (0x0001fc)
        00 10 00 00 01 00 00 00 FC 01 00 00 
