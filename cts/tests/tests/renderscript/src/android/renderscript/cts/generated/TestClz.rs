/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Don't edit this file!  It is auto-generated by frameworks/rs/api/generate.sh.

#pragma version(1)
#pragma rs java_package_name(android.renderscript.cts)


char __attribute__((kernel)) testClzCharChar(char inValue) {
    return clz(inValue);
}

char2 __attribute__((kernel)) testClzChar2Char2(char2 inValue) {
    return clz(inValue);
}

char3 __attribute__((kernel)) testClzChar3Char3(char3 inValue) {
    return clz(inValue);
}

char4 __attribute__((kernel)) testClzChar4Char4(char4 inValue) {
    return clz(inValue);
}

uchar __attribute__((kernel)) testClzUcharUchar(uchar inValue) {
    return clz(inValue);
}

uchar2 __attribute__((kernel)) testClzUchar2Uchar2(uchar2 inValue) {
    return clz(inValue);
}

uchar3 __attribute__((kernel)) testClzUchar3Uchar3(uchar3 inValue) {
    return clz(inValue);
}

uchar4 __attribute__((kernel)) testClzUchar4Uchar4(uchar4 inValue) {
    return clz(inValue);
}

short __attribute__((kernel)) testClzShortShort(short inValue) {
    return clz(inValue);
}

short2 __attribute__((kernel)) testClzShort2Short2(short2 inValue) {
    return clz(inValue);
}

short3 __attribute__((kernel)) testClzShort3Short3(short3 inValue) {
    return clz(inValue);
}

short4 __attribute__((kernel)) testClzShort4Short4(short4 inValue) {
    return clz(inValue);
}

ushort __attribute__((kernel)) testClzUshortUshort(ushort inValue) {
    return clz(inValue);
}

ushort2 __attribute__((kernel)) testClzUshort2Ushort2(ushort2 inValue) {
    return clz(inValue);
}

ushort3 __attribute__((kernel)) testClzUshort3Ushort3(ushort3 inValue) {
    return clz(inValue);
}

ushort4 __attribute__((kernel)) testClzUshort4Ushort4(ushort4 inValue) {
    return clz(inValue);
}

int __attribute__((kernel)) testClzIntInt(int inValue) {
    return clz(inValue);
}

int2 __attribute__((kernel)) testClzInt2Int2(int2 inValue) {
    return clz(inValue);
}

int3 __attribute__((kernel)) testClzInt3Int3(int3 inValue) {
    return clz(inValue);
}

int4 __attribute__((kernel)) testClzInt4Int4(int4 inValue) {
    return clz(inValue);
}

uint __attribute__((kernel)) testClzUintUint(uint inValue) {
    return clz(inValue);
}

uint2 __attribute__((kernel)) testClzUint2Uint2(uint2 inValue) {
    return clz(inValue);
}

uint3 __attribute__((kernel)) testClzUint3Uint3(uint3 inValue) {
    return clz(inValue);
}

uint4 __attribute__((kernel)) testClzUint4Uint4(uint4 inValue) {
    return clz(inValue);
}
