/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Don't edit this file alone!
 * The array names need to match the data generated by blas_gen.py. */

package android.cts.rsblas;

import android.content.res.AssetManager;
import android.content.Context;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

import android.test.AndroidTestCase;

public class BLASData extends AndroidTestCase {
    private BufferedReader mBufReader;

    int dM;
    int dN;
    int dK;

    int KL;
    int KU;

    float[] L2_sGEMV_A_mn;
    float[] L2_sGEMV_x_n1;
    float[] L2_sGEMV_x_n2;
    float[] L2_sGEMV_y_m1;
    float[] L2_sGEMV_y_m2;
    float[] L2_sGEMV_o_N;
    float[] L2_sGEMV_o_N2;
    float[] L2_sGEMV_o_T;
    float[] L2_sGEMV_o_H;

    double[] L2_dGEMV_A_mn;
    double[] L2_dGEMV_x_n1;
    double[] L2_dGEMV_x_n2;
    double[] L2_dGEMV_y_m1;
    double[] L2_dGEMV_y_m2;
    double[] L2_dGEMV_o_N;
    double[] L2_dGEMV_o_N2;
    double[] L2_dGEMV_o_T;
    double[] L2_dGEMV_o_H;

    float[] L2_cGEMV_A_mn;
    float[] L2_cGEMV_x_n1;
    float[] L2_cGEMV_x_n2;
    float[] L2_cGEMV_y_m1;
    float[] L2_cGEMV_y_m2;
    float[] L2_cGEMV_o_N;
    float[] L2_cGEMV_o_N2;
    float[] L2_cGEMV_o_T;
    float[] L2_cGEMV_o_H;

    double[] L2_zGEMV_A_mn;
    double[] L2_zGEMV_x_n1;
    double[] L2_zGEMV_x_n2;
    double[] L2_zGEMV_y_m1;
    double[] L2_zGEMV_y_m2;
    double[] L2_zGEMV_o_N;
    double[] L2_zGEMV_o_N2;
    double[] L2_zGEMV_o_T;
    double[] L2_zGEMV_o_H;

    float[] L2_sGBMV_A_mn;
    float[] L2_sGBMV_x_n1;
    float[] L2_sGBMV_x_n2;
    float[] L2_sGBMV_y_m1;
    float[] L2_sGBMV_y_m2;
    float[] L2_sGBMV_o_N;
    float[] L2_sGBMV_o_N2;
    float[] L2_sGBMV_o_T;
    float[] L2_sGBMV_o_H;

    double[] L2_dGBMV_A_mn;
    double[] L2_dGBMV_x_n1;
    double[] L2_dGBMV_x_n2;
    double[] L2_dGBMV_y_m1;
    double[] L2_dGBMV_y_m2;
    double[] L2_dGBMV_o_N;
    double[] L2_dGBMV_o_N2;
    double[] L2_dGBMV_o_T;
    double[] L2_dGBMV_o_H;

    float[] L2_cGBMV_A_mn;
    float[] L2_cGBMV_x_n1;
    float[] L2_cGBMV_x_n2;
    float[] L2_cGBMV_y_m1;
    float[] L2_cGBMV_y_m2;
    float[] L2_cGBMV_o_N;
    float[] L2_cGBMV_o_N2;
    float[] L2_cGBMV_o_T;
    float[] L2_cGBMV_o_H;

    double[] L2_zGBMV_A_mn;
    double[] L2_zGBMV_x_n1;
    double[] L2_zGBMV_x_n2;
    double[] L2_zGBMV_y_m1;
    double[] L2_zGBMV_y_m2;
    double[] L2_zGBMV_o_N;
    double[] L2_zGBMV_o_N2;
    double[] L2_zGBMV_o_T;
    double[] L2_zGBMV_o_H;

    float[] L2_cHEMV_A_nn;
    float[] L2_cHEMV_A_nn_pu;
    float[] L2_cHEMV_x_n1;
    float[] L2_cHEMV_x_n2;
    float[] L2_cHEMV_y_n1;
    float[] L2_cHEMV_y_n2;
    float[] L2_cHEMV_o_N;
    float[] L2_cHEMV_o_N2;

    double[] L2_zHEMV_A_nn;
    double[] L2_zHEMV_A_nn_pu;
    double[] L2_zHEMV_x_n1;
    double[] L2_zHEMV_x_n2;
    double[] L2_zHEMV_y_n1;
    double[] L2_zHEMV_y_n2;
    double[] L2_zHEMV_o_N;
    double[] L2_zHEMV_o_N2;

    float[] L2_cHBMV_A_nn;
    float[] L2_cHBMV_x_n1;
    float[] L2_cHBMV_x_n2;
    float[] L2_cHBMV_y_n1;
    float[] L2_cHBMV_y_n2;
    float[] L2_cHBMV_o_N;
    float[] L2_cHBMV_o_N2;

    double[] L2_zHBMV_A_nn;
    double[] L2_zHBMV_x_n1;
    double[] L2_zHBMV_x_n2;
    double[] L2_zHBMV_y_n1;
    double[] L2_zHBMV_y_n2;
    double[] L2_zHBMV_o_N;
    double[] L2_zHBMV_o_N2;

    float[] L2_sSYMV_A_nn;
    float[] L2_sSYMV_A_nn_pu;
    float[] L2_sSYMV_x_n1;
    float[] L2_sSYMV_x_n2;
    float[] L2_sSYMV_y_n1;
    float[] L2_sSYMV_y_n2;
    float[] L2_sSYMV_o_N;
    float[] L2_sSYMV_o_N2;

    double[] L2_dSYMV_A_nn;
    double[] L2_dSYMV_A_nn_pu;
    double[] L2_dSYMV_x_n1;
    double[] L2_dSYMV_x_n2;
    double[] L2_dSYMV_y_n1;
    double[] L2_dSYMV_y_n2;
    double[] L2_dSYMV_o_N;
    double[] L2_dSYMV_o_N2;

    float[] L2_sSBMV_A_nn;
    float[] L2_sSBMV_x_n1;
    float[] L2_sSBMV_x_n2;
    float[] L2_sSBMV_y_n1;
    float[] L2_sSBMV_y_n2;
    float[] L2_sSBMV_o_N;
    float[] L2_sSBMV_o_N2;

    double[] L2_dSBMV_A_nn;
    double[] L2_dSBMV_x_n1;
    double[] L2_dSBMV_x_n2;
    double[] L2_dSBMV_y_n1;
    double[] L2_dSBMV_y_n2;
    double[] L2_dSBMV_o_N;
    double[] L2_dSBMV_o_N2;

    float[] L2_sTRMV_A_nn;
    float[] L2_sTRMV_A_nn_pu;
    float[] L2_sTRMV_x_n1;
    float[] L2_sTRMV_x_n2;
    float[] L2_sTRMV_o_UN;
    float[] L2_sTRMV_o_UN2;
    float[] L2_sTRMV_o_UT;
    float[] L2_sTRMV_o_UH;

    double[] L2_dTRMV_A_nn;
    double[] L2_dTRMV_A_nn_pu;
    double[] L2_dTRMV_x_n1;
    double[] L2_dTRMV_x_n2;
    double[] L2_dTRMV_o_UN;
    double[] L2_dTRMV_o_UN2;
    double[] L2_dTRMV_o_UT;
    double[] L2_dTRMV_o_UH;

    float[] L2_cTRMV_A_nn;
    float[] L2_cTRMV_A_nn_pu;
    float[] L2_cTRMV_x_n1;
    float[] L2_cTRMV_x_n2;
    float[] L2_cTRMV_o_UN;
    float[] L2_cTRMV_o_UN2;
    float[] L2_cTRMV_o_UT;
    float[] L2_cTRMV_o_UH;

    double[] L2_zTRMV_A_nn;
    double[] L2_zTRMV_A_nn_pu;
    double[] L2_zTRMV_x_n1;
    double[] L2_zTRMV_x_n2;
    double[] L2_zTRMV_o_UN;
    double[] L2_zTRMV_o_UN2;
    double[] L2_zTRMV_o_UT;
    double[] L2_zTRMV_o_UH;

    float[] L2_sTBMV_A_nn;
    float[] L2_sTBMV_x_n1;
    float[] L2_sTBMV_x_n2;
    float[] L2_sTBMV_o_UN;
    float[] L2_sTBMV_o_UN2;
    float[] L2_sTBMV_o_UT;
    float[] L2_sTBMV_o_UH;

    double[] L2_dTBMV_A_nn;
    double[] L2_dTBMV_x_n1;
    double[] L2_dTBMV_x_n2;
    double[] L2_dTBMV_o_UN;
    double[] L2_dTBMV_o_UN2;
    double[] L2_dTBMV_o_UT;
    double[] L2_dTBMV_o_UH;

    float[] L2_cTBMV_A_nn;
    float[] L2_cTBMV_x_n1;
    float[] L2_cTBMV_x_n2;
    float[] L2_cTBMV_o_UN;
    float[] L2_cTBMV_o_UN2;
    float[] L2_cTBMV_o_UT;
    float[] L2_cTBMV_o_UH;

    double[] L2_zTBMV_A_nn;
    double[] L2_zTBMV_x_n1;
    double[] L2_zTBMV_x_n2;
    double[] L2_zTBMV_o_UN;
    double[] L2_zTBMV_o_UN2;
    double[] L2_zTBMV_o_UT;
    double[] L2_zTBMV_o_UH;

    float[] L2_sTRSV_A_nn;
    float[] L2_sTRSV_A_nn_pu;
    float[] L2_sTRSV_x_n1;
    float[] L2_sTRSV_x_n2;
    float[] L2_sTRSV_o_UN;
    float[] L2_sTRSV_o_UN2;
    float[] L2_sTRSV_o_UT;
    float[] L2_sTRSV_o_UH;

    double[] L2_dTRSV_A_nn;
    double[] L2_dTRSV_A_nn_pu;
    double[] L2_dTRSV_x_n1;
    double[] L2_dTRSV_x_n2;
    double[] L2_dTRSV_o_UN;
    double[] L2_dTRSV_o_UN2;
    double[] L2_dTRSV_o_UT;
    double[] L2_dTRSV_o_UH;

    float[] L2_cTRSV_A_nn;
    float[] L2_cTRSV_A_nn_pu;
    float[] L2_cTRSV_x_n1;
    float[] L2_cTRSV_x_n2;
    float[] L2_cTRSV_o_UN;
    float[] L2_cTRSV_o_UN2;
    float[] L2_cTRSV_o_UT;
    float[] L2_cTRSV_o_UH;

    double[] L2_zTRSV_A_nn;
    double[] L2_zTRSV_A_nn_pu;
    double[] L2_zTRSV_x_n1;
    double[] L2_zTRSV_x_n2;
    double[] L2_zTRSV_o_UN;
    double[] L2_zTRSV_o_UN2;
    double[] L2_zTRSV_o_UT;
    double[] L2_zTRSV_o_UH;

    float[] L2_sTBSV_A_nn;
    float[] L2_sTBSV_x_n1;
    float[] L2_sTBSV_x_n2;
    float[] L2_sTBSV_o_UN;
    float[] L2_sTBSV_o_UN2;
    float[] L2_sTBSV_o_UT;
    float[] L2_sTBSV_o_UH;

    double[] L2_dTBSV_A_nn;
    double[] L2_dTBSV_x_n1;
    double[] L2_dTBSV_x_n2;
    double[] L2_dTBSV_o_UN;
    double[] L2_dTBSV_o_UN2;
    double[] L2_dTBSV_o_UT;
    double[] L2_dTBSV_o_UH;

    float[] L2_cTBSV_A_nn;
    float[] L2_cTBSV_x_n1;
    float[] L2_cTBSV_x_n2;
    float[] L2_cTBSV_o_UN;
    float[] L2_cTBSV_o_UN2;
    float[] L2_cTBSV_o_UT;
    float[] L2_cTBSV_o_UH;

    double[] L2_zTBSV_A_nn;
    double[] L2_zTBSV_x_n1;
    double[] L2_zTBSV_x_n2;
    double[] L2_zTBSV_o_UN;
    double[] L2_zTBSV_o_UN2;
    double[] L2_zTBSV_o_UT;
    double[] L2_zTBSV_o_UH;

    float[] L2_sGER_A_mn;
    float[] L2_sGER_x_m1;
    float[] L2_sGER_x_m2;
    float[] L2_sGER_y_n1;
    float[] L2_sGER_y_n2;
    float[] L2_sGER_o_N;

    double[] L2_dGER_A_mn;
    double[] L2_dGER_x_m1;
    double[] L2_dGER_x_m2;
    double[] L2_dGER_y_n1;
    double[] L2_dGER_y_n2;
    double[] L2_dGER_o_N;

    float[] L2_cGERU_A_mn;
    float[] L2_cGERU_x_m1;
    float[] L2_cGERU_x_m2;
    float[] L2_cGERU_y_n1;
    float[] L2_cGERU_y_n2;
    float[] L2_cGERU_o_N;

    double[] L2_zGERU_A_mn;
    double[] L2_zGERU_x_m1;
    double[] L2_zGERU_x_m2;
    double[] L2_zGERU_y_n1;
    double[] L2_zGERU_y_n2;
    double[] L2_zGERU_o_N;

    float[] L2_cGERC_A_mn;
    float[] L2_cGERC_x_m1;
    float[] L2_cGERC_x_m2;
    float[] L2_cGERC_y_n1;
    float[] L2_cGERC_y_n2;
    float[] L2_cGERC_o_N;

    double[] L2_zGERC_A_mn;
    double[] L2_zGERC_x_m1;
    double[] L2_zGERC_x_m2;
    double[] L2_zGERC_y_n1;
    double[] L2_zGERC_y_n2;
    double[] L2_zGERC_o_N;

    float[] L2_cHER_A_nn;
    float[] L2_cHER_A_nn_pu;
    float[] L2_cHER_x_n1;
    float[] L2_cHER_x_n2;
    float[] L2_cHER_o_N;
    float[] L2_cHER_o_N_pu;

    double[] L2_zHER_A_nn;
    double[] L2_zHER_A_nn_pu;
    double[] L2_zHER_x_n1;
    double[] L2_zHER_x_n2;
    double[] L2_zHER_o_N;
    double[] L2_zHER_o_N_pu;

    float[] L2_cHER2_A_nn;
    float[] L2_cHER2_A_nn_pu;
    float[] L2_cHER2_x_n1;
    float[] L2_cHER2_x_n2;
    float[] L2_cHER2_y_n1;
    float[] L2_cHER2_y_n2;
    float[] L2_cHER2_o_N;
    float[] L2_cHER2_o_N_pu;

    double[] L2_zHER2_A_nn;
    double[] L2_zHER2_A_nn_pu;
    double[] L2_zHER2_x_n1;
    double[] L2_zHER2_x_n2;
    double[] L2_zHER2_y_n1;
    double[] L2_zHER2_y_n2;
    double[] L2_zHER2_o_N;
    double[] L2_zHER2_o_N_pu;

    float[] L2_sSYR_A_nn;
    float[] L2_sSYR_A_nn_pu;
    float[] L2_sSYR_x_n1;
    float[] L2_sSYR_x_n2;
    float[] L2_sSYR_o_N;
    float[] L2_sSYR_o_N_pu;

    double[] L2_dSYR_A_nn;
    double[] L2_dSYR_A_nn_pu;
    double[] L2_dSYR_x_n1;
    double[] L2_dSYR_x_n2;
    double[] L2_dSYR_o_N;
    double[] L2_dSYR_o_N_pu;

    float[] L2_sSYR2_A_nn;
    float[] L2_sSYR2_A_nn_pu;
    float[] L2_sSYR2_x_n1;
    float[] L2_sSYR2_x_n2;
    float[] L2_sSYR2_y_n1;
    float[] L2_sSYR2_y_n2;
    float[] L2_sSYR2_o_N;
    float[] L2_sSYR2_o_N_pu;

    double[] L2_dSYR2_A_nn;
    double[] L2_dSYR2_A_nn_pu;
    double[] L2_dSYR2_x_n1;
    double[] L2_dSYR2_x_n2;
    double[] L2_dSYR2_y_n1;
    double[] L2_dSYR2_y_n2;
    double[] L2_dSYR2_o_N;
    double[] L2_dSYR2_o_N_pu;

    float[] L3_sGEMM_A_mk;
    float[] L3_sGEMM_B_kn;
    float[] L3_sGEMM_C_mn;
    float[] L3_sGEMM_o_NN;
    float[] L3_sGEMM_A_km;
    float[] L3_sGEMM_B_nk;
    float[] L3_sGEMM_o_TT;
    float[] L3_sGEMM_o_HH;

    double[] L3_dGEMM_A_mk;
    double[] L3_dGEMM_B_kn;
    double[] L3_dGEMM_C_mn;
    double[] L3_dGEMM_o_NN;
    double[] L3_dGEMM_A_km;
    double[] L3_dGEMM_B_nk;
    double[] L3_dGEMM_o_TT;
    double[] L3_dGEMM_o_HH;
    float[] L3_cGEMM_A_mk;
    float[] L3_cGEMM_B_kn;
    float[] L3_cGEMM_C_mn;
    float[] L3_cGEMM_o_NN;
    float[] L3_cGEMM_A_km;
    float[] L3_cGEMM_B_nk;
    float[] L3_cGEMM_o_TT;
    float[] L3_cGEMM_o_HH;

    double[] L3_zGEMM_A_mk;
    double[] L3_zGEMM_B_kn;
    double[] L3_zGEMM_C_mn;
    double[] L3_zGEMM_o_NN;
    double[] L3_zGEMM_A_km;
    double[] L3_zGEMM_B_nk;
    double[] L3_zGEMM_o_TT;
    double[] L3_zGEMM_o_HH;

    float[] L3_sSYMM_A_mm;
    float[] L3_sSYMM_B_mn;
    float[] L3_sSYMM_C_mn;
    float[] L3_sSYMM_o_L;
    float[] L3_sSYMM_A_nn;
    float[] L3_sSYMM_o_R;

    double[] L3_dSYMM_A_mm;
    double[] L3_dSYMM_B_mn;
    double[] L3_dSYMM_C_mn;
    double[] L3_dSYMM_o_L;
    double[] L3_dSYMM_A_nn;
    double[] L3_dSYMM_o_R;

    float[] L3_cSYMM_A_mm;
    float[] L3_cSYMM_B_mn;
    float[] L3_cSYMM_C_mn;
    float[] L3_cSYMM_o_L;
    float[] L3_cSYMM_A_nn;
    float[] L3_cSYMM_o_R;

    double[] L3_zSYMM_A_mm;
    double[] L3_zSYMM_B_mn;
    double[] L3_zSYMM_C_mn;
    double[] L3_zSYMM_o_L;
    double[] L3_zSYMM_A_nn;
    double[] L3_zSYMM_o_R;

    float[] L3_cHEMM_A_mm;
    float[] L3_cHEMM_B_mn;
    float[] L3_cHEMM_C_mn;
    float[] L3_cHEMM_o_L;
    float[] L3_cHEMM_A_nn;
    float[] L3_cHEMM_o_R;

    double[] L3_zHEMM_A_mm;
    double[] L3_zHEMM_B_mn;
    double[] L3_zHEMM_C_mn;
    double[] L3_zHEMM_o_L;
    double[] L3_zHEMM_A_nn;
    double[] L3_zHEMM_o_R;

    float[] L3_sSYRK_A_nk;
    float[] L3_sSYRK_C_nn;
    float[] L3_sSYRK_o_N;
    float[] L3_sSYRK_A_kn;
    float[] L3_sSYRK_o_T;

    double[] L3_dSYRK_A_nk;
    double[] L3_dSYRK_C_nn;
    double[] L3_dSYRK_o_N;
    double[] L3_dSYRK_A_kn;
    double[] L3_dSYRK_o_T;

    float[] L3_cSYRK_A_nk;
    float[] L3_cSYRK_C_nn;
    float[] L3_cSYRK_o_N;
    float[] L3_cSYRK_A_kn;
    float[] L3_cSYRK_o_T;

    double[] L3_zSYRK_A_nk;
    double[] L3_zSYRK_C_nn;
    double[] L3_zSYRK_o_N;
    double[] L3_zSYRK_A_kn;
    double[] L3_zSYRK_o_T;

    float[] L3_cHERK_A_nk;
    float[] L3_cHERK_C_nn;
    float[] L3_cHERK_o_N;
    float[] L3_cHERK_A_kn;
    float[] L3_cHERK_o_H;

    double[] L3_zHERK_A_nk;
    double[] L3_zHERK_C_nn;
    double[] L3_zHERK_o_N;
    double[] L3_zHERK_A_kn;
    double[] L3_zHERK_o_H;

    float[] L3_sSYR2K_A_nk;
    float[] L3_sSYR2K_B_nk;
    float[] L3_sSYR2K_C_nn;
    float[] L3_sSYR2K_o_N;
    float[] L3_sSYR2K_A_kn;
    float[] L3_sSYR2K_B_kn;
    float[] L3_sSYR2K_o_T;

    double[] L3_dSYR2K_A_nk;
    double[] L3_dSYR2K_B_nk;
    double[] L3_dSYR2K_C_nn;
    double[] L3_dSYR2K_o_N;
    double[] L3_dSYR2K_A_kn;
    double[] L3_dSYR2K_B_kn;
    double[] L3_dSYR2K_o_T;

    float[] L3_cSYR2K_A_nk;
    float[] L3_cSYR2K_B_nk;
    float[] L3_cSYR2K_C_nn;
    float[] L3_cSYR2K_o_N;
    float[] L3_cSYR2K_A_kn;
    float[] L3_cSYR2K_B_kn;
    float[] L3_cSYR2K_o_T;

    double[] L3_zSYR2K_A_nk;
    double[] L3_zSYR2K_B_nk;
    double[] L3_zSYR2K_C_nn;
    double[] L3_zSYR2K_o_N;
    double[] L3_zSYR2K_A_kn;
    double[] L3_zSYR2K_B_kn;
    double[] L3_zSYR2K_o_T;

    float[] L3_cHER2K_A_nk;
    float[] L3_cHER2K_B_nk;
    float[] L3_cHER2K_C_nn;
    float[] L3_cHER2K_o_N;
    float[] L3_cHER2K_A_kn;
    float[] L3_cHER2K_B_kn;
    float[] L3_cHER2K_o_H;

    double[] L3_zHER2K_A_nk;
    double[] L3_zHER2K_B_nk;
    double[] L3_zHER2K_C_nn;
    double[] L3_zHER2K_o_N;
    double[] L3_zHER2K_A_kn;
    double[] L3_zHER2K_B_kn;
    double[] L3_zHER2K_o_H;

    float[] L3_sTRMM_A_mm;
    float[] L3_sTRMM_B_mn;
    float[] L3_sTRMM_o_LUN;
    float[] L3_sTRMM_A_nn;
    float[] L3_sTRMM_o_RLT;

    double[] L3_dTRMM_A_mm;
    double[] L3_dTRMM_B_mn;
    double[] L3_dTRMM_o_LUN;
    double[] L3_dTRMM_A_nn;
    double[] L3_dTRMM_o_RLT;

    float[] L3_cTRMM_A_mm;
    float[] L3_cTRMM_B_mn;
    float[] L3_cTRMM_o_LUN;
    float[] L3_cTRMM_A_nn;
    float[] L3_cTRMM_o_RLT;

    double[] L3_zTRMM_A_mm;
    double[] L3_zTRMM_B_mn;
    double[] L3_zTRMM_o_LUN;
    double[] L3_zTRMM_A_nn;
    double[] L3_zTRMM_o_RLT;

    float[] L3_sTRSM_A_mm;
    float[] L3_sTRSM_B_mn;
    float[] L3_sTRSM_o_LUN;
    float[] L3_sTRSM_A_nn;
    float[] L3_sTRSM_o_RLT;

    double[] L3_dTRSM_A_mm;
    double[] L3_dTRSM_B_mn;
    double[] L3_dTRSM_o_LUN;
    double[] L3_dTRSM_A_nn;
    double[] L3_dTRSM_o_RLT;

    float[] L3_cTRSM_A_mm;
    float[] L3_cTRSM_B_mn;
    float[] L3_cTRSM_o_LUN;
    float[] L3_cTRSM_A_nn;
    float[] L3_cTRSM_o_RLT;

    double[] L3_zTRSM_A_mm;
    double[] L3_zTRSM_B_mn;
    double[] L3_zTRSM_o_LUN;
    double[] L3_zTRSM_A_nn;
    double[] L3_zTRSM_o_RLT;

    //load dimensions of matrixes
    private void loadMNK() throws Exception {
        String data = "";
        int skipLine = 3;

        for (int i = 0; i < skipLine; i++) {
            data = mBufReader.readLine();
        }
        data = mBufReader.readLine();

        String[] results = data.split(" ");
        dM = Integer.parseInt(results[0]);
        dN = Integer.parseInt(results[1]);
        dK = Integer.parseInt(results[2]);
        KL = Integer.parseInt(results[3]);
        KU = Integer.parseInt(results[4]);
    }

    private float[] loadFloatArray() throws Exception {
        String data = "";
        int skipLine = 2;

        for (int i = 0; i < skipLine; i++) {
            data = mBufReader.readLine();
        }
        data = mBufReader.readLine();
        String[] results = data.split(", ");

        float[] floatArr = new float[results.length];
        for (int i = 0; i < floatArr.length; i++) {
            floatArr[i] = Float.parseFloat(results[i]);
        }

        return floatArr;
    }

    private double[] loadDoubleArray() throws Exception {
        String data = "";
        int skipLine = 2;

        for (int i = 0; i < skipLine; i++) {
            data = mBufReader.readLine();
        }
        data = mBufReader.readLine();
        String[] results = data.split(", ");

        double[] doubleArr = new double[results.length];
        for (int i = 0; i < doubleArr.length; i++) {
            doubleArr[i] = Double.parseDouble(results[i]);
        }
        return doubleArr;
    }

    //load data for L2 BLAS
    private void loadGEMVData() throws Exception {
        L2_sGEMV_A_mn = loadFloatArray();
        L2_sGEMV_x_n1 = loadFloatArray();
        L2_sGEMV_x_n2 = loadFloatArray();
        L2_sGEMV_y_m1 = loadFloatArray();
        L2_sGEMV_y_m2 = loadFloatArray();
        L2_sGEMV_o_N = loadFloatArray();
        L2_sGEMV_o_N2 = loadFloatArray();
        L2_sGEMV_o_T = loadFloatArray();
        L2_sGEMV_o_H = loadFloatArray();

        L2_dGEMV_A_mn = loadDoubleArray();
        L2_dGEMV_x_n1 = loadDoubleArray();
        L2_dGEMV_x_n2 = loadDoubleArray();
        L2_dGEMV_y_m1 = loadDoubleArray();
        L2_dGEMV_y_m2 = loadDoubleArray();
        L2_dGEMV_o_N = loadDoubleArray();
        L2_dGEMV_o_N2 = loadDoubleArray();
        L2_dGEMV_o_T = loadDoubleArray();
        L2_dGEMV_o_H = loadDoubleArray();

        L2_cGEMV_A_mn = loadFloatArray();
        L2_cGEMV_x_n1 = loadFloatArray();
        L2_cGEMV_x_n2 = loadFloatArray();
        L2_cGEMV_y_m1 = loadFloatArray();
        L2_cGEMV_y_m2 = loadFloatArray();
        L2_cGEMV_o_N = loadFloatArray();
        L2_cGEMV_o_N2 = loadFloatArray();
        L2_cGEMV_o_T = loadFloatArray();
        L2_cGEMV_o_H = loadFloatArray();

        L2_zGEMV_A_mn = loadDoubleArray();
        L2_zGEMV_x_n1 = loadDoubleArray();
        L2_zGEMV_x_n2 = loadDoubleArray();
        L2_zGEMV_y_m1 = loadDoubleArray();
        L2_zGEMV_y_m2 = loadDoubleArray();
        L2_zGEMV_o_N = loadDoubleArray();
        L2_zGEMV_o_N2 = loadDoubleArray();
        L2_zGEMV_o_T = loadDoubleArray();
        L2_zGEMV_o_H = loadDoubleArray();

    }

    private void loadGBMVData() throws Exception {
        L2_sGBMV_A_mn = loadFloatArray();
        L2_sGBMV_x_n1 = loadFloatArray();
        L2_sGBMV_x_n2 = loadFloatArray();
        L2_sGBMV_y_m1 = loadFloatArray();
        L2_sGBMV_y_m2 = loadFloatArray();
        L2_sGBMV_o_N = loadFloatArray();
        L2_sGBMV_o_N2 = loadFloatArray();
        L2_sGBMV_o_T = loadFloatArray();
        L2_sGBMV_o_H = loadFloatArray();

        L2_dGBMV_A_mn = loadDoubleArray();
        L2_dGBMV_x_n1 = loadDoubleArray();
        L2_dGBMV_x_n2 = loadDoubleArray();
        L2_dGBMV_y_m1 = loadDoubleArray();
        L2_dGBMV_y_m2 = loadDoubleArray();
        L2_dGBMV_o_N = loadDoubleArray();
        L2_dGBMV_o_N2 = loadDoubleArray();
        L2_dGBMV_o_T = loadDoubleArray();
        L2_dGBMV_o_H = loadDoubleArray();

        L2_cGBMV_A_mn = loadFloatArray();
        L2_cGBMV_x_n1 = loadFloatArray();
        L2_cGBMV_x_n2 = loadFloatArray();
        L2_cGBMV_y_m1 = loadFloatArray();
        L2_cGBMV_y_m2 = loadFloatArray();
        L2_cGBMV_o_N = loadFloatArray();
        L2_cGBMV_o_N2 = loadFloatArray();
        L2_cGBMV_o_T = loadFloatArray();
        L2_cGBMV_o_H = loadFloatArray();

        L2_zGBMV_A_mn = loadDoubleArray();
        L2_zGBMV_x_n1 = loadDoubleArray();
        L2_zGBMV_x_n2 = loadDoubleArray();
        L2_zGBMV_y_m1 = loadDoubleArray();
        L2_zGBMV_y_m2 = loadDoubleArray();
        L2_zGBMV_o_N = loadDoubleArray();
        L2_zGBMV_o_N2 = loadDoubleArray();
        L2_zGBMV_o_T = loadDoubleArray();
        L2_zGBMV_o_H = loadDoubleArray();
    }

    private void loadHEMVData() throws Exception {
        L2_cHEMV_A_nn = loadFloatArray();
        L2_cHEMV_A_nn_pu = loadFloatArray();
        L2_cHEMV_x_n1 = loadFloatArray();
        L2_cHEMV_x_n2 = loadFloatArray();
        L2_cHEMV_y_n1 = loadFloatArray();
        L2_cHEMV_y_n2 = loadFloatArray();
        L2_cHEMV_o_N = loadFloatArray();
        L2_cHEMV_o_N2 = loadFloatArray();

        L2_zHEMV_A_nn = loadDoubleArray();
        L2_zHEMV_A_nn_pu = loadDoubleArray();
        L2_zHEMV_x_n1 = loadDoubleArray();
        L2_zHEMV_x_n2 = loadDoubleArray();
        L2_zHEMV_y_n1 = loadDoubleArray();
        L2_zHEMV_y_n2 = loadDoubleArray();
        L2_zHEMV_o_N = loadDoubleArray();
        L2_zHEMV_o_N2 = loadDoubleArray();
    }

    private void loadHBMVData() throws Exception {
        L2_cHBMV_A_nn = loadFloatArray();
        L2_cHBMV_x_n1 = loadFloatArray();
        L2_cHBMV_x_n2 = loadFloatArray();
        L2_cHBMV_y_n1 = loadFloatArray();
        L2_cHBMV_y_n2 = loadFloatArray();
        L2_cHBMV_o_N = loadFloatArray();
        L2_cHBMV_o_N2 = loadFloatArray();

        L2_zHBMV_A_nn = loadDoubleArray();
        L2_zHBMV_x_n1 = loadDoubleArray();
        L2_zHBMV_x_n2 = loadDoubleArray();
        L2_zHBMV_y_n1 = loadDoubleArray();
        L2_zHBMV_y_n2 = loadDoubleArray();
        L2_zHBMV_o_N = loadDoubleArray();
        L2_zHBMV_o_N2 = loadDoubleArray();
    }

    private void loadSYMVData() throws Exception {
        L2_sSYMV_A_nn = loadFloatArray();
        L2_sSYMV_A_nn_pu = loadFloatArray();
        L2_sSYMV_x_n1 = loadFloatArray();
        L2_sSYMV_x_n2 = loadFloatArray();
        L2_sSYMV_y_n1 = loadFloatArray();
        L2_sSYMV_y_n2 = loadFloatArray();
        L2_sSYMV_o_N = loadFloatArray();
        L2_sSYMV_o_N2 = loadFloatArray();

        L2_dSYMV_A_nn = loadDoubleArray();
        L2_dSYMV_A_nn_pu = loadDoubleArray();
        L2_dSYMV_x_n1 = loadDoubleArray();
        L2_dSYMV_x_n2 = loadDoubleArray();
        L2_dSYMV_y_n1 = loadDoubleArray();
        L2_dSYMV_y_n2 = loadDoubleArray();
        L2_dSYMV_o_N = loadDoubleArray();
        L2_dSYMV_o_N2 = loadDoubleArray();
    }

    private void loadSBMVData() throws Exception {
        L2_sSBMV_A_nn = loadFloatArray();
        L2_sSBMV_x_n1 = loadFloatArray();
        L2_sSBMV_x_n2 = loadFloatArray();
        L2_sSBMV_y_n1 = loadFloatArray();
        L2_sSBMV_y_n2 = loadFloatArray();
        L2_sSBMV_o_N = loadFloatArray();
        L2_sSBMV_o_N2 = loadFloatArray();

        L2_dSBMV_A_nn = loadDoubleArray();
        L2_dSBMV_x_n1 = loadDoubleArray();
        L2_dSBMV_x_n2 = loadDoubleArray();
        L2_dSBMV_y_n1 = loadDoubleArray();
        L2_dSBMV_y_n2 = loadDoubleArray();
        L2_dSBMV_o_N = loadDoubleArray();
        L2_dSBMV_o_N2 = loadDoubleArray();
    }

    private void loadTRMVData() throws Exception {
        L2_sTRMV_A_nn = loadFloatArray();
        L2_sTRMV_A_nn_pu = loadFloatArray();
        L2_sTRMV_x_n1 = loadFloatArray();
        L2_sTRMV_x_n2 = loadFloatArray();
        L2_sTRMV_o_UN = loadFloatArray();
        L2_sTRMV_o_UN2 = loadFloatArray();
        L2_sTRMV_o_UT = loadFloatArray();
        L2_sTRMV_o_UH = loadFloatArray();

        L2_dTRMV_A_nn = loadDoubleArray();
        L2_dTRMV_A_nn_pu = loadDoubleArray();
        L2_dTRMV_x_n1 = loadDoubleArray();
        L2_dTRMV_x_n2 = loadDoubleArray();
        L2_dTRMV_o_UN = loadDoubleArray();
        L2_dTRMV_o_UN2 = loadDoubleArray();
        L2_dTRMV_o_UT = loadDoubleArray();
        L2_dTRMV_o_UH = loadDoubleArray();

        L2_cTRMV_A_nn = loadFloatArray();
        L2_cTRMV_A_nn_pu = loadFloatArray();
        L2_cTRMV_x_n1 = loadFloatArray();
        L2_cTRMV_x_n2 = loadFloatArray();
        L2_cTRMV_o_UN = loadFloatArray();
        L2_cTRMV_o_UN2 = loadFloatArray();
        L2_cTRMV_o_UT = loadFloatArray();
        L2_cTRMV_o_UH = loadFloatArray();

        L2_zTRMV_A_nn = loadDoubleArray();
        L2_zTRMV_A_nn_pu = loadDoubleArray();
        L2_zTRMV_x_n1 = loadDoubleArray();
        L2_zTRMV_x_n2 = loadDoubleArray();
        L2_zTRMV_o_UN = loadDoubleArray();
        L2_zTRMV_o_UN2 = loadDoubleArray();
        L2_zTRMV_o_UT = loadDoubleArray();
        L2_zTRMV_o_UH = loadDoubleArray();
    }

    private void loadTBMVData() throws Exception {
        L2_sTBMV_A_nn = loadFloatArray();
        L2_sTBMV_x_n1 = loadFloatArray();
        L2_sTBMV_x_n2 = loadFloatArray();
        L2_sTBMV_o_UN = loadFloatArray();
        L2_sTBMV_o_UN2 = loadFloatArray();
        L2_sTBMV_o_UT = loadFloatArray();
        L2_sTBMV_o_UH = loadFloatArray();

        L2_dTBMV_A_nn = loadDoubleArray();
        L2_dTBMV_x_n1 = loadDoubleArray();
        L2_dTBMV_x_n2 = loadDoubleArray();
        L2_dTBMV_o_UN = loadDoubleArray();
        L2_dTBMV_o_UN2 = loadDoubleArray();
        L2_dTBMV_o_UT = loadDoubleArray();
        L2_dTBMV_o_UH = loadDoubleArray();

        L2_cTBMV_A_nn = loadFloatArray();
        L2_cTBMV_x_n1 = loadFloatArray();
        L2_cTBMV_x_n2 = loadFloatArray();
        L2_cTBMV_o_UN = loadFloatArray();
        L2_cTBMV_o_UN2 = loadFloatArray();
        L2_cTBMV_o_UT = loadFloatArray();
        L2_cTBMV_o_UH = loadFloatArray();

        L2_zTBMV_A_nn = loadDoubleArray();
        L2_zTBMV_x_n1 = loadDoubleArray();
        L2_zTBMV_x_n2 = loadDoubleArray();
        L2_zTBMV_o_UN = loadDoubleArray();
        L2_zTBMV_o_UN2 = loadDoubleArray();
        L2_zTBMV_o_UT = loadDoubleArray();
        L2_zTBMV_o_UH = loadDoubleArray();
    }

    private void loadTRSVData() throws Exception {
        L2_sTRSV_A_nn = loadFloatArray();
        L2_sTRSV_A_nn_pu = loadFloatArray();
        L2_sTRSV_x_n1 = loadFloatArray();
        L2_sTRSV_x_n2 = loadFloatArray();
        L2_sTRSV_o_UN = loadFloatArray();
        L2_sTRSV_o_UN2 = loadFloatArray();
        L2_sTRSV_o_UT = loadFloatArray();
        L2_sTRSV_o_UH = loadFloatArray();

        L2_dTRSV_A_nn = loadDoubleArray();
        L2_dTRSV_A_nn_pu = loadDoubleArray();
        L2_dTRSV_x_n1 = loadDoubleArray();
        L2_dTRSV_x_n2 = loadDoubleArray();
        L2_dTRSV_o_UN = loadDoubleArray();
        L2_dTRSV_o_UN2 = loadDoubleArray();
        L2_dTRSV_o_UT = loadDoubleArray();
        L2_dTRSV_o_UH = loadDoubleArray();

        L2_cTRSV_A_nn = loadFloatArray();
        L2_cTRSV_A_nn_pu = loadFloatArray();
        L2_cTRSV_x_n1 = loadFloatArray();
        L2_cTRSV_x_n2 = loadFloatArray();
        L2_cTRSV_o_UN = loadFloatArray();
        L2_cTRSV_o_UN2 = loadFloatArray();
        L2_cTRSV_o_UT = loadFloatArray();
        L2_cTRSV_o_UH = loadFloatArray();

        L2_zTRSV_A_nn = loadDoubleArray();
        L2_zTRSV_A_nn_pu = loadDoubleArray();
        L2_zTRSV_x_n1 = loadDoubleArray();
        L2_zTRSV_x_n2 = loadDoubleArray();
        L2_zTRSV_o_UN = loadDoubleArray();
        L2_zTRSV_o_UN2 = loadDoubleArray();
        L2_zTRSV_o_UT = loadDoubleArray();
        L2_zTRSV_o_UH = loadDoubleArray();
    }

    private void loadTBSVData() throws Exception {
        L2_sTBSV_A_nn = loadFloatArray();
        L2_sTBSV_x_n1 = loadFloatArray();
        L2_sTBSV_x_n2 = loadFloatArray();
        L2_sTBSV_o_UN = loadFloatArray();
        L2_sTBSV_o_UN2 = loadFloatArray();
        L2_sTBSV_o_UT = loadFloatArray();
        L2_sTBSV_o_UH = loadFloatArray();

        L2_dTBSV_A_nn = loadDoubleArray();
        L2_dTBSV_x_n1 = loadDoubleArray();
        L2_dTBSV_x_n2 = loadDoubleArray();
        L2_dTBSV_o_UN = loadDoubleArray();
        L2_dTBSV_o_UN2 = loadDoubleArray();
        L2_dTBSV_o_UT = loadDoubleArray();
        L2_dTBSV_o_UH = loadDoubleArray();

        L2_cTBSV_A_nn = loadFloatArray();
        L2_cTBSV_x_n1 = loadFloatArray();
        L2_cTBSV_x_n2 = loadFloatArray();
        L2_cTBSV_o_UN = loadFloatArray();
        L2_cTBSV_o_UN2 = loadFloatArray();
        L2_cTBSV_o_UT = loadFloatArray();
        L2_cTBSV_o_UH = loadFloatArray();

        L2_zTBSV_A_nn = loadDoubleArray();
        L2_zTBSV_x_n1 = loadDoubleArray();
        L2_zTBSV_x_n2 = loadDoubleArray();
        L2_zTBSV_o_UN = loadDoubleArray();
        L2_zTBSV_o_UN2 = loadDoubleArray();
        L2_zTBSV_o_UT = loadDoubleArray();
        L2_zTBSV_o_UH = loadDoubleArray();
    }

    private void loadGERData() throws Exception {
        L2_sGER_A_mn = loadFloatArray();
        L2_sGER_x_m1 = loadFloatArray();
        L2_sGER_x_m2 = loadFloatArray();
        L2_sGER_y_n1 = loadFloatArray();
        L2_sGER_y_n2 = loadFloatArray();
        L2_sGER_o_N = loadFloatArray();

        L2_dGER_A_mn = loadDoubleArray();
        L2_dGER_x_m1 = loadDoubleArray();
        L2_dGER_x_m2 = loadDoubleArray();
        L2_dGER_y_n1 = loadDoubleArray();
        L2_dGER_y_n2 = loadDoubleArray();
        L2_dGER_o_N = loadDoubleArray();
    }

    private void loadGERUData() throws Exception {
        L2_cGERU_A_mn = loadFloatArray();
        L2_cGERU_x_m1 = loadFloatArray();
        L2_cGERU_x_m2 = loadFloatArray();
        L2_cGERU_y_n1 = loadFloatArray();
        L2_cGERU_y_n2 = loadFloatArray();
        L2_cGERU_o_N = loadFloatArray();

        L2_zGERU_A_mn = loadDoubleArray();
        L2_zGERU_x_m1 = loadDoubleArray();
        L2_zGERU_x_m2 = loadDoubleArray();
        L2_zGERU_y_n1 = loadDoubleArray();
        L2_zGERU_y_n2 = loadDoubleArray();
        L2_zGERU_o_N = loadDoubleArray();
    }

    private void loadGERCData() throws Exception {
        L2_cGERC_A_mn = loadFloatArray();
        L2_cGERC_x_m1 = loadFloatArray();
        L2_cGERC_x_m2 = loadFloatArray();
        L2_cGERC_y_n1 = loadFloatArray();
        L2_cGERC_y_n2 = loadFloatArray();
        L2_cGERC_o_N = loadFloatArray();

        L2_zGERC_A_mn = loadDoubleArray();
        L2_zGERC_x_m1 = loadDoubleArray();
        L2_zGERC_x_m2 = loadDoubleArray();
        L2_zGERC_y_n1 = loadDoubleArray();
        L2_zGERC_y_n2 = loadDoubleArray();
        L2_zGERC_o_N = loadDoubleArray();
    }

    private void loadHERData() throws Exception {
        L2_cHER_A_nn = loadFloatArray();
        L2_cHER_A_nn_pu = loadFloatArray();
        L2_cHER_x_n1 = loadFloatArray();
        L2_cHER_x_n2 = loadFloatArray();
        L2_cHER_o_N = loadFloatArray();
        L2_cHER_o_N_pu = loadFloatArray();

        L2_zHER_A_nn = loadDoubleArray();
        L2_zHER_A_nn_pu = loadDoubleArray();
        L2_zHER_x_n1 = loadDoubleArray();
        L2_zHER_x_n2 = loadDoubleArray();
        L2_zHER_o_N = loadDoubleArray();
        L2_zHER_o_N_pu = loadDoubleArray();
    }

    private void loadHER2Data() throws Exception {
        L2_cHER2_A_nn = loadFloatArray();
        L2_cHER2_A_nn_pu = loadFloatArray();
        L2_cHER2_x_n1 = loadFloatArray();
        L2_cHER2_x_n2 = loadFloatArray();
        L2_cHER2_y_n1 = loadFloatArray();
        L2_cHER2_y_n2 = loadFloatArray();
        L2_cHER2_o_N = loadFloatArray();
        L2_cHER2_o_N_pu = loadFloatArray();

        L2_zHER2_A_nn = loadDoubleArray();
        L2_zHER2_A_nn_pu = loadDoubleArray();
        L2_zHER2_x_n1 = loadDoubleArray();
        L2_zHER2_x_n2 = loadDoubleArray();
        L2_zHER2_y_n1 = loadDoubleArray();
        L2_zHER2_y_n2 = loadDoubleArray();
        L2_zHER2_o_N = loadDoubleArray();
        L2_zHER2_o_N_pu = loadDoubleArray();
    }

    private void loadSYRData() throws Exception {
        L2_sSYR_A_nn = loadFloatArray();
        L2_sSYR_A_nn_pu = loadFloatArray();
        L2_sSYR_x_n1 = loadFloatArray();
        L2_sSYR_x_n2 = loadFloatArray();
        L2_sSYR_o_N = loadFloatArray();
        L2_sSYR_o_N_pu = loadFloatArray();

        L2_dSYR_A_nn = loadDoubleArray();
        L2_dSYR_A_nn_pu = loadDoubleArray();
        L2_dSYR_x_n1 = loadDoubleArray();
        L2_dSYR_x_n2 = loadDoubleArray();
        L2_dSYR_o_N = loadDoubleArray();
        L2_dSYR_o_N_pu = loadDoubleArray();
    }

    private void loadSYR2Data() throws Exception {
        L2_sSYR2_A_nn = loadFloatArray();
        L2_sSYR2_A_nn_pu = loadFloatArray();
        L2_sSYR2_x_n1 = loadFloatArray();
        L2_sSYR2_x_n2 = loadFloatArray();
        L2_sSYR2_y_n1 = loadFloatArray();
        L2_sSYR2_y_n2 = loadFloatArray();
        L2_sSYR2_o_N = loadFloatArray();
        L2_sSYR2_o_N_pu = loadFloatArray();

        L2_dSYR2_A_nn = loadDoubleArray();
        L2_dSYR2_A_nn_pu = loadDoubleArray();
        L2_dSYR2_x_n1 = loadDoubleArray();
        L2_dSYR2_x_n2 = loadDoubleArray();
        L2_dSYR2_y_n1 = loadDoubleArray();
        L2_dSYR2_y_n2 = loadDoubleArray();
        L2_dSYR2_o_N = loadDoubleArray();
        L2_dSYR2_o_N_pu = loadDoubleArray();
    }

    //load data for L3 BLAS
    private void loadGEMMData() throws Exception {
        L3_sGEMM_A_mk = loadFloatArray();
        L3_sGEMM_B_kn = loadFloatArray();
        L3_sGEMM_C_mn = loadFloatArray();
        L3_sGEMM_o_NN = loadFloatArray();
        L3_sGEMM_A_km = loadFloatArray();
        L3_sGEMM_B_nk = loadFloatArray();
        L3_sGEMM_o_TT = loadFloatArray();
        L3_sGEMM_o_HH = loadFloatArray();

        L3_dGEMM_A_mk = loadDoubleArray();
        L3_dGEMM_B_kn = loadDoubleArray();
        L3_dGEMM_C_mn = loadDoubleArray();
        L3_dGEMM_o_NN = loadDoubleArray();
        L3_dGEMM_A_km = loadDoubleArray();
        L3_dGEMM_B_nk = loadDoubleArray();
        L3_dGEMM_o_TT = loadDoubleArray();
        L3_dGEMM_o_HH = loadDoubleArray();

        L3_cGEMM_A_mk = loadFloatArray();
        L3_cGEMM_B_kn = loadFloatArray();
        L3_cGEMM_C_mn = loadFloatArray();
        L3_cGEMM_o_NN = loadFloatArray();
        L3_cGEMM_A_km = loadFloatArray();
        L3_cGEMM_B_nk = loadFloatArray();
        L3_cGEMM_o_TT = loadFloatArray();
        L3_cGEMM_o_HH = loadFloatArray();

        L3_zGEMM_A_mk = loadDoubleArray();
        L3_zGEMM_B_kn = loadDoubleArray();
        L3_zGEMM_C_mn = loadDoubleArray();
        L3_zGEMM_o_NN = loadDoubleArray();
        L3_zGEMM_A_km = loadDoubleArray();
        L3_zGEMM_B_nk = loadDoubleArray();
        L3_zGEMM_o_TT = loadDoubleArray();
        L3_zGEMM_o_HH = loadDoubleArray();
    }

    private void loadSYMMData() throws Exception {
        L3_sSYMM_A_mm = loadFloatArray();
        L3_sSYMM_B_mn = loadFloatArray();
        L3_sSYMM_C_mn = loadFloatArray();
        L3_sSYMM_o_L = loadFloatArray();
        L3_sSYMM_A_nn = loadFloatArray();
        L3_sSYMM_o_R = loadFloatArray();

        L3_dSYMM_A_mm = loadDoubleArray();
        L3_dSYMM_B_mn = loadDoubleArray();
        L3_dSYMM_C_mn = loadDoubleArray();
        L3_dSYMM_o_L = loadDoubleArray();
        L3_dSYMM_A_nn = loadDoubleArray();
        L3_dSYMM_o_R = loadDoubleArray();

        L3_cSYMM_A_mm = loadFloatArray();
        L3_cSYMM_B_mn = loadFloatArray();
        L3_cSYMM_C_mn = loadFloatArray();
        L3_cSYMM_o_L = loadFloatArray();
        L3_cSYMM_A_nn = loadFloatArray();
        L3_cSYMM_o_R = loadFloatArray();

        L3_zSYMM_A_mm = loadDoubleArray();
        L3_zSYMM_B_mn = loadDoubleArray();
        L3_zSYMM_C_mn = loadDoubleArray();
        L3_zSYMM_o_L = loadDoubleArray();
        L3_zSYMM_A_nn = loadDoubleArray();
        L3_zSYMM_o_R = loadDoubleArray();
    }

    private void loadHEMMData() throws Exception {
        L3_cHEMM_A_mm = loadFloatArray();
        L3_cHEMM_B_mn = loadFloatArray();
        L3_cHEMM_C_mn = loadFloatArray();
        L3_cHEMM_o_L = loadFloatArray();
        L3_cHEMM_A_nn = loadFloatArray();
        L3_cHEMM_o_R = loadFloatArray();

        L3_zHEMM_A_mm = loadDoubleArray();
        L3_zHEMM_B_mn = loadDoubleArray();
        L3_zHEMM_C_mn = loadDoubleArray();
        L3_zHEMM_o_L = loadDoubleArray();
        L3_zHEMM_A_nn = loadDoubleArray();
        L3_zHEMM_o_R = loadDoubleArray();
    }

    private void loadSYRKData() throws Exception {
        L3_sSYRK_A_nk = loadFloatArray();
        L3_sSYRK_C_nn = loadFloatArray();
        L3_sSYRK_o_N = loadFloatArray();
        L3_sSYRK_A_kn = loadFloatArray();
        L3_sSYRK_o_T = loadFloatArray();

        L3_dSYRK_A_nk = loadDoubleArray();
        L3_dSYRK_C_nn = loadDoubleArray();
        L3_dSYRK_o_N = loadDoubleArray();
        L3_dSYRK_A_kn = loadDoubleArray();
        L3_dSYRK_o_T = loadDoubleArray();

        L3_cSYRK_A_nk = loadFloatArray();
        L3_cSYRK_C_nn = loadFloatArray();
        L3_cSYRK_o_N = loadFloatArray();
        L3_cSYRK_A_kn = loadFloatArray();
        L3_cSYRK_o_T = loadFloatArray();

        L3_zSYRK_A_nk = loadDoubleArray();
        L3_zSYRK_C_nn = loadDoubleArray();
        L3_zSYRK_o_N = loadDoubleArray();
        L3_zSYRK_A_kn = loadDoubleArray();
        L3_zSYRK_o_T = loadDoubleArray();
    }

    private void loadHERKData() throws Exception {
        L3_cHERK_A_nk = loadFloatArray();
        L3_cHERK_C_nn = loadFloatArray();
        L3_cHERK_o_N = loadFloatArray();
        L3_cHERK_A_kn = loadFloatArray();
        L3_cHERK_o_H = loadFloatArray();

        L3_zHERK_A_nk = loadDoubleArray();
        L3_zHERK_C_nn = loadDoubleArray();
        L3_zHERK_o_N = loadDoubleArray();
        L3_zHERK_A_kn = loadDoubleArray();
        L3_zHERK_o_H = loadDoubleArray();
    }

    private void loadSYR2KData() throws Exception {
        L3_sSYR2K_A_nk = loadFloatArray();
        L3_sSYR2K_B_nk = loadFloatArray();
        L3_sSYR2K_C_nn = loadFloatArray();
        L3_sSYR2K_o_N = loadFloatArray();
        L3_sSYR2K_A_kn = loadFloatArray();
        L3_sSYR2K_B_kn = loadFloatArray();
        L3_sSYR2K_o_T = loadFloatArray();

        L3_dSYR2K_A_nk = loadDoubleArray();
        L3_dSYR2K_B_nk = loadDoubleArray();
        L3_dSYR2K_C_nn = loadDoubleArray();
        L3_dSYR2K_o_N = loadDoubleArray();
        L3_dSYR2K_A_kn = loadDoubleArray();
        L3_dSYR2K_B_kn = loadDoubleArray();
        L3_dSYR2K_o_T = loadDoubleArray();

        L3_cSYR2K_A_nk = loadFloatArray();
        L3_cSYR2K_B_nk = loadFloatArray();
        L3_cSYR2K_C_nn = loadFloatArray();
        L3_cSYR2K_o_N = loadFloatArray();
        L3_cSYR2K_A_kn = loadFloatArray();
        L3_cSYR2K_B_kn = loadFloatArray();
        L3_cSYR2K_o_T = loadFloatArray();

        L3_zSYR2K_A_nk = loadDoubleArray();
        L3_zSYR2K_B_nk = loadDoubleArray();
        L3_zSYR2K_C_nn = loadDoubleArray();
        L3_zSYR2K_o_N = loadDoubleArray();
        L3_zSYR2K_A_kn = loadDoubleArray();
        L3_zSYR2K_B_kn = loadDoubleArray();
        L3_zSYR2K_o_T = loadDoubleArray();
    }

    private void loadHER2KData() throws Exception {
        L3_cHER2K_A_nk = loadFloatArray();
        L3_cHER2K_B_nk = loadFloatArray();
        L3_cHER2K_C_nn = loadFloatArray();
        L3_cHER2K_o_N = loadFloatArray();
        L3_cHER2K_A_kn = loadFloatArray();
        L3_cHER2K_B_kn = loadFloatArray();
        L3_cHER2K_o_H = loadFloatArray();

        L3_zHER2K_A_nk = loadDoubleArray();
        L3_zHER2K_B_nk = loadDoubleArray();
        L3_zHER2K_C_nn = loadDoubleArray();
        L3_zHER2K_o_N = loadDoubleArray();
        L3_zHER2K_A_kn = loadDoubleArray();
        L3_zHER2K_B_kn = loadDoubleArray();
        L3_zHER2K_o_H = loadDoubleArray();
    }

    private void loadTRMMData() throws Exception {
        L3_sTRMM_A_mm = loadFloatArray();
        L3_sTRMM_B_mn = loadFloatArray();
        L3_sTRMM_o_LUN = loadFloatArray();
        L3_sTRMM_A_nn = loadFloatArray();
        L3_sTRMM_o_RLT = loadFloatArray();

        L3_dTRMM_A_mm = loadDoubleArray();
        L3_dTRMM_B_mn = loadDoubleArray();
        L3_dTRMM_o_LUN = loadDoubleArray();
        L3_dTRMM_A_nn = loadDoubleArray();
        L3_dTRMM_o_RLT = loadDoubleArray();

        L3_cTRMM_A_mm = loadFloatArray();
        L3_cTRMM_B_mn = loadFloatArray();
        L3_cTRMM_o_LUN = loadFloatArray();
        L3_cTRMM_A_nn = loadFloatArray();
        L3_cTRMM_o_RLT = loadFloatArray();

        L3_zTRMM_A_mm = loadDoubleArray();
        L3_zTRMM_B_mn = loadDoubleArray();
        L3_zTRMM_o_LUN = loadDoubleArray();
        L3_zTRMM_A_nn = loadDoubleArray();
        L3_zTRMM_o_RLT = loadDoubleArray();
    }

    private void loadTRSMData() throws Exception {
        L3_sTRSM_A_mm = loadFloatArray();
        L3_sTRSM_B_mn = loadFloatArray();
        L3_sTRSM_o_LUN = loadFloatArray();
        L3_sTRSM_A_nn = loadFloatArray();
        L3_sTRSM_o_RLT = loadFloatArray();

        L3_dTRSM_A_mm = loadDoubleArray();
        L3_dTRSM_B_mn = loadDoubleArray();
        L3_dTRSM_o_LUN = loadDoubleArray();
        L3_dTRSM_A_nn = loadDoubleArray();
        L3_dTRSM_o_RLT = loadDoubleArray();

        L3_cTRSM_A_mm = loadFloatArray();
        L3_cTRSM_B_mn = loadFloatArray();
        L3_cTRSM_o_LUN = loadFloatArray();
        L3_cTRSM_A_nn = loadFloatArray();
        L3_cTRSM_o_RLT = loadFloatArray();

        L3_zTRSM_A_mm = loadDoubleArray();
        L3_zTRSM_B_mn = loadDoubleArray();
        L3_zTRSM_o_LUN = loadDoubleArray();
        L3_zTRSM_A_nn = loadDoubleArray();
        L3_zTRSM_o_RLT = loadDoubleArray();
    }

    void loadData(Context ctx) throws Exception {
        InputStream is = ctx.getAssets().open("BLASData.txt");
        mBufReader = new BufferedReader(new InputStreamReader(is));

        //Load data sequentially
        loadMNK();
        loadGEMVData();
        loadGBMVData();
        loadHEMVData();
        loadHBMVData();
        loadSYMVData();
        loadSBMVData();
        loadTRMVData();
        loadTBMVData();
        loadTRSVData();
        loadTBSVData();
        loadGERData();
        loadGERUData();
        loadGERCData();
        loadHERData();
        loadHER2Data();
        loadSYRData();
        loadSYR2Data();
        loadGEMMData();
        loadSYMMData();
        loadHEMMData();
        loadSYRKData();
        loadHERKData();
        loadSYR2KData();
        loadHER2KData();
        loadTRMMData();
        loadTRSMData();
    }

}
