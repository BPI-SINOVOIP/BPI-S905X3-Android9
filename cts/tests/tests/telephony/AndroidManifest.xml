<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2007 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="android.telephony.cts">

    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <uses-permission android:name="android.permission.WRITE_CONTACTS" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.SEND_SMS" />
    <uses-permission android:name="android.permission.READ_SMS" />
    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.telephony.embms.cts.permission.TEST_BROADCAST"/>

    <permission android:name="android.telephony.embms.cts.permission.TEST_BROADCAST"
                android:protectionLevel="signature"/>
    <application>
        <provider android:name="android.telephony.cts.MmsPduProvider"
                  android:authorities="telephonyctstest"
                  android:grantUriPermissions="true" />

        <!-- SmsReceiver, MmsReceiver, ComposeSmsActivity, HeadlessSmsSendService together make
        this a valid SmsApplication (that can be set as the default SMS app). Although some of these
        classes don't do anything, they are needed to make this a valid candidate for default SMS
        app. -->
        <!-- BroadcastReceiver that listens for incoming SMS messages -->
        <receiver android:name=".SmsReceiver"
            android:permission="android.permission.BROADCAST_SMS">
            <intent-filter>
                <action android:name="android.provider.Telephony.SMS_DELIVER" />
            </intent-filter>
        </receiver>

        <!-- BroadcastReceiver that listens for incoming MMS messages -->
        <receiver android:name=".MmsReceiver"
            android:permission="android.permission.BROADCAST_WAP_PUSH">
            <intent-filter>
                <action android:name="android.provider.Telephony.WAP_PUSH_DELIVER" />
                <data android:mimeType="application/vnd.wap.mms-message" />
            </intent-filter>
        </receiver>

        <!-- Activity that allows the user to send new SMS/MMS messages -->
        <activity android:name=".ComposeSmsActivity" >
            <intent-filter>
                <action android:name="android.intent.action.SEND" />
                <action android:name="android.intent.action.SENDTO" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="sms" />
                <data android:scheme="smsto" />
                <data android:scheme="mms" />
                <data android:scheme="mmsto" />
            </intent-filter>
        </activity>

        <!-- Service that delivers messages from the phone "quick response" -->
        <service android:name=".HeadlessSmsSendService"
            android:permission="android.permission.SEND_RESPOND_VIA_MESSAGE"
            android:exported="true" >
            <intent-filter>
                <action android:name="android.intent.action.RESPOND_VIA_MESSAGE" />
                <category android:name="android.intent.category.DEFAULT" />
                <data android:scheme="sms" />
                <data android:scheme="smsto" />
                <data android:scheme="mms" />
                <data android:scheme="mmsto" />
            </intent-filter>
        </service>

        <service
          android:name="android.telephony.cts.StubInCallService"
          android:permission="android.permission.BIND_INCALL_SERVICE">
            <intent-filter>
                <action android:name="android.telecom.InCallService"/>
            </intent-filter>
            <meta-data
              android:name="android.telecom.IN_CALL_SERVICE_UI"
              android:value="true"/>
        </service>

        <service
          android:name=".MockVisualVoicemailService"
          android:permission="android.permission.BIND_VISUAL_VOICEMAIL_SERVICE"
          android:exported="true">
            <intent-filter>
                <action android:name="android.telephony.VisualVoicemailService"/>
            </intent-filter>

        </service>

        <service
            android:name=".PermissionlessVisualVoicemailService"
            android:enabled="false"
            android:exported="true">
            <intent-filter>
                <action android:name="android.telephony.VisualVoicemailService"/>
            </intent-filter>

        </service>

        <activity android:name="android.telephony.cts.StubDialerActvity">
            <intent-filter>
                <action android:name="android.intent.action.DIAL"/>
                <data android:scheme="tel"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.DIAL"/>
            </intent-filter>
        </activity>

        <activity android:name="android.telephony.euicc.cts.EuiccTestResolutionActivity"/>

        <activity android:name="android.telephony.euicc.cts.EuiccResolutionActivity"/>

        <uses-library android:name="android.test.runner" />


        <!-- This is the receiver defined by the MBMS api. -->
        <receiver
            android:name="android.telephony.mbms.MbmsDownloadReceiver"
            android:permission="android.telephony.cts.embmstestapp.CTS_DOWNLOAD_PERMISSION"
            android:enabled="true"
            android:exported="true">
        </receiver>

        <provider
            android:name="android.telephony.mbms.MbmsTempFileProvider"
            android:authorities="android.telephony.mbms.cts"
            android:exported="false"
            android:grantUriPermissions="true">
        </provider>

        <meta-data android:name="mbms-streaming-service-override"
                   android:value="android.telephony.cts.embmstestapp/.CtsStreamingService"/>
        <meta-data android:name="mbms-download-service-override"
                   android:value="android.telephony.cts.embmstestapp/.CtsDownloadService"/>
        <meta-data
            android:name="mbms-file-provider-authority"
            android:value="android.telephony.mbms.cts"/>
    </application>

    <instrumentation android:name="android.support.test.runner.AndroidJUnitRunner"
                     android:targetPackage="android.telephony.cts"
                     android:label="CTS tests of android.telephony">
        <meta-data android:name="listener"
            android:value="com.android.cts.runner.CtsTestRunListener" />
    </instrumentation>

</manifest>

