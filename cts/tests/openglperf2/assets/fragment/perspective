/*
 * Copyright (C) 2013 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
precision mediump float;
uniform vec3 u_LightPos;
uniform sampler2D u_Texture;
varying vec3 v_Position;
varying vec3 v_Normal;
varying vec2 v_TexCoordinate;
void main() {
  // Get a lighting direction vector from the light to the vertex.
  vec3 lightVector = normalize(u_LightPos - v_Position);
  // Calculate the dot product of the light vector and vertex normal.
  float diffuse = max(dot(lightVector, v_Normal), 0.0);
  // Add ambient lighting
  diffuse = diffuse + 0.25;
  // Multiply the diffuse illumination and texture to get final output color.
  gl_FragColor = (diffuse * texture2D(u_Texture, v_TexCoordinate));
}