<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2014 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<resources>
    <!-- Known ATV devices do not support rotation, force no rotation by default. -->
    <bool name="config_forceDefaultOrientation">true</bool>

    <!-- Flag indicating that the media framework should support playing of sounds on volume
         key usage.  This adds noticeable additional overhead to volume key processing, so
         is disableable for products for which it is irrelevant. -->
    <bool name="config_useVolumeKeySounds">false</bool>

    <!-- Disable AUDIO_BECOMING_NOISY notifications. -->
    <bool name="config_sendAudioBecomingNoisy">false</bool>

    <!-- This device is data-only. -->
    <bool name="config_voice_capable">false</bool>

    <!-- This device does not allow sms service. -->
    <bool name="config_sms_capable">false</bool>

    <!-- Control the default UI mode type to use when there is no other type override
         happening.  One of the following values (See Configuration.java):
             1  UI_MODE_TYPE_NORMAL
             4  UI_MODE_TYPE_TELEVISION
             5  UI_MODE_TYPE_APPLIANCE
         Any other values will have surprising consequences. -->
    <integer name="config_defaultUiModeType">4</integer>

    <!-- default device has recents property -->
    <bool name="config_hasRecents">false</bool>

    <!-- Control the behavior when the user long presses the home button.
            0 - Nothing
            1 - Launch all apps intent
            2 - Launch assist intent
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHomeBehavior">1</integer>

    <!-- Override configuration check for dpad so that we always appear to have one -->
    <bool name="config_hasPermanentDpad">true</bool>

    <bool name="config_defaultInTouchMode">false</bool>

    <!-- Launcher customization requires AppWidgetService, but otherwise
         home screen widgets are not supported on TV -->
    <bool name="config_enableAppWidgetService">true</bool>

    <!-- Package of the unbundled tv remote service which can connect to tv remote provider -->
    <string translatable="false" name="config_tvRemoteServicePackage">com.google.android.tv.remote.service</string>

    <!-- Default service to enable with accessibility shortcut [DO NOT TRANSLATE] -->
    <string name="config_defaultAccessibilityService" translatable="false">com.google.android.marvin.talkback/.TalkBackService</string>

    <!-- The component name, flattened to a string, for the default autofill service
         to  enabled for an user. This service must be trusted, as it can be activated
         without explicit consent of the user. If no autofill service with the
          specified name exists on the device, autofill will be disabled by default.
    -->
    <string name="config_defaultAutofillService" translatable="false">com.google.android.gms/.autofill.service.AutofillService</string>

   <!-- The list of IMEs which should be disabled until used.
         This function suppresses update notifications for these pre-installed apps.
         We need to set this configuration carefully that they should not have functionarities
         other than "IME" or "Spell Checker". In InputMethodManagerService,
         the listed IMEs are disabled until used when all of the following conditions are met.
         1. Not selected as an enabled IME in the Settings
         2. Not selected as a spell checker in the Settings
         3. Installed
         4. A pre-installed IME
         5. Not enabled
         And the disabled_until_used state for an IME is released by InputMethodManagerService
         when the IME is selected as an enabled IME. -->
    <string-array name="config_disabledUntilUsedPreinstalledImes" translatable="false">
        <item>com.google.android.inputmethod.latin</item>
        <item>com.google.android.apps.inputmethod.hindi</item>
        <item>com.google.android.apps.inputmethod.zhuyin</item>
        <item>com.google.android.inputmethod.japanese</item>
        <item>com.google.android.inputmethod.korean</item>
        <item>com.google.android.inputmethod.pinyin</item>
    </string-array>

    <!-- Whether to keep background restricted profiles running after exiting. If set to false,
         restricted profiles may be put into stopped state as soon as the switch back to primary
         happens.
         Can be overridden with android.provider.Settings.Global.KEEP_PROFILE_IN_BACKGROUND. -->
    <bool name="config_keepRestrictedProfilesInBackground">false</bool>


    <!-- An array of packages which can listen for notifications on low ram devices. -->
    <string-array translatable="false" name="config_allowedManagedServicesOnLowRamDevices">
        <item>com.google.android.tvrecommendations</item>
    </string-array>
</resources>
