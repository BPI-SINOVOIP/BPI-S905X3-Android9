/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.tests.bar@1.0;

import android.hardware.tests.foo@1.0::IFoo;
import android.hardware.tests.foo@1.0::ISimple;
import android.hardware.tests.foo@1.0::Abc;
import android.hardware.tests.foo@1.0::Unrelated;

import IComplicated;

interface IBar extends android.hardware.tests.foo@1.0::IFoo {

    typedef android.hardware.tests.foo@1.0::IFoo FunkyAlias;
    typedef Unrelated Related;

    struct SomethingRelated {
        Related myRelated;
    };

    thisIsNew();
    expectNullHandle(handle h, Abc xyz) generates (bool hIsNull, bool xyzHasNull);
    takeAMask(BitField bf, bitfield<BitField> first, MyMask second, Mask third)
            generates (BitField bf, uint8_t first, uint8_t second, uint8_t third);

    haveAInterface(ISimple i) generates (ISimple i);
};
