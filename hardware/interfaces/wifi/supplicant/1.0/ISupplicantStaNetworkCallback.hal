/*
 * Copyright 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.wifi.supplicant@1.0;

/**
 * Callback Interface exposed by the supplicant service
 * for each network (ISupplicantStaNetwork).
 *
 * Clients need to host an instance of this HIDL interface object and
 * pass a reference of the object to the supplicant via the
 * corresponding |ISupplicantStaNetwork.registerCallback| method.
 */
interface ISupplicantStaNetworkCallback {
  /** Params of |onNetworkEapSimGsmAuthRequest| request. (Refer RFC 4186) */
  typedef uint8_t[16] GsmRand;
  struct NetworkRequestEapSimGsmAuthParams {
    vec<GsmRand> rands;
  };

  /** Params of |onNetworkEapSimUmtsAuthRequest| request. (Refer RFC 4187) */
  struct NetworkRequestEapSimUmtsAuthParams {
    uint8_t[16] rand;
    uint8_t[16] autn;
  };

  /**
   * Used to request EAP GSM SIM authentication for this particular network.
   *
   * The response for the request must be sent using the corresponding
   * |ISupplicantNetwork.sendNetworkEapSimGsmAuthResponse| call.
   *
   * @param params Params associated with the request.
   */
  oneway onNetworkEapSimGsmAuthRequest(
      NetworkRequestEapSimGsmAuthParams params);

  /**
   * Used to request EAP UMTS SIM authentication for this particular network.
   *
   * The response for the request must be sent using the corresponding
   * |ISupplicantNetwork.sendNetworkEapSimUmtsAuthResponse| call.
   *
   * @param params Params associated with the request.
   */
  oneway onNetworkEapSimUmtsAuthRequest(
      NetworkRequestEapSimUmtsAuthParams params);

  /**
   * Used to request EAP Identity for this particular network.
   *
   * The response for the request must be sent using the corresponding
   * |ISupplicantNetwork.sendNetworkEapIdentityResponse| call.
   */
  oneway onNetworkEapIdentityRequest();
};
