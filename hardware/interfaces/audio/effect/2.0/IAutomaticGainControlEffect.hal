/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.audio.effect@2.0;

import android.hardware.audio.common@2.0;
import IEffect;

interface IAutomaticGainControlEffect extends IEffect {
    /**
     * Sets target level in millibels.
     */
    setTargetLevel(int16_t targetLevelMb) generates (Result retval);

    /**
     * Gets target level.
     */
    getTargetLevel() generates (Result retval, int16_t targetLevelMb);

    /**
     * Sets gain in the compression range in millibels.
     */
    setCompGain(int16_t compGainMb) generates (Result retval);

    /**
     * Gets gain in the compression range.
     */
    getCompGain() generates (Result retval, int16_t compGainMb);

    /**
     * Enables or disables limiter.
     */
    setLimiterEnabled(bool enabled) generates (Result retval);

    /**
     * Returns whether limiter is enabled.
     */
    isLimiterEnabled() generates (Result retval, bool enabled);

    struct AllProperties {
        int16_t targetLevelMb;
        int16_t compGainMb;
        bool limiterEnabled;
    };

    /**
     * Sets all properties at once.
     */
    setAllProperties(AllProperties properties) generates (Result retval);

    /**
     * Gets all properties at once.
     */
    getAllProperties() generates (Result retval, AllProperties properties);
};
