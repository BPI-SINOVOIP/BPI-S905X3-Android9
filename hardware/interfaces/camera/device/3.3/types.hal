/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.hardware.camera.device@3.3;

import android.hardware.camera.device@3.2::DataspaceFlags;
import android.hardware.camera.device@3.2::HalStream;

/**
 * HalStream:
 *
 * The camera HAL's response to each requested stream configuration.
 *
 * This version extends the @3.2 HalStream with the overrideDataspace
 * field
 */
struct HalStream {
    /**
     * The definition of HalStream from the prior version.
     */
    @3.2::HalStream v3_2;

    /**
     * An override dataSpace for the buffers in this stream.
     *
     * The HAL must respect the requested dataSpace in Stream unless it is
     * IMPLEMENTATION_DEFINED, in which case the override dataSpace here must be
     * used by the client instead, for this stream. This allows cross-platform
     * HALs to use a specific dataSpace since IMPLEMENTATION_DEFINED formats often
     * require device-specific information for correct selection. In all other cases, the
     * overrideFormat must match the requested format.
     */
    DataspaceFlags overrideDataSpace;
};

/**
 * HalStreamConfiguration:
 *
 * Identical to @3.2::HalStreamConfiguration, except that it contains @3.3::HalStream entries.
 *
 */
struct HalStreamConfiguration {
    vec<HalStream> streams;
};
