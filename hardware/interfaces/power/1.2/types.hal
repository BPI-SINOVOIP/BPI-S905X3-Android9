/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package android.hardware.power@1.2;

import @1.0::PowerHint;

/** Power hint identifiers passed to powerHintAsync_1_2() */
enum PowerHint : @1.0::PowerHint {
   /**
    * This hint indicates that audio stream is being started. Can be used
    * for device specific optimizations during starting audio stream. The
    * data parameter is non-zero when stream starts and zero when audio
    * stream setup is complete.
    */
    AUDIO_STREAMING,

   /**
    * This hint indicates that low latency audio is active. Can be used
    * for device specific optimizations towards low latency audio. The
    * data parameter is non-zero when low latency audio starts and
    * zero when ends.
    */
    AUDIO_LOW_LATENCY,

   /**
    * These hint indicates that camera is being launched. Can be used
    * for device specific optimizations during camera launch. The data
    * parameter is non-zero when camera launch starts and zero when launch
    * is complete.
    */
    CAMERA_LAUNCH,

   /**
    * This hint indicates that camera stream is being started. Can be used
    * for device specific optimizations during starting camera stream. The
    * data parameter is non-zero when stream starts and zero when ends.
    */
    CAMERA_STREAMING,

   /**
    * This hint indicates that camera shot is being taken. Can be used
    * for device specific optimizations during taking camera shot. The
    * data parameter is non-zero when camera shot starts and zero when ends.
    */
    CAMERA_SHOT,
};
